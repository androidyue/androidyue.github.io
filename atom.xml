<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Thinkblog]]></title>
  <link href="http://androidyue.github.io/atom.xml" rel="self"/>
  <link href="http://androidyue.github.io/"/>
  <updated>2013-12-14T19:08:10+08:00</updated>
  <id>http://androidyue.github.io/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[连接宽带错误769：无法连接到指定目标]]></title>
    <link href="http://androidyue.github.io/blog/2013/12/14/lian-jie-kuan-dai-cuo-wu-769-wu-fa-lian-jie-dao-zhi-ding-mu-biao/"/>
    <updated>2013-12-14T18:59:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/12/14/lian-jie-kuan-dai-cuo-wu-769-wu-fa-lian-jie-dao-zhi-ding-mu-biao</id>
    <content type="html"><![CDATA[<p>连接宽带错误769：无法连接到指定目标<br/>
相关信息：找不到netcfg.hlp<br/>
原因：禁用了本地连接<br/>
解决方法：启用本地连接</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[适宜的环境]]></title>
    <link href="http://androidyue.github.io/blog/2013/12/14/gua-yi-de-huan-jing/"/>
    <updated>2013-12-14T18:41:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/12/14/gua-yi-de-huan-jing</id>
    <content type="html"><![CDATA[<p>适宜的环境，这里介绍适宜的温度和湿度，数据来自TANITA湿度计的附带资料</p>

<h2>夏季</h2>

<ul>
<li>温度：21-25 摄氏度</li>
<li>湿度：55-65%

<h2>冬季</h2></li>
<li>温度：16-20 摄氏度</li>
<li>湿度：45-55%</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start InstalledAppDetails Activity With A Specific Package Name]]></title>
    <link href="http://androidyue.github.io/blog/2013/12/11/start-installedappdetails-activity-with-a-specific-package-name/"/>
    <updated>2013-12-11T16:49:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/12/11/start-installedappdetails-activity-with-a-specific-package-name</id>
    <content type="html"><![CDATA[<p>This trick works. It&rsquo;s really easy.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//Let take com.mx.browser as the package name</span>
</span><span class='line'><span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">provider</span><span class="o">.</span><span class="na">Settings</span><span class="o">.</span><span class="na">ACTION_APPLICATION_DETAILS_SETTINGS</span><span class="o">,</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">&quot;package:com.mx.browser&quot;</span><span class="o">));</span>
</span><span class='line'><span class="n">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here is the javadoc of android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS</p>

<blockquote><p>Activity Action: Show screen of details about a particular application.<br/>
In some cases, a matching Activity may not exist, so ensure you safeguard against this.<br/>
Input: The Intent&rsquo;s data URI specifies the application package name to be shown, with the &ldquo;package&rdquo; scheme. That is &ldquo;package:com.my.app&rdquo;.<br/>
Output: Nothing.</p></blockquote>

<p>A glance at how InstalledAppDetails get packageName</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">final</span> <span class="n">Bundle</span> <span class="n">args</span> <span class="o">=</span> <span class="n">getArguments</span><span class="o">();</span>
</span><span class='line'><span class="n">String</span> <span class="n">packageName</span> <span class="o">=</span> <span class="o">(</span><span class="n">args</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="n">args</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">ARG_PACKAGE_NAME</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">packageName</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="o">(</span><span class="n">args</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span>
</span><span class='line'>    <span class="n">getActivity</span><span class="o">().</span><span class="na">getIntent</span><span class="o">()</span> <span class="o">:</span> <span class="o">(</span><span class="n">Intent</span><span class="o">)</span> <span class="n">args</span><span class="o">.</span><span class="na">getParcelable</span><span class="o">(</span><span class="s">&quot;intent&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">intent</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">packageName</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getData</span><span class="o">().</span><span class="na">getSchemeSpecificPart</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Refer String Resources From Other Applications]]></title>
    <link href="http://androidyue.github.io/blog/2013/12/11/refer-string-resources-from-other-applications/"/>
    <updated>2013-12-11T16:22:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/12/11/refer-string-resources-from-other-applications</id>
    <content type="html"><![CDATA[<p>The following code works. Here take getting String resource for example.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">testUseAndroidString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Context</span> <span class="n">context</span> <span class="o">=</span> <span class="n">getContext</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Resources</span> <span class="n">res</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">//I want to use the clear_activities string in Package com.android.settings</span>
</span><span class='line'>        <span class="n">res</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">().</span><span class="na">getResourcesForApplication</span><span class="o">(</span><span class="s">&quot;com.android.settings&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">resourceId</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="s">&quot;com.android.settings:string/clear_activities&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="mi">0</span> <span class="o">!=</span> <span class="n">resourceId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">CharSequence</span> <span class="n">s</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">().</span><span class="na">getText</span><span class="o">(</span><span class="s">&quot;com.android.settings&quot;</span><span class="o">,</span> <span class="n">resourceId</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">VIEW_LOG_TAG</span><span class="o">,</span> <span class="s">&quot;resource=&quot;</span> <span class="o">+</span> <span class="n">s</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NameNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get Android System Available Features]]></title>
    <link href="http://androidyue.github.io/blog/2013/12/03/get-android-system-available-features/"/>
    <updated>2013-12-03T17:20:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/12/03/get-android-system-available-features</id>
    <content type="html"><![CDATA[<p>An easy way to get system available features.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">dumpSystemFeatures</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">FeatureInfo</span><span class="o">[]</span> <span class="n">features</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">().</span><span class="na">getSystemAvailableFeatures</span><span class="o">();</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="n">FeatureInfo</span> <span class="n">f</span> <span class="o">:</span> <span class="n">features</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;dumpSystemFeatures f&quot;</span> <span class="o">+</span> <span class="n">f</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Have a glance at the result</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d74fd0</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">wifi</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75048</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">location</span><span class="o">.</span><span class="na">network</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d750d8</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">nfc</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75150</span> <span class="n">com</span><span class="o">.</span><span class="na">google</span><span class="o">.</span><span class="na">android</span><span class="o">.</span><span class="na">feature</span><span class="o">.</span><span class="na">GOOGLE_BUILD</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d751f0</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">location</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75270</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">sensor</span><span class="o">.</span><span class="na">gyroscope</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75300</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">screen</span><span class="o">.</span><span class="na">landscape</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75390</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">screen</span><span class="o">.</span><span class="na">portrait</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75420</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">wifi</span><span class="o">.</span><span class="na">direct</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d754a8</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">usb</span><span class="o">.</span><span class="na">accessory</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75530</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">bluetooth</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d755b0</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">touchscreen</span><span class="o">.</span><span class="na">multitouch</span><span class="o">.</span><span class="na">distinct</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75660</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">microphone</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d756e8</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">sensor</span><span class="o">.</span><span class="na">light</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75770</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">camera</span><span class="o">.</span><span class="na">autofocus</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75800</span> <span class="n">android</span><span class="o">.</span><span class="na">software</span><span class="o">.</span><span class="na">live_wallpaper</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75890</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">camera</span><span class="o">.</span><span class="na">flash</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75918</span> <span class="n">android</span><span class="o">.</span><span class="na">hardware</span><span class="o">.</span><span class="na">telephony</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">MainActivity</span><span class="o">(</span><span class="mi">13514</span><span class="o">):</span> <span class="n">dumpSystemFeatures</span> <span class="n">fFeatureInfo</span><span class="o">{</span><span class="mi">40</span><span class="n">d75998</span> <span class="n">android</span><span class="o">.</span><span class="na">software</span><span class="o">.</span><span class="na">sip</span> <span class="n">fl</span><span class="o">=</span><span class="mh">0x0</span><span class="o">}</span>
</span><span class='line'><span class="o">......</span>
</span></code></pre></td></tr></table></div></figure>


<p>For a detailed understanding of use-filter,please read this post <a href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html">http://developer.android.com/guide/topics/manifest/uses-feature-element.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get An Application Required Features]]></title>
    <link href="http://androidyue.github.io/blog/2013/12/03/get-an-application-required-features/"/>
    <updated>2013-12-03T17:20:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/12/03/get-an-application-required-features</id>
    <content type="html"><![CDATA[<p>How to get application&rsquo;s required features? Actually the <strong>aapt</strong> really does a great help.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#Usage:aapt dump badging apk_location | grep feature </span>
</span><span class='line'>
</span><span class='line'><span class="c">#Example</span>
</span><span class='line'>aapt dump badging /tmp/language_check_maxthon_99985f_2793_4.1.3.1000_remote_develop.apk | grep Features
</span><span class='line'>
</span><span class='line'><span class="c">#Result</span>
</span><span class='line'>uses-feature-not-required:<span class="s1">&#39;android.hardware.location&#39;</span>
</span><span class='line'>uses-feature-not-required:<span class="s1">&#39;android.hardware.location.network&#39;</span>
</span><span class='line'>uses-feature-not-required:<span class="s1">&#39;android.hardware.location.gps&#39;</span>
</span><span class='line'>uses-feature-not-required:<span class="s1">&#39;android.hardware.screen.portrait&#39;</span>
</span><span class='line'>uses-feature-not-required:<span class="s1">&#39;android.hardware.telephony&#39;</span>
</span><span class='line'>uses-feature-not-required:<span class="s1">&#39;android.hardware.wifi&#39;</span>
</span><span class='line'>uses-feature:<span class="s1">&#39;android.hardware.touchscreen&#39;</span>
</span><span class='line'>uses-implied-feature:<span class="s1">&#39;android.hardware.touchscreen&#39;</span>,<span class="s1">&#39;assumed you require a touch screen unless explicitly made optional&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>To understand the feature more detailed, please visit <a href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html">http://developer.android.com/guide/topics/manifest/uses-feature-element.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jar mismatch! Fix your dependencies]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/27/jar-mismatch-fix-your-dependencies/"/>
    <updated>2013-11-27T18:07:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/27/jar-mismatch-fix-your-dependencies</id>
    <content type="html"><![CDATA[<p>There was a requirement of my work. It requires me to integrated my current project with Facebook SDK for measuring. However this came into my sights.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Jar mismatch! Fix your dependencies
</span></code></pre></td></tr></table></div></figure>


<p>The fact is that Both my project and my library project which the former refers to have used android-support-v4.jar. However I realize the two android-support-v4.jar are different after making the md5 hash.<br/>
My solution:<br/>
<strong>I use the android-support-v4.jar in my project as the right one. And then replace the one in Facebook SDK with my project one. And then it works.</strong><br/>
But my question remains; why it asks me for fix the dependencies to use the same lib jar file?<br/>
I guess android will keep only one file for all the references so this will ask developers to make all the same lib all the same.
Sorry for the codeless post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enter Recovery Mode By ADB]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/27/enter-recovery-mode-by-adb/"/>
    <updated>2013-11-27T18:06:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/27/enter-recovery-mode-by-adb</id>
    <content type="html"><![CDATA[<p>A Geek way:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adb reboot recovery</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove Android Account Without Factory Reset]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/27/remove-android-account-without-factory-reset/"/>
    <updated>2013-11-27T17:43:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/27/remove-android-account-without-factory-reset</id>
    <content type="html"><![CDATA[<p>This will work if you want to remove account without factory reset your device.</p>

<h1>Steps</h1>

<ul>
<li>Make sure you have rooted your device.</li>
<li>Mount /data/system as read and write access</li>
<li>Go into /data/system and remove accounts.db</li>
<li>Reboot your device and you made it.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Create Facebook Key Hash]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/26/how-to-create-facebook-key-hash/"/>
    <updated>2013-11-26T19:15:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/26/how-to-create-facebook-key-hash</id>
    <content type="html"><![CDATA[<p>When I create a new application on Facebook, I meet the problem. Facebook asks me to provide the Key Hash. But it does not show the guidance about how to generate. After Googling, I have found this works for me.<br/>
Before executing the following command, you need install openssl</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>keytool -exportcert -alias your-alias-value -keystore your-keystore-path | openssl  sha1 -binary | openssl  base64
</span></code></pre></td></tr></table></div></figure>


<p>Replace <strong>your-alias-value</strong> and <strong>your-keystore-path</strong>  with the real data.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dump Table Structure in SQLite3]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/17/dump-table-structure-in-sqlite3/"/>
    <updated>2013-11-17T17:24:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/17/dump-table-structure-in-sqlite3</id>
    <content type="html"><![CDATA[<p>Best answer to the question<br/>
Use <em>PRAGMA table_info</em></p>

<blockquote><p>This pragma returns one row for each column in the named table. Columns in the result set include the column name, data type, whether or not the column can be NULL, and the default value for the column. The &ldquo;pk&rdquo; column in the result set is zero for columns that are not part of the primary key, and is the index of the column in the primary key for columns that are part of the primary key.</p></blockquote>

<p>Reference:<a href="http://www.sqlite.org/pragma.html#pragma_table_info">http://www.sqlite.org/pragma.html#pragma_table_info</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sqlite&gt; .header on
</span><span class='line'>sqlite&gt; PRAGMA table_info(password);
</span><span class='line'>cid|name|type|notnull|dflt_value|pk
</span><span class='line'>0|_id|INTEGER|0||1
</span><span class='line'>1|host|TEXT|0||0
</span><span class='line'>2|username|TEXT|0||0
</span><span class='line'>3|password|TEXT|0||0
</span><span class='line'>#password is the name of a table.</span></code></pre></td></tr></table></div></figure>


<p>Another answer may also work<br/>
<em>.schema [tablename]</em> will show the CREATE statement(s) for a table or tables</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sqlite&gt; .schema password
</span><span class='line'>CREATE TABLE password (_id INTEGER PRIMARY KEY, host TEXT, username TEXT, password TEXT, UNIQUE (host, username) ON CONFLICT REPLACE);</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Check If A Python Module Is Installed]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/16/check-if-a-python-module-is-installed/"/>
    <updated>2013-11-16T20:14:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/16/check-if-a-python-module-is-installed</id>
    <content type="html"><![CDATA[<p>I was once stucked in How to check Whether a Python module has been installed or not. After Googling, I found this trick.<br/>
Python allows user to pass command from out of a python file.See here</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>-c cmd : program passed in as string <span class="o">(</span>terminates option list<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The result if we import an installed module</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>20:15:45-androidyue~/osc_git/LnxClient <span class="o">(</span>master<span class="o">)</span><span class="nv">$ </span>python -c <span class="s2">&quot;import os&quot;</span>
</span><span class='line'>20:31:24-androidyue~/osc_git/LnxClient <span class="o">(</span>master<span class="o">)</span><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$?</span>
</span><span class='line'>0
</span><span class='line'><span class="c">#0 means the module has been installed</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now if we import an module which is not installed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>20:31:41-androidyue~/osc_git/LnxClient <span class="o">(</span>master<span class="o">)</span><span class="nv">$ </span>python -c <span class="s2">&quot;import aaa&quot;</span>
</span><span class='line'>Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span><span class='line'>File <span class="s2">&quot;&lt;string&gt;&quot;</span>, line 1, in &lt;module&gt;
</span><span class='line'>ImportError: No module named aaa
</span><span class='line'>20:31:46-androidyue~/osc_git/LnxClient <span class="o">(</span>master<span class="o">)</span><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$?</span>
</span><span class='line'>1
</span><span class='line'><span class="c">#1 means that module is not installed.</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java Get Full Exception StackTrace]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/09/java-get-full-exception-stacktrace/"/>
    <updated>2013-11-09T10:53:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/09/java-get-full-exception-stacktrace</id>
    <content type="html"><![CDATA[<p>As a coder, I am always handling exceptions or errors,or in a word throwables. To impove the release build, I need to collect every throwable information.<br/>
And I need to get the information as string and post it to the Bug Collect Server. Now here is an easy trick to get stacktrace from a Throwable</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="nf">getStackTrace</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">t</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">final</span> <span class="n">Writer</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringWriter</span><span class="o">();</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">PrintWriter</span> <span class="n">printWriter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PrintWriter</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'>    <span class="n">t</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">(</span><span class="n">printWriter</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[乘手扶梯的正确方法]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/05/cheng-shou-fu-ti-de-zheng-que-fang-fa/"/>
    <updated>2013-11-05T12:55:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/05/cheng-shou-fu-ti-de-zheng-que-fang-fa</id>
    <content type="html"><![CDATA[<h4>起因</h4>

<p>之前一直和女朋友有一个讨论，就是搭乘扶梯时究竟时靠左站立，还是靠右站立。起因时从地铁北宫门出来的时候，我要求她站在左侧。</p>

<h4>我的观点</h4>

<ul>
<li>右侧留出来行走，更符合国内靠右行驶的习惯</li>
<li>之前看到过日本的介绍，日本是靠左侧的。</li>
</ul>


<h4>她的观点</h4>

<ul>
<li>现在很多人都是靠右站立</li>
<li>她见过写着靠右站立的提示</li>
</ul>


<h4>事实</h4>

<ul>
<li>左行右立（香港普遍称为左行右企）是指在歐美、香港、台灣、西日本等地於乘坐電扶梯时电梯左边空出留给有急事的乘客行走，只是站立在电梯上的人靠右侧站立的行为。與之相反的是，東日本、澳洲、新加坡等地卻採用右行左立的方式。</li>
<li>此方式為一約定俗成之法則。香港地鐵（今港鐵）及台北捷運於從前曾參考歐美等地的習慣，宣傳「左行右立」，疏通繁忙時段的人流，但不奏效。在香港停止宣傳後，「左行右立」卻反而流行起來。</li>
<li>但在電扶梯上步行會導致容易失去平衡，釀成意外，亦容易導致重力分布不均，增加電扶梯容易損壞的機率。[2]香港政府提醒市民盡量不要在電梯上走動[3]，而台北捷運公司目前也基於上述之理由，不再宣傳此措施，然而大部分乘客均已養成左行右立的搭乘習慣；相較之下，台灣的另一座大眾運輸系統——高雄捷運即未若台北一般廣泛宣傳左行右立的習慣。</li>
<li>2011年北京地铁动物园站出现电动扶梯事故后，京华时报指出左行右立是不安全的行为，可能是造成电动扶梯事故的诱因之一。</li>
<li>左行右立是上海市迎接中国2010年上海世界博览会宣传倡导的城市文明行为之一。為宣傳“左行右立”标准，上海轨道交通扶手电梯处常见「左行右立」的標語，並指即使乘客站立不穩向後倒下，後面的乘客也可以支撐，不會出現骨牌效應，有利安全。[5]但自2012年12月开始，因为扶梯台阶过大，行走不安全，上海轨道交通不再强调左行右立，一些原先粘贴在扶梯上倡导左行右立的贴纸已被移除
以上事实部分参考维基百科   <a href="http://zh.wikipedia.org/wiki/%E5%B7%A6%E8%A1%8C%E5%8F%B3%E7%AB%8B">http://zh.wikipedia.org/wiki/%E5%B7%A6%E8%A1%8C%E5%8F%B3%E7%AB%8B</a>  或者 Google 搜索 左行右立</li>
</ul>


<h4>总结</h4>

<ul>
<li>就按我输了作为结果吧，哈哈。</li>
<li>靠左靠右并无硬性规定，社会活动中多礼让，不妨碍他人</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Read Output From Shell]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/05/read-output-from-shell/"/>
    <updated>2013-11-05T12:38:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/05/read-output-from-shell</id>
    <content type="html"><![CDATA[<p>Python provides a lot of method to read output from a just executed shell. However many of them has been deprecated(Not recommened). But subprocess works at present compared to other methods.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">subprocess</span> <span class="kn">import</span> <span class="n">Popen</span><span class="p">,</span><span class="n">PIPE</span><span class="p">,</span><span class="n">STDOUT</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">readFromCommand</span><span class="p">(</span><span class="n">command</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>    <span class="n">p</span> <span class="o">=</span> <span class="n">Popen</span><span class="p">(</span><span class="n">command</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">stdin</span><span class="o">=</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">STDOUT</span><span class="p">,</span> <span class="n">close_fds</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">read</span><span class="p">()</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="n">readFromCommand</span><span class="p">(</span><span class="s">&#39;ls&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c">#result</span>
</span><span class='line'><span class="c">#0001-.patch</span>
</span><span class='line'><span class="c">#0001-.patch.zip</span>
</span><span class='line'><span class="c">#0001-Replace-app_name-into-Browser.patch</span>
</span></code></pre></td></tr></table></div></figure>


<p>A detailed description about subprocess has been written down here. <a href="http://docs.python.org/2/library/subprocess.html">http://docs.python.org/2/library/subprocess.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Determine Whether A System is 64-bit or 32-bit]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/04/how-to-determin-whether-a-system-is-64-bit-or-32-bit/"/>
    <updated>2013-11-04T16:01:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/04/how-to-determin-whether-a-system-is-64-bit-or-32-bit</id>
    <content type="html"><![CDATA[<p>A trick in Bash</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nv">system_bits</span><span class="o">=</span><span class="sb">`</span>uname -m<span class="sb">`</span>
</span><span class='line'><span class="k">if</span> <span class="o">[[</span> <span class="s2">&quot;$system_bits&quot;</span> <span class="o">==</span> x86_64  <span class="o">]]</span>
</span><span class='line'><span class="k">then</span>
</span><span class='line'><span class="k">    </span><span class="nb">echo</span> <span class="s2">&quot;It&#39;s a 64-bit system&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="k">    </span><span class="nb">echo</span> <span class="s2">&quot;It&#39;s a 32-bit system&quot;</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Failed dependencies: libpopt.so.0]]></title>
    <link href="http://androidyue.github.io/blog/2013/10/31/failed-dependencies-libpopt-dot-so-dot-0/"/>
    <updated>2013-10-31T13:12:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/10/31/failed-dependencies-libpopt-dot-so-dot-0</id>
    <content type="html"><![CDATA[<p>Trick</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum install popt</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Replace One Character in Vim]]></title>
    <link href="http://androidyue.github.io/blog/2013/10/31/replace-one-character-in-vim/"/>
    <updated>2013-10-31T12:43:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/10/31/replace-one-character-in-vim</id>
    <content type="html"><![CDATA[<p>Just write down this litte trick for further use. The problem how to replace one character in vim does be really simple for me now.</p>

<ul>
<li>First go into the Command Mode where you can issue many vi(m) commands.</li>
<li>Move the cursor to the positon where your wanted character lies.</li>
<li>Then press Key r (in lowser case) and enter your desired character to replace the wanted one.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Share Git Tag]]></title>
    <link href="http://androidyue.github.io/blog/2013/10/25/how-to-share-git-tag/"/>
    <updated>2013-10-25T19:00:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/10/25/how-to-share-git-tag</id>
    <content type="html"><![CDATA[<p>Now I have two tags under my git repository. Let&rsquo;s take a look at how to push the git tags to Server.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>v2850
</span><span class='line'>v4.1.1.2000_2852
</span></code></pre></td></tr></table></div></figure>


<h3>Push a single tag to the server</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#git push origin tag_name</span>
</span><span class='line'><span class="c">#Take v2850 for example</span>
</span><span class='line'>git push  origin v2850
</span></code></pre></td></tr></table></div></figure>


<h3>Push all tags to the server</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git push  origin --tags
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Android Packages From Command Line]]></title>
    <link href="http://androidyue.github.io/blog/2013/10/19/build-android-packages-from-command-line/"/>
    <updated>2013-10-19T09:11:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/10/19/build-android-packages-from-command-line</id>
    <content type="html"><![CDATA[<p>A few months ago,I dealed with a task:To build a large amount of apk files.  The trick I came up with is to build apk file from the command so that I could use Python to glue all the works.  Eventually I made it.And so this post is to make some description about the trick.</p>

<h2>Requirements</h2>

<ul>
<li> Setup JDK</li>
<li> Setup Android SDK

<h2>Steps</h2></li>
<li>Generate R class file</li>
<li>Compile Java codes(.java files) into classes(.class) files</li>
<li>Convert .class files into .dex files</li>
<li>Package Resouces</li>
<li>Build Unsigned APK File</li>
<li>Sign Apk with Jarsigner</li>
<li>The Extra One:Use zipalign for optimization</li>
</ul>


<h3>Generate R class File</h3>

<p>In Android,We use R class to refer resources instead of hard-coding the resouces.<br/>
For a better understanding,pleae have a look at <a href="http://www.satyakomatineni.com/akc/display?url=displaynoteimpurl&amp;ownerUserId=satya&amp;reportId=2883">http://www.satyakomatineni.com/akc/display?url=displaynoteimpurl&amp;ownerUserId=satya&amp;reportId=2883</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>aapt package -f -m -J /home/androidyue/temp/ubuntu/workspace/MxDataProvider/gen/ -S /home/androidyue/temp/ubuntu/workspace/MxDataProvider/res/ -I /home/androidyue/dev_tools/android-sdk-linux_86_backup/platforms/android-17/android.jar -M /home/androidyue/temp/ubuntu/workspace/MxDataProvider/AndroidManifest.xml
</span></code></pre></td></tr></table></div></figure>


<h4>Some descriptions</h4>

<ul>
<li> -f  force overwrite of existing files</li>
<li> -m  make package directories under location specified by -J</li>
<li> -J  specify where to output R.java resource constant definitions</li>
<li> -S  directory in which to find resources.  Multiple directories will be scanned and the first match found (left to right) will take precedence.</li>
<li> -I  add an existing package to base include set</li>
<li> -M  specify full path to AndroidManifest.xml to include in zip</li>
</ul>


<h3>Comiple .java into .class files</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>javac -encoding UTF-8 -source 1.6 -target 1.6 -bootclasspath /home/androidyue/dev_tools/android-sdk-linux_86_backup/platforms/android-17/android.jar -d /home/androidyue/temp/ubuntu/workspace/MxDataProvider/bin/ /home/androidyue/temp/ubuntu/workspace/MxDataProvider/src//coop/channel/provider/*.java /home/androidyue/temp/ubuntu/workspace/MxDataProvider/gen//coop/channel/provider/R.java
</span></code></pre></td></tr></table></div></figure>


<h4>Some descriptions</h4>

<ul>
<li> -encoding encoding  Set the source file encoding name, such as EUC-JP and UTF-8. If -encoding is not specified, the platform default converter is used.</li>
<li> -source release   Specifies the version of source code accepted, Please Do NOT use Java 7(1.7)</li>
<li> -target version  Generate  class files that target a specified version of the VM. Class files will run on the specified target and on later versions, but not on earlier versions of the VM. Valid targets are 1.1, 1.2, 1.3, 1.4, 1.5 (also 5), 1.6(also 6), and 1.7 (also 7).</li>
<li> -bootclasspath bootclasspath Cross-compile against the specified set of boot classes. As with the user class path, boot class path entries are separated by colons (:) and can be directories, JAR archives, or ZIP archives.</li>
<li> -d directory  Set the destination directory for class files. The directory must already exist; javac will not create it.
As I have suffered a lot using Java 7, It&rsquo;s recomended to use Java 6</li>
</ul>


<h3>Convert .class into .dex files</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/home/androidyue/dev_tools/android-sdk-linux_86_backup/build-tools/17.0.0/dx --dex --output<span class="o">=</span>/home/androidyue/temp/ubuntu/workspace/MxDataProvider/bin//class.dex /home/androidyue/temp/ubuntu/workspace/MxDataProvider/bin/
</span></code></pre></td></tr></table></div></figure>


<p>To dive into Dalvik, please visit <a href="http://source.android.com/devices/tech/dalvik/index.html">http://source.android.com/devices/tech/dalvik/index.html</a></p>

<h3>Package Resouces</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>aapt package -f -M /home/androidyue/temp/ubuntu/workspace/MxDataProvider/AndroidManifest.xml -S /home/androidyue/temp/ubuntu/workspace/MxDataProvider/res/ -A /home/androidyue/temp/ubuntu/workspace/MxDataProvider//assets/ -I /home/androidyue/dev_tools/android-sdk-linux_86_backup/platforms/android-17/android.jar -F /home/androidyue/temp/ubuntu/workspace/MxDataProvider/bin//resources.ap_
</span></code></pre></td></tr></table></div></figure>


<h4>Some descriptions</h4>

<ul>
<li> -F  specify the apk file to output</li>
<li> -A  additional directory in which to find raw asset files</li>
</ul>


<h3>Build Unsigned APK File</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/home/androidyue/temp/ubuntu/dev_tools/adt-bundle-linux_backup/sdk/tools/apkbuilder /tmp/unsignedApkFile.apk -v -u -z /home/androidyue/temp/ubuntu/workspace/MxDataProvider/bin//resources.ap_ -f /home/androidyue/temp/ubuntu/workspace/MxDataProvider/bin//class.dex -rf /home/androidyue/temp/ubuntu/workspace/MxDataProvider/src/
</span></code></pre></td></tr></table></div></figure>


<h4>Some descriptions</h4>

<ul>
<li> -u      Creates an unsigned package.</li>
<li> -z      Followed by the path to a zip archive. Adds the content of the application package.</li>
<li> -f      Followed by the path to a file. Adds the file to the application package.</li>
<li> -rf     Followed by the path to a source folder. Adds the java resources found in that folder to the application package, while keeping their path relative to the source folder.</li>
</ul>


<h3>Sign Apk with Jarsigner</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>jarsigner -keystore /home/androidyue/temp/ubuntu/myKeystore -storepass storepassValue -keypass keypassValue -signedjar /home/androidyue/Desktop/output/max1111111.apk /tmp/unsignedApkFile.apk maxthon -digestalg SHA1 -sigalg MD5withRSA
</span></code></pre></td></tr></table></div></figure>


<h4>Some descriptions</h4>

<ul>
<li> [-keystore <url>]           keystore location</li>
<li> [-storepass <password>]     password for keystore integrity</li>
<li> [-keypass <password>]       password for private key (if different)</li>
<li> [-signedjar <file>]         name of signed JAR file</li>
<li> [-digestalg <algorithm>]    name of digest algorithm</li>
<li> [-sigalg <algorithm>]       name of signature algorithm</li>
</ul>


<h3>Use Zipalign for optimization</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>zipalign -f -v 4 /home/androidyue/Desktop/output/max1111111.apk /home/androidyue/Desktop/output/max222222.apk
</span></code></pre></td></tr></table></div></figure>


<h4>Some descriptions</h4>

<ul>
<li> The <alignment> is an integer that defines the byte-alignment boundaries. This must always be 4 (which provides 32-bit alignment) or else it effectively does nothing.</li>
<li> For more details, please visit <a href="http://developer.android.com/tools/help/zipalign.html">http://developer.android.com/tools/help/zipalign.html</a></li>
</ul>

]]></content>
  </entry>
  
</feed>

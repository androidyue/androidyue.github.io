<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[技术小黑屋]]></title>
  <link href="http://droidyue.com/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2014-07-26T17:16:25+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[日语动词分类]]></title>
    <link href="http://droidyue.com/blog/2014/07/26/verb-kinds-summary-of-nihongo/"/>
    <updated>2014-07-26T17:07:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/26/verb-kinds-summary-of-nihongo</id>
    <content type="html"><![CDATA[<p>在很多语言中，动词是很重要的一部分。在日语更是如此，而且日语中的动词更加庞大和复杂。本文将从最基础的三类动词。即一类动词，二类动词和三类动词。当然我更倾向于称呼它们为一段动词，五段动词以及サ变和カ变动词。</p>

<!--more-->


<h2>一段动词（二类动词）</h2>

<ul>
<li>词尾必须是る，并且倒数第二个必须位于い段或者え段。</li>
<li>一段动词中，倒数第二个假名如果位于い段，这个动词就是<strong>上一段动词</strong>。</li>
<li>一段动词中，倒数第二个假名如果位于え段，这个动词就是<strong>下一段动词</strong>。</li>
<li>举例：食べる、寝る。できる。</li>
</ul>


<h2>五段动词（一类动词）</h2>

<ul>
<li>词尾是う、く、ぐ、す、つ、ぬ、ぶ、む、る，且倒数第二个假名一般为あ、う、お段假名的动词。</li>
<li>举例：いく、買う、歌う。</li>
</ul>


<h2>カ变动词（三类动词）</h2>

<ul>
<li>カ变动词只有一个，那就是来る（くる）</li>
</ul>


<h2>サ变动词（三类动词）</h2>

<ul>
<li>一般是する。</li>
<li>动词性名词和する组合的复合词，也可以看成サ变动词。</li>
<li>する、運動する。</li>
</ul>


<h2>例外</h2>

<p>有些动词的规则符合一段动词，但是实际上确实五段动词。需要我们重点记忆。</p>

<p>焦（あせ）る、要（い）る、帰（かえ）る、返（かえ）る、限（かぎ）る、切（き）る、蹴（け）る、茂（しげ）る、知（し）る、喋（しゃべ）る、滑（すべ）る、散（ち）る、入（はい）る、走（はし）る、減（へ）る。</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00116E49K/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00116E49K&linkCode=as2&tag=droidyue-23">日语基础语法整理</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00116E49K" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00AQ95KQO/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00AQ95KQO&linkCode=as2&tag=droidyue-23">我的日语日记</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00AQ95KQO" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python中字典序列化操作]]></title>
    <link href="http://droidyue.com/blog/2014/07/26/dict-and-json-serialization-in-python/"/>
    <updated>2014-07-26T13:32:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/26/dict-and-json-serialization-in-python</id>
    <content type="html"><![CDATA[<p>JSON是编程中常用的数据结构，各种语言都有良好的支持。字典是Python的一种数据结构。可以看成关联数组。</p>

<p>有些时候我们需要设计到字典转换成JSON序列化到文件，或者从文件中读取JSON。简单备忘一下。</p>

<!--more-->


<h2>Dict转JSON写入文件</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c"># coding=utf-8</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;first&#39;</span><span class="p">:</span> <span class="s">&#39;One&#39;</span><span class="p">,</span> <span class="s">&#39;second&#39;</span><span class="p">:</span><span class="mi">2</span><span class="p">}</span>
</span><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;/tmp/result.txt&#39;</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h2>写入结果</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat /tmp/result.txt
</span><span class='line'><span class="o">{</span><span class="s2">&quot;second&quot;</span>: 2, <span class="s2">&quot;first&quot;</span>: <span class="s2">&quot;One&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>读取JSON</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c"># coding=utf-8</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="n">d</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="s">&#39;/tmp/result.txt&#39;</span><span class="p">,</span><span class="s">&#39;r&#39;</span><span class="p">))</span>
</span><span class='line'><span class="k">print</span> <span class="n">d</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>运行结果</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">{</span>u<span class="s1">&#39;second&#39;</span>: 2, u<span class="s1">&#39;first&#39;</span>: u<span class="s1">&#39;One&#39;</span><span class="o">}</span> &lt;<span class="nb">type</span> <span class="s1">&#39;dict&#39;</span>&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00GHGZLWS/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00GHGZLWS&linkCode=as2&tag=droidyue-23">利用Python进行数据分析</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00GHGZLWS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00KYFJTP8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KYFJTP8&linkCode=as2&tag=droidyue-23">编写高质量代码:改善Python程序的91个建议</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00KYFJTP8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[超简单实现Google+列表特效]]></title>
    <link href="http://droidyue.com/blog/2014/07/26/apply-google-plus-list-style-on-android/"/>
    <updated>2014-07-26T10:32:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/26/apply-google-plus-list-style-on-android</id>
    <content type="html"><![CDATA[<p>相信用过Google+的人都感到其应用的特效相当棒，本文将以超简单的形式来实现类似Google+列表的特效。仅仅写几行代码就可以实现奥。</p>

<h2>特效真面目</h2>

<p>由于众所周知的原因，很多人无法使用Google+应用。所以有必要让大家先看一看真面目。</p>

<!--more-->


<p>P.S.找了很多的屏目录制软件都不行，并且没有4.4的机器，所以只能用最笨的方法录制了，请见谅哈。</p>

<iframe height=498 width=510 src="http://player.youku.com/embed/XNzQ2MzAzNjIw" frameborder=0 allowfullscreen></iframe>


<h2>特效动画</h2>

<h3>from_bottom_to_top.xml</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;set</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>     <span class="na">android:shareInterpolator=</span><span class="s">&quot;@android:anim/decelerate_interpolator&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;translate</span>
</span><span class='line'>        <span class="na">android:fromXDelta=</span><span class="s">&quot;0%&quot;</span> <span class="na">android:toXDelta=</span><span class="s">&quot;0%&quot;</span>
</span><span class='line'>        <span class="na">android:fromYDelta=</span><span class="s">&quot;100%&quot;</span> <span class="na">android:toYDelta=</span><span class="s">&quot;0%&quot;</span>
</span><span class='line'>        <span class="na">android:duration=</span><span class="s">&quot;400&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/set&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>from_top_to_bottom.xml</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;set</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>     <span class="na">android:shareInterpolator=</span><span class="s">&quot;@android:anim/decelerate_interpolator&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;translate</span>
</span><span class='line'>        <span class="na">android:fromXDelta=</span><span class="s">&quot;0%&quot;</span> <span class="na">android:toXDelta=</span><span class="s">&quot;0%&quot;</span>
</span><span class='line'>        <span class="na">android:fromYDelta=</span><span class="s">&quot;-100%&quot;</span> <span class="na">android:toYDelta=</span><span class="s">&quot;0%&quot;</span>
</span><span class='line'>        <span class="na">android:duration=</span><span class="s">&quot;400&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/set&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>加入动画</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kt">int</span> <span class="n">mLastPosition</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="n">View</span> <span class="nf">getView</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">,</span> <span class="n">View</span> <span class="n">convertView</span><span class="o">,</span> <span class="n">ViewGroup</span> <span class="n">parent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">View</span> <span class="n">view</span> <span class="o">=</span> <span class="kd">super</span><span class="o">.</span><span class="na">getView</span><span class="o">(</span><span class="n">position</span><span class="o">,</span> <span class="n">convertView</span><span class="o">,</span> <span class="n">parent</span><span class="o">);</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">animResId</span><span class="o">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span><span class="n">position</span> <span class="o">&gt;</span> <span class="n">mLastPosition</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">animResId</span> <span class="o">=</span> <span class="n">R</span><span class="o">.</span><span class="na">anim</span><span class="o">.</span><span class="na">from_bottom_to_top</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">animResId</span> <span class="o">=</span> <span class="n">R</span><span class="o">.</span><span class="na">anim</span><span class="o">.</span><span class="na">from_top_to_bottom</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>  <span class="n">Animation</span> <span class="n">animation</span> <span class="o">=</span> <span class="n">AnimationUtils</span><span class="o">.</span><span class="na">loadAnimation</span><span class="o">(</span><span class="n">getContext</span><span class="o">(),</span> <span class="n">animResId</span><span class="o">);</span>
</span><span class='line'>  <span class="n">view</span><span class="o">.</span><span class="na">startAnimation</span><span class="o">(</span><span class="n">animation</span><span class="o">);</span>
</span><span class='line'>  <span class="n">mLastPosition</span> <span class="o">=</span> <span class="n">position</span><span class="o">;</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">view</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>源码</h2>

<p><a href="http://pan.baidu.com/s/1ntmelML" target="_blank">百度云盘</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00FQEDTA8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00FQEDTA8&linkCode=as2&tag=droidyue-23">精彩绝伦的Android UI设计</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00FQEDTA8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0065DAGZK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0065DAGZK&linkCode=as2&tag=droidyue-23">精通Android 3</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0065DAGZK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git 取消跟踪已版本控制的文件]]></title>
    <link href="http://droidyue.com/blog/2014/07/25/untrack-versioned-file-in-git/"/>
    <updated>2014-07-25T20:00:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/25/untrack-versioned-file-in-git</id>
    <content type="html"><![CDATA[<p>Git 是一个很好的版本控制工具，当然驾驭起来相比 SVN 要稍微复杂一些。初入 Git，难免有一些问题。比如我们不小心将某个文件加入了版本控制，但是突然又不想继续跟踪控制这个文件了，怎么办呢？</p>

<!--more-->


<p>其实方法也是很简单的。使用<strong>git update-index</strong>即可。</p>

<h3>不想继续追踪某个文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git update-index --assume-unchanged your_file_path
</span></code></pre></td></tr></table></div></figure>


<h3>如果想再次继续跟踪某个文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git update-index --no-assume-unchanged your_file_path
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/1430218339/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=1430218339&linkCode=as2&tag=droidyue-23">Git大神之路：Pro Git</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=1430218339" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0058FLC40/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0058FLC40&linkCode=as2&tag=droidyue-23">Git权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0058FLC40" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 下 rake 失败问题解决]]></title>
    <link href="http://droidyue.com/blog/2014/07/24/rake-issues-in-octopress/"/>
    <updated>2014-07-24T19:11:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/24/rake-issues-in-octopress</id>
    <content type="html"><![CDATA[<p>在 Mac 机器上，使用 octopress 总是问题重重，今天遇到了这样的问题，解决了，记录一下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>13:28 <span class="nv">$ </span>rake generate
</span><span class='line'>rake aborted!
</span><span class='line'>You have already activated rake 10.1.1, but your Gemfile requires rake 0.9.2.2. Prepending <span class="sb">`</span>bundle <span class="nb">exec</span><span class="sb">`</span> to your <span class="nb">command </span>may solve this.
</span><span class='line'>/Users/androidyue/.rvm/gems/ruby-1.9.3-p484/gems/bundler-1.6.2/lib/bundler/runtime.rb:34:in <span class="sb">`</span>block in setup<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/Users/androidyue/.rvm/gems/ruby-1.9.3-p484/gems/bundler-1.6.2/lib/bundler/runtime.rb:19:in `setup&#39;</span>
</span><span class='line'>/Users/androidyue/.rvm/gems/ruby-1.9.3-p484/gems/bundler-1.6.2/lib/bundler.rb:120:in <span class="sb">`</span>setup<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/Users/androidyue/.rvm/gems/ruby-1.9.3-p484/gems/bundler-1.6.2/lib/bundler/setup.rb:7:in `&lt;top (required)&gt;&#39;</span>
</span><span class='line'>/Users/androidyue/github/myblog/Rakefile:2:in <span class="sb">`</span>&lt;top <span class="o">(</span>required<span class="o">)</span>&gt;<span class="err">&#39;</span>
</span><span class='line'><span class="o">(</span>See full trace by running task with --trace<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h2>查看 rake 信息</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">13</span><span class="p">:</span><span class="mi">48</span> <span class="err">$</span> <span class="n">gem</span> <span class="n">list</span> <span class="n">rake</span>
</span><span class='line'>
</span><span class='line'><span class="o">***</span> <span class="no">LOCAL</span> <span class="no">GEMS</span> <span class="o">***</span>
</span><span class='line'>
</span><span class='line'><span class="n">rake</span> <span class="p">(</span><span class="mi">10</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">6</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>方法一</h2>

<p>在所有的 rake 命令前面加入 bundle exec 前缀。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle <span class="nb">exec </span>rake generate
</span></code></pre></td></tr></table></div></figure>


<h2>方法二</h2>

<p>修改Gemfile 文件如下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'><span class="o">-</span>  <span class="n">gem</span> <span class="s1">&#39;rake&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.9&#39;</span>
</span><span class='line'><span class="o">+</span>  <span class="n">gem</span> <span class="s1">&#39;rake&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 10.0&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B002WJI7YI/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B002WJI7YI&linkCode=as2&tag=droidyue-23">锦绣蓝图:怎样规划令人流连忘返的网站</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B002WJI7YI" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00ASOV2AU/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ASOV2AU&linkCode=as2&tag=droidyue-23">你的网站赚钱吗？</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ASOV2AU" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UserAgent收集]]></title>
    <link href="http://droidyue.com/blog/2014/07/24/user-agent-summary/"/>
    <updated>2014-07-24T12:44:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/24/user-agent-summary</id>
    <content type="html"><![CDATA[<p>工作中，时不时用到 UA（User Agent），每次都要 Google 搜索，于是自己整理一下，直接看一个比较全的整理就方便多了。</p>

<!--more-->


<h2>Android设备</h2>

<ul>
<li>Nexus 5 4.4.2 1920*1080</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Mozilla</span><span class="o">/</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="no">Linux</span><span class="p">;</span> <span class="no">Android</span> <span class="mi">4</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="p">;</span> <span class="no">Google</span> <span class="no">Nexus</span> <span class="mi">5</span> <span class="o">-</span> <span class="mi">4</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span> <span class="o">-</span> <span class="no">API</span> <span class="mi">19</span> <span class="o">-</span> <span class="mi">1080</span><span class="n">x1920</span> <span class="no">Build</span><span class="o">/</span><span class="no">KOT49H</span><span class="p">)</span> <span class="no">AppleWebKit</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">36</span> <span class="p">(</span><span class="no">KHTML</span><span class="p">,</span> <span class="n">like</span> <span class="no">Gecko</span><span class="p">)</span> <span class="no">Version</span><span class="o">/</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span> <span class="no">Chrome</span><span class="o">/</span><span class="mi">30</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span> <span class="no">Mobile</span> <span class="no">Safari</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">36</span>
</span></code></pre></td></tr></table></div></figure>


<h2>iOS设备</h2>

<ul>
<li>iPhone</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Mozilla</span><span class="o">/</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="n">iPhone</span><span class="p">;</span> <span class="no">CPU</span> <span class="n">iPhone</span> <span class="no">OS</span> <span class="mi">7_1_1</span> <span class="n">like</span> <span class="no">Mac</span> <span class="no">OS</span> <span class="n">X</span><span class="p">)</span> <span class="no">AppleWebKit</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">51</span><span class="o">.</span><span class="mi">2</span> <span class="p">(</span><span class="no">KHTML</span><span class="p">,</span> <span class="n">like</span> <span class="no">Gecko</span><span class="p">)</span> <span class="no">Version</span><span class="o">/</span><span class="mi">7</span><span class="o">.</span><span class="mi">0</span> <span class="no">Mobile</span><span class="o">/</span><span class="mi">11</span><span class="no">D201</span> <span class="no">Safari</span><span class="o">/</span><span class="mi">9537</span><span class="o">.</span><span class="mi">53</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>iPad</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Mozilla</span><span class="o">/</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="n">iPad</span><span class="p">;</span> <span class="no">CPU</span> <span class="no">OS</span> <span class="mi">7_1_1</span> <span class="n">like</span> <span class="no">Mac</span> <span class="no">OS</span> <span class="n">X</span><span class="p">)</span> <span class="no">AppleWebKit</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">51</span><span class="o">.</span><span class="mi">2</span> <span class="p">(</span><span class="no">KHTML</span><span class="p">,</span> <span class="n">like</span> <span class="no">Gecko</span><span class="p">)</span> <span class="no">Version</span><span class="o">/</span><span class="mi">7</span><span class="o">.</span><span class="mi">0</span> <span class="no">Mobile</span><span class="o">/</span><span class="mi">11</span><span class="no">D201</span> <span class="no">Safari</span><span class="o">/</span><span class="mi">9537</span><span class="o">.</span><span class="mi">53</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Mac设备</h2>

<p>Macbook Pro 15-Inch Retina设备</p>

<ul>
<li>Chrome</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Mozilla</span><span class="o">/</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="no">Macintosh</span><span class="p">;</span> <span class="no">Intel</span> <span class="no">Mac</span> <span class="no">OS</span> <span class="n">X</span> <span class="mi">10_9_4</span><span class="p">)</span> <span class="no">AppleWebKit</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">36</span> <span class="p">(</span><span class="no">KHTML</span><span class="p">,</span> <span class="n">like</span> <span class="no">Gecko</span><span class="p">)</span> <span class="no">Chrome</span><span class="o">/</span><span class="mi">36</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1985</span><span class="o">.</span><span class="mi">125</span> <span class="no">Safari</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">36</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Safari</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Mozilla</span><span class="o">/</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="no">Macintosh</span><span class="p">;</span> <span class="no">Intel</span> <span class="no">Mac</span> <span class="no">OS</span> <span class="n">X</span> <span class="mi">10_9_4</span><span class="p">)</span> <span class="no">AppleWebKit</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">77</span><span class="o">.</span><span class="mi">4</span> <span class="p">(</span><span class="no">KHTML</span><span class="p">,</span> <span class="n">like</span> <span class="no">Gecko</span><span class="p">)</span> <span class="no">Version</span><span class="o">/</span><span class="mi">7</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">5</span> <span class="no">Safari</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">77</span><span class="o">.</span><span class="mi">4</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Firefox</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Mozilla</span><span class="o">/</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="no">Macintosh</span><span class="p">;</span> <span class="no">Intel</span> <span class="no">Mac</span> <span class="no">OS</span> <span class="n">X</span> <span class="mi">10</span><span class="o">.</span><span class="mi">9</span><span class="p">;</span> <span class="ss">rv</span><span class="p">:</span><span class="mi">27</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span> <span class="no">Gecko</span><span class="o">/</span><span class="mi">20100101</span> <span class="no">Firefox</span><span class="o">/</span><span class="mi">27</span><span class="o">.</span><span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Maxthon</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Mozilla</span><span class="o">/</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="no">Macintosh</span><span class="p">;</span> <span class="no">Intel</span> <span class="no">Mac</span> <span class="no">OS</span> <span class="n">X</span> <span class="mi">10_9_4</span><span class="p">)</span> <span class="no">AppleWebKit</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">77</span><span class="o">.</span><span class="mi">4</span> <span class="p">(</span><span class="no">KHTML</span><span class="p">,</span> <span class="n">like</span> <span class="no">Gecko</span><span class="p">)</span> <span class="no">Maxthon</span><span class="o">/</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Windows 设备</h2>

<ul>
<li>Windows 7 Chrome</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Mozilla</span><span class="o">/</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="no">Windows</span> <span class="no">NT</span> <span class="mi">6</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span> <span class="no">AppleWebKit</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">36</span> <span class="p">(</span><span class="no">KHTML</span><span class="p">,</span> <span class="n">like</span> <span class="no">Gecko</span><span class="p">)</span> <span class="no">Chrome</span><span class="o">/</span><span class="mi">36</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1985</span><span class="o">.</span><span class="mi">125</span> <span class="no">Safari</span><span class="o">/</span><span class="mi">537</span><span class="o">.</span><span class="mi">36</span>
</span></code></pre></td></tr></table></div></figure>


<h2>工具</h2>

<ul>
<li><a href="http://www.whatsmyuseragent.com/">http://www.whatsmyuseragent.com/</a></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00DS33DAA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00DS33DAA&linkCode=as2&tag=droidyue-23">监督你运动的宝贝</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00DS33DAA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B008IZ83F8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B008IZ83F8&linkCode=as2&tag=droidyue-23">防雾霾利器</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B008IZ83F8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[持续整理：Mac快捷键]]></title>
    <link href="http://droidyue.com/blog/2014/07/23/mac-shortcuts/"/>
    <updated>2014-07-23T10:05:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/23/mac-shortcuts</id>
    <content type="html"><![CDATA[<p>初入 Mac，很多快捷键不是很了解，常用的都可以记住，不常用的都需要记录。又是一片持续更新的技巧总结。一来备忘，二来帮助他人。</p>

<!--more-->


<h2>实践整理</h2>

<ul>
<li>删除文件：      <strong>Command + Delete</strong></li>
<li>快速预览文件：  <strong>选中按空格</strong></li>
<li>锁屏：          <strong>Shift + Contro + 电源键</strong></li>
</ul>


<h3>官方整理</h3>

<ul>
<li><a href="http://support.apple.com/kb/HT1343?viewlocale=zh_CN">http://support.apple.com/kb/HT1343?viewlocale=zh_CN</a></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00FXONTU6/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00FXONTU6&linkCode=as2&tag=droidyue-23">从你的全世界路过:让所有人心动的故事</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00FXONTU6" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0032JTI22/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0032JTI22&linkCode=as2&tag=droidyue-23">拖延心理学(豆瓣拖延小组的镇组之宝)</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0032JTI22" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[网站卖萌的瞬间记录]]></title>
    <link href="http://droidyue.com/blog/2014/07/21/moeru-web-pages/"/>
    <updated>2014-07-21T19:29:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/21/moeru-web-pages</id>
    <content type="html"><![CDATA[<p>本着万物皆可萌的信念,收集了很多个人遇到的比较萌的网站页面,其中很多以404和退订相关的页面.萌妹纸,怪叔叔们,不要鄙视啊.</p>

<!--more-->


<h2>惠惠退订</h2>

<p>烦人的惠惠邮件激怒了我,于是退订了它,居然它哭了,呜呜
<img src="http://droidyueimg.qiniudn.com/huihui_unsubscribe_page.png" title="unsubscribe huihui dm" ></p>

<h2>京东404</h2>

<p>刘强东,你家的小狗跑哪里去了,都把绳子给咬断了.
<img src="http://droidyueimg.qiniudn.com/jd_404.png" title="jd.com File Not Found" ></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00JZ96ZI8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00JZ96ZI8&linkCode=as2&tag=droidyue-23">解忧杂货店</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00JZ96ZI8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00FXONTU6/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00FXONTU6&linkCode=as2&tag=droidyue-23">从你的全世界路过:让所有人心动的故事</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00FXONTU6" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[持续整理:git分支操作]]></title>
    <link href="http://droidyue.com/blog/2014/07/21/git-tutorial-about-branch/"/>
    <updated>2014-07-21T19:07:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/21/git-tutorial-about-branch</id>
    <content type="html"><![CDATA[<p>这篇文章主要的目的是记录一下git中关于分支相关的操作记录. 本文会持续更新,所有的操作都经过本人实践,可以正常运行,并且可以解决问题.</p>

<p>我就不罗嗦介绍什么事Git和Git有多么牛了.</p>

<!--more-->


<hr />

<h3>迁出远程分支</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout  -b new_local_branch_name repository_name/remote_branch_name
</span><span class='line'><span class="c">##Example</span>
</span><span class='line'>git checkout  -b custom origin/custom
</span><span class='line'><span class="c">##建议是本地的分支名字和其对应的远程分支名称一样.</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h3>查看本地所有分支</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch
</span></code></pre></td></tr></table></div></figure>


<p></p>

<hr />

<h3>查看远程所有分支</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch -r
</span></code></pre></td></tr></table></div></figure>


<hr />

<h3>删除本地分支</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch -d your_branch_name
</span></code></pre></td></tr></table></div></figure>


<hr />

<h3>强制删除本地分支</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch -D your_branch_name
</span></code></pre></td></tr></table></div></figure>


<hr />

<h3>删除远程分支</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git push origin --delete your_branch_name
</span></code></pre></td></tr></table></div></figure>


<p>或者更简单的写法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git push origin :your_branch_name
</span></code></pre></td></tr></table></div></figure>


<hr />

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/1430218339/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=1430218339&linkCode=as2&tag=droidyue-23">Pro Git</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=1430218339" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/1430218339/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=1430218339&linkCode=as2&tag=droidyue-23">成为大神必读的Git书籍</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=1430218339" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android实现引用其他程序的文本资源]]></title>
    <link href="http://droidyue.com/blog/2014/07/21/refer-strings-from-other-applications-in-android-chinese-edition/"/>
    <updated>2014-07-21T07:39:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/21/refer-strings-from-other-applications-in-android-chinese-edition</id>
    <content type="html"><![CDATA[<p>在Android中引用其他程序的文本资源并不是很常见,但是有时候还是很是有需要的,通常引用的多半是系统的程序的文本资源.</p>

<p>下面以一个超简单的例子,来展示以下如何实现.</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">testUseAndroidString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Context</span> <span class="n">context</span> <span class="o">=</span> <span class="n">getContext</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Resources</span> <span class="n">res</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">//I want to use the clear_activities string in Package com.android.settings</span>
</span><span class='line'>        <span class="n">res</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">().</span><span class="na">getResourcesForApplication</span><span class="o">(</span><span class="s">&quot;com.android.settings&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">resourceId</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="s">&quot;com.android.settings:string/clear_activities&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="mi">0</span> <span class="o">!=</span> <span class="n">resourceId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">CharSequence</span> <span class="n">s</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">().</span><span class="na">getText</span><span class="o">(</span><span class="s">&quot;com.android.settings&quot;</span><span class="o">,</span> <span class="n">resourceId</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">VIEW_LOG_TAG</span><span class="o">,</span> <span class="s">&quot;resource=&quot;</span> <span class="o">+</span> <span class="n">s</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NameNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00BMTVUGG/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00BMTVUGG&linkCode=as2&tag=droidyue-23">Android软件安全与逆向分析</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00BMTVUGG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00E192518/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00E192518&linkCode=as2&tag=droidyue-23">你一定爱读的极简欧洲史</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00E192518" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android修复通知栏跳动的问题]]></title>
    <link href="http://droidyue.com/blog/2014/07/20/fix-notification-switching-position-issue-chinese-edition/"/>
    <updated>2014-07-20T11:59:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/20/fix-notification-switching-position-issue-chinese-edition</id>
    <content type="html"><![CDATA[<p>曾经遇到过这样的问题，在我的代码中使用了通知栏，一切都正常，但是就是正在进行的通知栏中属于我的程序的那一条总是上下跳来跳去，一闪一闪的。感觉用户体验很不好，于是Google一下，找到了解决方法。</p>

<!-- more -->


<p>在我的代码，我是这样写的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">notification</span><span class="o">.</span><span class="na">when</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>这就是问题的关键，对于通知来说，when这个属性值应该在activity一启动的时候就应该固定。如果没有固定，就会使用默认的值，默认的值就是当前的时间，即<code>System.currentTimeMillis()</code>的值。因此使用一个自定义的固定值就可以解决问题。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">final</span> <span class="kt">long</span> <span class="n">TIMESTAMP_FIXED</span> <span class="o">=</span> <span class="mi">1234567890</span><span class="n">l</span><span class="o">;</span>
</span><span class='line'><span class="n">notification</span><span class="o">.</span><span class="na">when</span> <span class="o">=</span> <span class="n">TIMESTAMP_FIXED</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下如Google介绍如何使用notification的when的说明。</p>

<blockquote><p>A timestamp related to this notification, in milliseconds since the epoch. Default value: Now. Choose a timestamp that will be most relevant to the user. For most finite events, this corresponds to the time the event happened (or will happen, in the case of events that have yet to occur but about which the user is being informed). Indefinite events should be timestamped according to when the activity began. Some examples:</p>

<ul>
<li>Notification of a new chat message should be stamped when the message was received.</li>
<li>Notification of an ongoing file download (with a progress bar, for example) should be stamped when the download started.</li>
<li>Notification of a completed file download should be stamped when the download finished.</li>
<li>Notification of an upcoming meeting should be stamped with the time the meeting will begin (that is, in the future).</li>
<li>Notification of an ongoing stopwatch (increasing timer) should be stamped with the watch&rsquo;s start time.</li>
<li>Notification of an ongoing countdown timer should be stamped with the timer&rsquo;s end time.</li>
</ul>
</blockquote>

<h3>Reference</h3>

<ul>
<li><a href="http://developer.android.com/reference/android/app/Notification.html#when">http://developer.android.com/reference/android/app/Notification.html#when</a></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00J91AF9C/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00J91AF9C&linkCode=as2&tag=droidyue-23">打造高质量Android应用:Android开发必知的50个诀窍</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00J91AF9C" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00D2ID4PK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00D2ID4PK&linkCode=as2&tag=droidyue-23">深入理解Java虚拟机:JVM高级特性与最佳实践</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00D2ID4PK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你真的懂么:Android中删除Preference]]></title>
    <link href="http://droidyue.com/blog/2014/07/18/remove-a-preference-from-the-screen/"/>
    <updated>2014-07-18T20:50:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/18/remove-a-preference-from-the-screen</id>
    <content type="html"><![CDATA[<p>Android的设置界面实现比较简单,有时甚至只需要使用一个简单的xml文件即可.声明简单,但是如何从PreferenceScreen或者PreferenceCategory中删除一个Preference会简单么.为什么有些人写的就无法删除成功呢?本文将从Android源码实现来分析一下.</p>

<!--more-->


<h2>声明文件</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;PreferenceScreen</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">android:key=</span><span class="s">&quot;root&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;PreferenceCategory</span>
</span><span class='line'>      <span class="na">android:key=</span><span class="s">&quot;theme&quot;</span>
</span><span class='line'>      <span class="na">android:title=</span><span class="s">&quot;Theme&quot;</span>
</span><span class='line'>      <span class="na">android:summary=</span><span class="s">&quot;Theme Settings&quot;</span>
</span><span class='line'>      <span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;CheckBoxPreference</span>
</span><span class='line'>          <span class="na">android:key=</span><span class="s">&quot;holo_theme&quot;</span>
</span><span class='line'>          <span class="na">android:title=</span><span class="s">&quot;Holo Theme&quot;</span>
</span><span class='line'>          <span class="na">android:summary=</span><span class="s">&quot;Use Holo Theme&quot;</span>
</span><span class='line'>          <span class="nt">/&gt;</span>
</span><span class='line'>      
</span><span class='line'>  <span class="nt">&lt;/PreferenceCategory&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;CheckBoxPreference</span>
</span><span class='line'>      <span class="na">android:key=</span><span class="s">&quot;rmcache&quot;</span>
</span><span class='line'>      <span class="na">android:title=</span><span class="s">&quot;Auto Clear Cache&quot;</span>
</span><span class='line'>      <span class="na">android:summary=</span><span class="s">&quot;Enable Auto Clear Cache &quot;</span>
</span><span class='line'>      <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/PreferenceScreen&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>层级关系</h2>

<p><img src="http://droidyueimg.qiniudn.com/preference_family_tree.png" title="preferece family tree" ></p>

<h2>删除Preference</h2>

<ul>
<li>删除key为rmcache的Preference,这个Preference是PreferenceScreen root的子节点.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PreferenceScreen</span> <span class="n">screen</span> <span class="o">=</span> <span class="n">getPreferenceScreen</span><span class="o">();</span>
</span><span class='line'><span class="n">CheckBoxPreference</span> <span class="n">autoClearCheckboxPref</span> <span class="o">=</span> <span class="o">(</span><span class="n">CheckBoxPreference</span><span class="o">)</span> <span class="n">screen</span><span class="o">.</span><span class="na">findPreference</span><span class="o">(</span><span class="s">&quot;rmcache&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">screen</span><span class="o">.</span><span class="na">removePreference</span><span class="o">(</span><span class="n">autoClearCheckboxPref</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>删除key为holo_theme的Preference,其为PreferenceScreen root的孙子节点,非直接关系.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PreferenceCategory</span> <span class="n">themePrefCategory</span> <span class="o">=</span> <span class="o">(</span><span class="n">PreferenceCategory</span><span class="o">)</span> <span class="n">screen</span><span class="o">.</span><span class="na">findPreference</span><span class="o">(</span><span class="s">&quot;theme&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">CheckBoxPreference</span> <span class="n">holoCheckboxPref</span> <span class="o">=</span> <span class="o">(</span><span class="n">CheckBoxPreference</span><span class="o">)</span><span class="n">themePrefCategory</span><span class="o">.</span><span class="na">findPreference</span><span class="o">(</span><span class="s">&quot;holo_theme&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">themePrefCategory</span><span class="o">.</span><span class="na">removePreference</span><span class="o">(</span><span class="n">holoCheckboxPref</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>为什么删除失败</h2>

<p>很多人出现了删除失败的问题,主要原因是使用了非父亲节点来删除,比如这样</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PreferenceScreen</span> <span class="n">screen</span> <span class="o">=</span> <span class="n">getPreferenceScreen</span><span class="o">();</span>
</span><span class='line'><span class="n">CheckBoxPreference</span> <span class="n">holoCheckboxPref</span> <span class="o">=</span> <span class="o">(</span><span class="n">CheckBoxPreference</span><span class="o">)</span><span class="n">screen</span><span class="o">.</span><span class="na">findPreference</span><span class="o">(</span><span class="s">&quot;holo_theme&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">screen</span><span class="o">.</span><span class="na">removePreference</span><span class="o">(</span><span class="n">holoCheckboxPref</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>PreferenceGroup删除实现,其实PreferenceScreen和PreferenceCategory都是PreferenceGroup的子类.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>   <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Removes a {@link Preference} from this group.</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param preference The preference to remove.</span>
</span><span class='line'><span class="cm">     * @return Whether the preference was found and removed.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">removePreference</span><span class="o">(</span><span class="n">Preference</span> <span class="n">preference</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">final</span> <span class="kt">boolean</span> <span class="n">returnValue</span> <span class="o">=</span> <span class="n">removePreferenceInt</span><span class="o">(</span><span class="n">preference</span><span class="o">);</span>
</span><span class='line'>        <span class="n">notifyHierarchyChanged</span><span class="o">();</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">returnValue</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">removePreferenceInt</span><span class="o">(</span><span class="n">Preference</span> <span class="n">preference</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">synchronized</span><span class="o">(</span><span class="k">this</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">preference</span><span class="o">.</span><span class="na">onPrepareForRemoval</span><span class="o">();</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">mPreferenceList</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">preference</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>而mPreferenceList中存放的都是当前PreferenceGroup的直接子Preference.</p>

<h2>findPreference实现</h2>

<p>findPreference查找不仅仅限于直接子Preference,会遍历其所有的子Preference.</p>

<p>所以代码中同样有root PreferenceGroup和直接父PreferenceGroup引用时,通常后者效率会高.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Finds a {@link Preference} based on its key. If two {@link Preference}</span>
</span><span class='line'><span class="cm"> * share the same key (not recommended), the first to appear will be</span>
</span><span class='line'><span class="cm"> * returned (to retrieve the other preference with the same key, call this</span>
</span><span class='line'><span class="cm"> * method on the first preference). If this preference has the key, it will</span>
</span><span class='line'><span class="cm"> * not be returned.</span>
</span><span class='line'><span class="cm"> * &lt;p&gt;</span>
</span><span class='line'><span class="cm"> * This will recursively search for the preference into children that are</span>
</span><span class='line'><span class="cm"> * also {@link PreferenceGroup PreferenceGroups}.</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * @param key The key of the preference to retrieve.</span>
</span><span class='line'><span class="cm"> * @return The {@link Preference} with the key, or null.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="n">Preference</span> <span class="nf">findPreference</span><span class="o">(</span><span class="n">CharSequence</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">TextUtils</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">getKey</span><span class="o">(),</span> <span class="n">key</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">int</span> <span class="n">preferenceCount</span> <span class="o">=</span> <span class="n">getPreferenceCount</span><span class="o">();</span>
</span><span class='line'>    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">preferenceCount</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">Preference</span> <span class="n">preference</span> <span class="o">=</span> <span class="n">getPreference</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">String</span> <span class="n">curKey</span> <span class="o">=</span> <span class="n">preference</span><span class="o">.</span><span class="na">getKey</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">curKey</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">curKey</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">key</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">preference</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">preference</span> <span class="k">instanceof</span> <span class="n">PreferenceGroup</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="kd">final</span> <span class="n">Preference</span> <span class="n">returnedPreference</span> <span class="o">=</span> <span class="o">((</span><span class="n">PreferenceGroup</span><span class="o">)</span><span class="n">preference</span><span class="o">)</span>
</span><span class='line'>                    <span class="o">.</span><span class="na">findPreference</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">returnedPreference</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">returnedPreference</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>findPreference和removePreference实现比较</h2>

<p>为什么findPreference遍历所有的子节点,而removePreference不会,只会删除直接子Preference</p>

<h3>原因有以下几点:</h3>

<ul>
<li>findPreference支持遍历查找,减少了声明诸多的中间PreferenceGroup代码.而findPreference属于常用接口方法.</li>
<li>removePreference调用较少.</li>
<li>当存在key相同的Preference时,如果removePreference不限定直接子Preference,那么无法准确删除哪一个.</li>
</ul>


<hr />

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00CJ368JS/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00CJ368JS&linkCode=as2&tag=droidyue-23">Android的设计与实现</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00CJ368JS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B009OLU8EE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B009OLU8EE&linkCode=as2&tag=droidyue-23">Android系统源代码情景分析</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B009OLU8EE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[退订招商银行广告邮件那些事]]></title>
    <link href="http://droidyue.com/blog/2014/07/18/unsubscribe-cmb-ad-dm/"/>
    <updated>2014-07-18T13:44:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/18/unsubscribe-cmb-ad-dm</id>
    <content type="html"><![CDATA[<p>自从办理信用卡留下了我的gmail邮箱之后,就偶尔收到招商银行的购物类的广告邮件,发现没有多大的用处,于是就决定清理掉.谁知逆天的是,它的退订简直是不能用.</p>

<!--more-->


<h2>招商银行购物类邮件</h2>

<p>购物类广告邮件大概长成这个样子
<img src="http://droidyueimg.qiniudn.com/cmb_ad_mail.png" title="CMB Ads DM" ></p>

<h2>无法退订!!!</h2>

<p>当我点击邮件中的退订链接,逆天了,这简直是没有人测试啊
<img src="http://droidyueimg.qiniudn.com/cmb_ad_mail_unsubscribe_page.png" title="CMB unsubscripe page" ></p>

<h2>能难倒程序员么</h2>

<p>这段代码简直是太简单了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">subEml</span><span class="p">(</span><span class="nx">flag</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">param</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">search</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">flag</span> <span class="o">==</span> <span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">&quot;https://pbdw.ebank.cmbchina.com/edm/servlet/ExtImageServlet&quot;</span> <span class="o">+</span> <span class="nx">param</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">url</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>看一下<code>window.location.search</code>,结果就是get请求参数
<img src="http://droidyueimg.qiniudn.com/cmb_ad_mail_params.png" title="cmb ad mail params" ></p>

<h2>解决方法</h2>

<h3>技术宅能听懂的</h3>

<p>其实讲到这里,怎么做你懂得.</p>

<p>将<code>window.location.search</code>得到的值,拼接<code>https://pbdw.ebank.cmbchina.com/edm/servlet/ExtImageServlet</code>,然后进行一个get请求即可.</p>

<h3>小白能听懂的</h3>

<p>点击退订链接后,地址然会有类似<a href="https://pbdw.ebank.cmbchina.com/cbmresource/22/unsub/unSubEml.html?CALL=DMZ_UNSUBINFO">https://pbdw.ebank.cmbchina.com/cbmresource/22/unsub/unSubEml.html?CALL=DMZ_UNSUBINFO</a> 这样的链接,从问号(包含)开始选择到结尾,复制,然后将复制的放在 <a href="https://pbdw.ebank.cmbchina.com/edm/servlet/ExtImageServlet">https://pbdw.ebank.cmbchina.com/edm/servlet/ExtImageServlet</a> 后面,将组合后的地址复制然后粘贴到地址栏按回车就可以了.</p>

<h2>退订成功的标志</h2>

<p>再一次无语的退订成功的界面
<img src="http://droidyueimg.qiniudn.com/cmb_ad_mail_unsubscribe_result.png" title="cmd ad mail unsubscribed result" ></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00JRUE7VW/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00JRUE7VW&linkCode=as2&tag=droidyue-23">白岩松:行走在爱与恨之间</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00JRUE7VW" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00KVZ5FBI/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KVZ5FBI&linkCode=as2&tag=droidyue-23">时寒冰说:未来二十年,经济大趋势(现实篇)</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00KVZ5FBI" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tar time stamp in the future 问题解决]]></title>
    <link href="http://droidyue.com/blog/2014/07/18/tar-time-stamp-in-the-future/"/>
    <updated>2014-07-18T00:19:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/18/tar-time-stamp-in-the-future</id>
    <content type="html"><![CDATA[<p>最近遇到过一个这样的问题,我在我的Mac机器将一个刚刚创建的文件进行tar打包生成文件scripts.tar.bz2,然后在一台Centos得到这个文件,进行解压,然后出现了如下问题 time stamp in the future.</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>tar xvjf scripts.tar.bz2
</span><span class='line'>temp
</span><span class='line'>tar: temp: <span class="nb">time </span>stamp 2014-07-17 13:34:02 is 2459.292801106 s in the future
</span></code></pre></td></tr></table></div></figure>


<h2>原因</h2>

<p>两台机器时间不一致,创建并压缩文件操作的机器(本例为Mac)的时间要大于解压文件机器(Centos)的时间</p>

<h2>对症下药</h2>

<ul>
<li>将两台机器的时间调整为一致.</li>
<li>加上m参数,如 <strong>tar xvjfm scripts.tar.bz2</strong> 使用解压机器上的时间.<code>-m, --touch                don't extract file modified time</code></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B003TJNO98/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003TJNO98&linkCode=as2&tag=droidyue-23">鸟哥的Linux私房菜:基础学习篇</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B003TJNO98" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定义控件进阶:declare-styleable重用attr]]></title>
    <link href="http://droidyue.com/blog/2014/07/16/better-in-android-include-attrs-in-declare-stylable/"/>
    <updated>2014-07-16T19:37:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/16/better-in-android-include-attrs-in-declare-stylable</id>
    <content type="html"><![CDATA[<p>最近接触了Android自定义控件,涉及到自定义xml中得属性(attribute),其实也很简单,但是写着写着,发现代码不完美了,就是在attrs.xml这个文件中,发现属性冗余,于是就想有没有类似属性继承或者include之类的方法.本文将就declare-stylable中属性重用记录一下.</p>

<!--more-->


<h2>不完美的代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;resources&gt;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="nt">&lt;declare-styleable</span> <span class="na">name=</span><span class="s">&quot;ExTextView&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>       <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;enableOnPad&quot;</span> <span class="na">format=</span><span class="s">&quot;boolean&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>     <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;supportDeviceType&quot;</span> <span class="na">format=</span><span class="s">&quot;reference&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/declare-styleable&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;declare-styleable</span> <span class="na">name=</span><span class="s">&quot;ExEditText&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>       <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;enableOnPad&quot;</span> <span class="na">format=</span><span class="s">&quot;boolean&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>     <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;supportDeviceType&quot;</span> <span class="na">format=</span><span class="s">&quot;reference&quot;</span><span class="nt">/&gt;</span>  
</span><span class='line'>    <span class="nt">&lt;/declare-styleable&gt;</span>
</span><span class='line'><span class="nt">&lt;/resources&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>如上面代码,在ExTextView和ExEditText这个stylable中有着重复的属性申明.虽然上面可以工作,但是总感觉写的不专业,于是寻找优化方法.</p>

<h2>这样可以么</h2>

<p>尝试着为declare-stylable指定一个parent,如下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;resources&gt;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="nt">&lt;declare-styleable</span> <span class="na">name=</span><span class="s">&quot;ExTextView&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>       <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;enableOnPad&quot;</span> <span class="na">format=</span><span class="s">&quot;boolean&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>     <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;supportDeviceType&quot;</span> <span class="na">format=</span><span class="s">&quot;reference&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/declare-styleable&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;declare-styleable</span> <span class="na">name=</span><span class="s">&quot;ExEditText&quot;</span> <span class="na">parent=</span><span class="s">&quot;ExTextView&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          
</span><span class='line'>    <span class="nt">&lt;/declare-styleable&gt;</span>
</span><span class='line'><span class="nt">&lt;/resources&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>attrs.xml没有报告语法错误.但是当我使用<strong>R.styleable.ExEditText_supportDeviceType</strong>时候,R文件却没有生成,重新清理了工程还是不生效,不知道是否为adt插件的问题.其他人也遇到了这样的问题. <strong>这个方法目前是不行的</strong>.</p>

<h2>终极答案</h2>

<p>实际上我们可以在declare-stylable之前,申明要多次使用的属性,在declare-stylable节点内部,只需调用即可.具体代码如下.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;resources&gt;</span>
</span><span class='line'>  <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;enableOnPad&quot;</span> <span class="na">format=</span><span class="s">&quot;boolean&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;supportDeviceType&quot;</span> <span class="na">format=</span><span class="s">&quot;reference&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="nt">&lt;declare-styleable</span> <span class="na">name=</span><span class="s">&quot;ExTextView&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;enableOnPad&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;supportDeviceType&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/declare-styleable&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;declare-styleable</span> <span class="na">name=</span><span class="s">&quot;ExEditText&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;enableOnPad&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;supportDeviceType&quot;</span><span class="nt">/&gt;</span> 
</span><span class='line'>    <span class="nt">&lt;/declare-styleable&gt;</span>
</span><span class='line'><span class="nt">&lt;/resources&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>每次引用attr后,建议清理一下工程,确保R文件重新生成.</p>

<h2>延伸阅读</h2>

<ul>
<li><a href="http://stackoverflow.com/questions/18827875/how-to-declare-several-stylable-attributes-with-the-same-name-for-different-tags">http://stackoverflow.com/questions/18827875/how-to-declare-several-stylable-attributes-with-the-same-name-for-different-tags</a></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B009OLU8EE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B009OLU8EE&linkCode=as2&tag=droidyue-23">Android系统源代码情景分析</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B009OLU8EE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android支持动态申请权限么]]></title>
    <link href="http://droidyue.com/blog/2014/07/16/does-android-support-granting-permission-dynamiclly/"/>
    <updated>2014-07-16T18:52:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/16/does-android-support-granting-permission-dynamiclly</id>
    <content type="html"><![CDATA[<p>作为Android开发者,为程序增加权限是在正常不过的事情了,做法必然是在mainifest中,写入类似这样<code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt;</code>的信息. 以静态申请的形式来完成. 于是这里我想抛出一个问题,Android平台支持动态申请权限么.</p>

<!--more-->


<p>相信很多人回答都是不支持,当然这个答案是对的,但是为什么不支持呢,知其然更要知其所以然.了解其原因还是相当有必要的.</p>

<h2>原因列举</h2>

<ul>
<li><p>Android没有提供动态申请权限的机制.</p></li>
<li><p>目前的静态申请可以将权限安全隐患放在程序安装之前一次提示搞定,而如果动态申请,就会时不时弹出申请框.这样的用户体验太差了.</p></li>
<li><p>一些权限申请需要依赖于设备的feature(特性),使用静态申请可以明确知道设备需要的特性,Google Play根据程序需要的特性和目标设备具有的特性来决定该设备是否被展示和安装.而动态申请无法明确知道需要的feature.可能导致可以展示的应用无法安装.</p></li>
<li><p>可能会带来安全隐患问题.</p></li>
</ul>


<h2>延伸阅读</h2>

<ul>
<li><a href="http://stackoverflow.com/questions/4838779/get-android-permission-dynamiclly">http://stackoverflow.com/questions/4838779/get-android-permission-dynamiclly</a></li>
<li><a href="http://stackoverflow.com/questions/7517171/is-there-any-way-to-ask-permission-programmatically">http://stackoverflow.com/questions/7517171/is-there-any-way-to-ask-permission-programmatically</a></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B009OLU8EE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B009OLU8EE&linkCode=as2&tag=droidyue-23">Android系统源代码情景分析</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B009OLU8EE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python中的字典遍历]]></title>
    <link href="http://droidyue.com/blog/2014/07/15/python-dictionary-traversal-examples/"/>
    <updated>2014-07-15T19:21:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/15/python-dictionary-traversal-examples</id>
    <content type="html"><![CDATA[<p>备忘一下python中的字典如何遍历,没有什么太多技术含量.仅供作为初学者的我参考.</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c"># coding=utf-8</span>
</span><span class='line'><span class="n">demoDict</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;1&#39;</span><span class="p">:</span><span class="s">&#39;Chrome&#39;</span><span class="p">,</span> <span class="s">&#39;2&#39;</span><span class="p">:</span><span class="s">&#39;Android&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">demoDict</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">key</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">demoDict</span><span class="o">.</span><span class="n">values</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">value</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">demoDict</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">key</span><span class="p">,</span> <span class="n">demoDict</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">demoDict</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">demoDict</span><span class="o">.</span><span class="n">iterkeys</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">key</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">demoDict</span><span class="o">.</span><span class="n">itervalues</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">value</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">demoDict</span><span class="o">.</span><span class="n">iteritems</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;dict.keys()=&#39;</span><span class="p">,</span> <span class="n">demoDict</span><span class="o">.</span><span class="n">keys</span><span class="p">(),</span> <span class="s">&#39;;dict.iterkeys()=&#39;</span><span class="p">,</span> <span class="n">demoDict</span><span class="o">.</span><span class="n">iterkeys</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>interitems和iterms区别</h2>

<ul>
<li>参考 <a href="http://stackoverflow.com/questions/10458437/python-what-is-the-difference-between-dict-items-and-dict-iteritems">http://stackoverflow.com/questions/10458437/python-what-is-the-difference-between-dict-items-and-dict-iteritems</a></li>
</ul>


<h3>Others</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B003TSBAMM/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003TSBAMM&linkCode=as2&tag=droidyue-23">Python基础教程</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B003TSBAMM" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你造么,Android中程序的停止状态]]></title>
    <link href="http://droidyue.com/blog/2014/07/14/look-inside-android-package-stop-state-since-honeycomb-mr1/"/>
    <updated>2014-07-14T19:46:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/14/look-inside-android-package-stop-state-since-honeycomb-mr1</id>
    <content type="html"><![CDATA[<p>很多人遇到过广播收不到的问题,比如Google Play推广安装广播没有收到等,诸如这些问题,又都是什么原因呢,这篇文章将进行回答.</p>

<p>从Android 3.1(HoneyComb) 也就是API 12开始,Android引入了一套新的启动控制,这就是程序的停止状态.那让我们看一下Google对于程序的停止状态的描述.</p>

<!--more-->


<h2>什么是程序的停止状态</h2>

<blockquote><p>Starting from Android 3.1, the system&rsquo;s package manager keeps track of applications that are in a stopped state and provides a means of controlling their launch from background processes and other applications.</p>

<p>从Android 3.1开始,系统的包管理器开始跟踪处理停止状态的程序.并且提供了方法来控制从后台进程或者其他程序对它们的启动.</p>

<p>Note that an application&rsquo;s stopped state is not the same as an Activity&rsquo;s stopped state. The system manages those two stopped states separately.</p>

<p>注意 程序的停止状态和Activity的停止状态不同,系统会单独处理这两种状态.</p>

<p>The platform defines two new intent flags that let a sender specify whether the Intent should be allowed to activate components in stopped application.
Android平台提供了两个intent flags,用来让发送广播的一方决定广播是否需要同时发送给已经停止的程序.</p>

<p>FLAG_INCLUDE_STOPPED_PACKAGES — Include intent filters of stopped applications in the list of potential targets to resolve against.
将已经支持的程序加入到能处理intent的目标处理者.</p>

<p>FLAG_EXCLUDE_STOPPED_PACKAGES — Exclude intent filters of stopped applications from the list of potential targets.
在能处理intent的目标处理者中不包含已经停止的程序.</p></blockquote>

<p>当如果intnet中没有或者设置了上面两个flag,在目标处理者中是包含已经处于停止的程序.但是注意,系统会为所有的广播intent增加FLAG_EXCLUDE_STOPPED_PACKAGES这个flag.</p>

<h2>为什么Android要引入这一状态</h2>

<p>Note that the system adds FLAG_EXCLUDE_STOPPED_PACKAGES to all broadcast intents. It does this to prevent broadcasts from background services from inadvertently or unnecessarily launching components of stoppped applications. A background service or application can override this behavior by adding the FLAG_INCLUDE_STOPPED_PACKAGES flag to broadcast intents that should be allowed to activate stopped applications.</p>

<p>需要注意的是,系统会默认地对所有的广播intent增加一个FLAG_EXCLUDE_STOPPED_PACKAGES的flag,这样做的目的是为了阻止来自后台服务的广播不慎或者启动处于停止状态的程序的不必要的组件.</p>

<p>通常的intnet广播,处于停止状态的程序的receiver是无法接受到的.那么怎么才能让这些停止状态的程序接受到呢?可以这样做,在后台服务或者应用中发送广播时,增加一个FLAG_INCLUDE_STOPPED_PACKAGES 的flag,意思是包含处于停止状态的程序.这样就可以激活停止状态的程序.</p>

<p>正如上述引用指出,系统默认阻止广播intent发送给处于停止状态的程序包,实际上这是为了保证安全和省电需要.比如说网络变化的广播,如果某些程序注册监听,并且它在得到广播时,做一系列的网络操作,这样必然是很耗能源的.</p>

<h2>激活状态和停止状态的切换</h2>

<p>当程序第一次安装并且没有启动,或者用户手动从程序管理将其停止后,程序都会处于停止状态.</p>

<h3>如何变为停止状态</h3>

<ul>
<li>在设置应用管理中的应用详情页点击强制停止</li>
<li>使用adb shell    <code>adb shell am force-stop package-name</code></li>
<li>使用ActivityManager的隐藏方法forceStopPackages,并且向manifest加入申请权限&lt;uses-permission android:name=&ldquo;android.permission.FORCE_STOP_PACKAGES&rdquo;/></li>
</ul>


<h3>如何脱离停止状态</h3>

<ul>
<li>手动启动程序</li>
<li>使用adb激活应用组件,如activity或者receiver</li>
</ul>


<h2>发送广播intent给处于停止状态的应用</h2>

<ul>
<li>在Java代码发送Intent时,加入flag FLAG_INCLUDE_STOPPED_PACKAGES</li>
<li>如果使用adb,同样是加入FLAG_INCLUDE_STOPPED_PACKAGES(其具体值为32),如<strong>adb shell am broadcast -a com.android.vending.INSTALL_REFERRER -f 32</strong></li>
</ul>


<h2>检查是否处于停止状态</h2>

<ul>
<li>进入设置&mdash;应用管理&mdash;某个应用的详细页,如果强制停止按钮不可用,则说明程序已经处于停止状态.</li>
<li>进入设备终端,查看系统文件<strong>cat /data/system/packages-stopped.xml</strong></li>
</ul>


<h2>问答环节</h2>

<ul>
<li>提问:如果我的程序没有activity只有一个receiver,我改如何激活才能接收到正常的广播intent呢</li>
<li><p>回答:实际上,如果是上面所述的情况,该应用在安装之后不是处于停止状态,因为它没有任何用户可以直接点击的行为去将它移除停止状态.你可以正常接收广播intent,除非你人为地将它强制停止.</p></li>
<li><p>提问:系统的程序刚安装会处于停止状态么?</p></li>
<li><p>回答:系统的程序通常会存放在 /system/app目录下,在一开始安装之后不会处于停止状态.</p></li>
<li><p>提问:Google Play的推广广播据说是在程序安装完成之后发送,是不是3.1之后受影响么</p></li>
<li>回答:不受影响的.Google文档说INSTALL_REFERRER会在程序安装完成之后发送,据实际查看日志观察,从3.1之后,是在程序安装后第一次打开时发送.</li>
</ul>


<h2>引用参考</h2>

<p><a href="http://developer.android.com/about/versions/android-3.1.html" target="_blank">Android 3.1 Hignlight</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00EOIDFX8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00EOIDFX8&linkCode=as2&tag=droidyue-23">Android开发权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00EOIDFX8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B007PMPHJA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B007PMPHJA&linkCode=as2&tag=droidyue-23">Android框架揭秘</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B007PMPHJA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决Mac终端退出时的不爽]]></title>
    <link href="http://droidyue.com/blog/2014/07/13/mac-terminal-exit-troubleshoot/"/>
    <updated>2014-07-13T14:28:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/13/mac-terminal-exit-troubleshoot</id>
    <content type="html"><![CDATA[<h2>问题</h2>

<p>从Fedora切换到Linux下,有很多不适应,与其说不适应不如说不爽,其中一个就是今天要说的终端输入exit的问题.在Linux发行版中,输入exit会推出当前窗口,而Mac居然不是,弄出来一个特别脑残的Process Completed,中文版提示大概是提示进程已完成. 然后什么也不能做,只能关闭.真心有点搞不懂这么设计的用意是什么.</p>

<!--more-->


<p><img src="http://droidyueimg.qiniudn.com/terminal_process_finished.png" title="Mac Terminal Process Completed" ></p>

<h2>解决</h2>

<p>当然遇到问题,解决是很必要的,其实简单修改就可以解决问题.
设置Settings&mdash;Shell&mdash;When the shell exits 选择close the window 或如图.
<img src="http://droidyueimg.qiniudn.com/terminal_set_close_exit.png" title="Mac Terminal Set Close Window When Exists" ></p>

<h3>Others</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00A11060M/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00A11060M&linkCode=as2&tag=droidyue-23">Mac功夫:OSX的300多个技巧和小窍门</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00A11060M" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00H1OF8ZA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00H1OF8ZA&linkCode=as2&tag=droidyue-23">苹果Mac OS X 10.9 Mavericks高手真经</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00H1OF8ZA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解密:Android设置默认程序]]></title>
    <link href="http://droidyue.com/blog/2014/07/13/set-preferred-application-in-android-chinese-edition/"/>
    <updated>2014-07-13T12:09:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/13/set-preferred-application-in-android-chinese-edition</id>
    <content type="html"><![CDATA[<p>Android作为一个伟大的系统,自然提供了设置默认打开程序的实现.在这篇文章中,我会介绍如何在Android系统中设置默认的程序. 在设置默认程序之前,无非有两种情况,一种是已经有默认的程序,另一种则是没有任何默认程序.</p>

<!--more-->


<h2>检测是否有默认的程序</h2>

<p>检查是必须的,因为结果关乎着我们下一步该怎么做.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">testGetDefaultActivity</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">PackageManager</span> <span class="n">pm</span> <span class="o">=</span> <span class="n">mContext</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">ACTION_VIEW</span><span class="o">);</span>
</span><span class='line'>    <span class="n">intent</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">&quot;http://www.google.com&quot;</span><span class="o">));</span>
</span><span class='line'>    <span class="n">ResolveInfo</span> <span class="n">info</span> <span class="o">=</span> <span class="n">pm</span><span class="o">.</span><span class="na">resolveActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">PackageManager</span><span class="o">.</span><span class="na">MATCH_DEFAULT_ONLY</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">VIEW_LOG_TAG</span><span class="o">,</span> <span class="s">&quot;getDefaultActivity info = &quot;</span> <span class="o">+</span> <span class="n">info</span> <span class="o">+</span> <span class="s">&quot;;pkgName = &quot;</span> <span class="o">+</span> <span class="n">info</span><span class="o">.</span><span class="na">activityInfo</span><span class="o">.</span><span class="na">packageName</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其对应的日志输出如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">View</span>    <span class="o">(</span> <span class="mi">1145</span> <span class="o">):</span> <span class="n">View</span> <span class="n">getDefaultActivity</span> <span class="n">info</span> <span class="o">=</span> <span class="n">ResolveInfo</span><span class="o">{</span><span class="mi">410</span><span class="n">e4868</span> <span class="n">com</span><span class="o">.</span><span class="na">android</span><span class="o">.</span><span class="na">internal</span><span class="o">.</span><span class="na">app</span><span class="o">.</span><span class="na">ResolverActivity</span> <span class="n">p</span><span class="o">=</span><span class="mi">0</span> <span class="n">o</span><span class="o">=</span><span class="mi">0</span> <span class="n">m</span><span class="o">=</span><span class="mh">0x0</span><span class="o">};</span><span class="n">pkgName</span> <span class="o">=</span> <span class="n">android</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果没有默认的程序,那么就会显示出默认的就会显示com.android.internal.app.ResolverActivity,那么这个ResolverActivity是什么呢,其实它就是一个选择打开程序的对话框,其庐山真面目应该是这样
<img src="http://droidyueimg.qiniudn.com/resolveactivity.png" title="Android ResolverActivity" ></p>

<p>如果我们设置了傲游浏览器作为我们的默认浏览器,那么默认的程序就应该显示关于傲游浏览器相关的信息. 如下.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">I</span><span class="o">/</span><span class="n">View</span>    <span class="o">(</span> <span class="mi">1145</span> <span class="o">):</span> <span class="n">View</span> <span class="n">getDefaultActivity</span> <span class="n">info</span> <span class="o">=</span> <span class="n">ResolveInfo</span><span class="o">{</span><span class="mi">410</span><span class="n">ae1e8</span> <span class="n">com</span><span class="o">.</span><span class="na">mx</span><span class="o">.</span><span class="na">browser</span><span class="o">.</span><span class="na">MxBrowserActivity</span> <span class="n">p</span><span class="o">=</span><span class="mi">0</span> <span class="n">o</span><span class="o">=</span><span class="mi">0</span> <span class="n">m</span><span class="o">=</span><span class="mh">0x208000</span><span class="o">};</span><span class="n">pkgName</span> <span class="o">=</span> <span class="n">com</span><span class="o">.</span><span class="na">mx</span><span class="o">.</span><span class="na">browser</span>
</span></code></pre></td></tr></table></div></figure>


<p>那么如何判断是否设置了默认的程序呢,上面的方法默认的ResolveInfo,如果info.activityInfo.packageName为android,则没有设置,否则,有默认的程序.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">final</span> <span class="kt">boolean</span> <span class="nf">hasPreferredApplication</span><span class="o">(</span><span class="kd">final</span> <span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="kd">final</span> <span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">PackageManager</span> <span class="n">pm</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">();</span>
</span><span class='line'>    <span class="n">ResolveInfo</span> <span class="n">info</span> <span class="o">=</span> <span class="n">pm</span><span class="o">.</span><span class="na">resolveActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">PackageManager</span><span class="o">.</span><span class="na">MATCH_DEFAULT_ONLY</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">!</span><span class="s">&quot;android&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">info</span><span class="o">.</span><span class="na">activityInfo</span><span class="o">.</span><span class="na">packageName</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>如果有默认程序</h2>

<p>我们需要做的是将现在的默认的程序的默认设置清除.</p>

<p>我们能通过代码直接将默认设置改写成我们的么,实际上是不行的,因为权限的问题. 原因是这样的Android因为基于Linux 内核,Linux有着很棒的用户概念,而Android中每个应用就是一个在Linux内核中的用户.两个级别相同的用户无法删除对方.</p>

<p>所以,我们只能交给用户手动做.当然这也是绝大多数程序的做法.你需要做的就是将使用者带到程序详情页,通过这段代码可以跳转到应用详情页.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">testStartAppDetails</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//Use the destination package name</span>
</span><span class='line'>    <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">provider</span><span class="o">.</span><span class="na">Settings</span><span class="o">.</span><span class="na">ACTION_APPLICATION_DETAILS_SETTINGS</span><span class="o">,</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">&quot;package:com.mx.browser&quot;</span><span class="o">));</span>
</span><span class='line'>    <span class="n">getActivity</span><span class="o">().</span><span class="na">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>当跳转到已安装的应用详情页之后,你应该提示用处点击Clear Default 按钮.
<img src="http://droidyueimg.qiniudn.com/choose_default_activity_dialog.png" title="installed app details clear default" ></p>

<p>如果用户从安装详情页回到你的程序,你需要检测是不是用户清理了默认的程序设置,判断依据还是是否有默认的程序设置,如果还有默认的,继续提示需要手动清理其他已设置的程序,直到用户彻底清理完成之后,然后按照下面的没有默认设置程序的情况处理.</p>

<p>注意,存在多次清理的情况,如设置浏览器,先清理了UC默认设置后,可能还需要清理海豚浏览器的情况.</p>

<h2>没有默认的程序.</h2>

<p>如果没有默认的程序,我们就需要设置我们希望的程序作为默认,但是,这页不能在代码中实现,还是需要人为的交互选择才可以.你需要做的就是使用类似如下代码,然后弹出一个提示,告诉用户选择你的程序作为默认的程序.至于提示语你可以充分发挥你的想象力.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">testStartChooseDialog</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">();</span>
</span><span class='line'>    <span class="n">intent</span><span class="o">.</span><span class="na">setAction</span><span class="o">(</span><span class="s">&quot;android.intent.action.VIEW&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">intent</span><span class="o">.</span><span class="na">addCategory</span><span class="o">(</span><span class="s">&quot;android.intent.category.BROWSABLE&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">intent</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">&quot;http://droidyue.com&quot;</span><span class="o">));</span>
</span><span class='line'>    <span class="n">intent</span><span class="o">.</span><span class="na">setComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">ComponentName</span><span class="o">(</span><span class="s">&quot;android&quot;</span><span class="o">,</span><span class="s">&quot;com.android.internal.app.ResolverActivity&quot;</span><span class="o">));</span>
</span><span class='line'>    <span class="n">getActivity</span><span class="o">().</span><span class="na">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>取消自己的默认程序设置</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">testClearDefault</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">PackageManager</span> <span class="n">pm</span> <span class="o">=</span> <span class="n">mContext</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">();</span>
</span><span class='line'>    <span class="n">pm</span><span class="o">.</span><span class="na">clearPackagePreferredActivities</span><span class="o">(</span><span class="n">mContext</span><span class="o">.</span><span class="na">getPackageName</span><span class="o">());</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上述方法只能清理自己的默认设置.</p>

<h2>更近一步</h2>

<p>实际上关于默认设置的配置文件存放在/data/system/packages.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;preferred-activities&gt;</span>
</span><span class='line'><span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;com.mx.browser/.MxBrowserActivity&quot;</span> <span class="na">match=</span><span class="s">&quot;200000&quot;</span> <span class="na">set=</span><span class="s">&quot;2&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;set</span> <span class="na">name=</span><span class="s">&quot;com.android.browser/.BrowserActivity&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;set</span> <span class="na">name=</span><span class="s">&quot;com.mx.browser/.MxBrowserActivity&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;filter&gt;</span>
</span><span class='line'><span class="nt">&lt;action</span> <span class="na">name=</span><span class="s">&quot;android.intent.action.VIEW&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;cat</span> <span class="na">name=</span><span class="s">&quot;android.intent.category.BROWSABLE&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;cat</span> <span class="na">name=</span><span class="s">&quot;android.intent.category.DEFAULT&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;scheme</span> <span class="na">name=</span><span class="s">&quot;http&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/filter&gt;</span>
</span><span class='line'><span class="nt">&lt;/item&gt;</span>
</span><span class='line'><span class="nt">&lt;/preferred-activities&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>One More Thing</h2>

<ul>
<li>提问:当一个程序程序安装或卸载,系统会做什么</li>
<li><p>回答:当一个程序安装或者卸载,以浏览器为例子,如果你安装了一个傲游浏览器或者卸载了一个UC浏览器,当你从外部程序打开一个链接时,系统不会使用之前的默认程序打开,而是弹出一个选择对话框供你选择.</p></li>
<li><p>提问:什么时候系统会弹出选择打开程序列表</p></li>
<li>回答:经本人测试,实际是这样的,当有一个Intent过来的时候,系统会动态地收集能处理的Activity,然后从/data/system/packages.xml 读取进行比较,如果两者不同,则弹出选择对话框.</li>
</ul>


<h3>Others</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B009OLU8EE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B009OLU8EE&linkCode=as2&tag=droidyue-23">Android系统源代码情景分析</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B009OLU8EE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[技术小黑屋]]></title>
  <link href="http://droidyue.com/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2014-06-24T21:15:27+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac更改默认网络连接]]></title>
    <link href="http://droidyue.com/blog/2014/06/24/set-default-network-connection-on-mac/"/>
    <updated>2014-06-24T21:06:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/24/set-default-network-connection-on-mac</id>
    <content type="html"><![CDATA[<p>使用了新的VPN,可以连接通过,但是访问Google还是不很慢,简直就是不生效.后来,运维同事帮忙解决了一下,解决方法就是将vpn设置默认的网络连接.</p>

<!--more-->


<p>查看网络连接.直接的结果应该类似这样.
<img src="http://droidyueimg.qiniudn.com/connection_previous.png">
需要修改成这样的效果
<img src="http://droidyueimg.qiniudn.com/connection_after.png"></p>

<h3>How to do</h3>

<h4>打开网络连接,按如下选择.</h4>

<p><img src="http://droidyueimg.qiniudn.com/set_service_order.png"></p>

<h4>拖拽你想要设置为默认的网络连接到顶部</h4>

<p><img src="http://droidyueimg.qiniudn.com/drag_dest.png" title="" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[处理Python未捕获异常]]></title>
    <link href="http://droidyue.com/blog/2014/06/23/python-handle-uncaught-exceptions/"/>
    <updated>2014-06-23T21:01:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/23/python-handle-uncaught-exceptions</id>
    <content type="html"><![CDATA[<h3>Talk Is Cheap</h3>

<p>和Java一样,python也提供了对于checked exception和unchecked exception. 对于checked exception,我们通常使用<strong>try except</strong>可以显示解决,对于unchecked 异常,其实也是提供回调或者是钩子来帮助我们处理的,我们可以在钩子里面记录崩溃栈追踪或者发送崩溃数据. <br/>
下面代码可以实现python unchecked exception回调,并输出日志信息.</p>

<!--more-->


<h3>Show Me The Code</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c"># coding=utf-8</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">logging</span>
</span><span class='line'><span class="n">logger</span> <span class="o">=</span> <span class="n">logging</span><span class="o">.</span><span class="n">getLogger</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'><span class="n">handler</span> <span class="o">=</span> <span class="n">logging</span><span class="o">.</span><span class="n">StreamHandler</span><span class="p">(</span><span class="n">stream</span><span class="o">=</span><span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="p">)</span>
</span><span class='line'><span class="n">logger</span><span class="o">.</span><span class="n">addHandler</span><span class="p">(</span><span class="n">handler</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">handle_exception</span><span class="p">(</span><span class="n">exc_type</span><span class="p">,</span> <span class="n">exc_value</span><span class="p">,</span> <span class="n">exc_traceback</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">issubclass</span><span class="p">(</span><span class="n">exc_type</span><span class="p">,</span> <span class="ne">KeyboardInterrupt</span><span class="p">):</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">__excepthook__</span><span class="p">(</span><span class="n">exc_type</span><span class="p">,</span> <span class="n">exc_value</span><span class="p">,</span> <span class="n">exc_traceback</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s">&quot;Uncaught exception&quot;</span><span class="p">,</span> <span class="n">exc_info</span><span class="o">=</span><span class="p">(</span><span class="n">exc_type</span><span class="p">,</span> <span class="n">exc_value</span><span class="p">,</span> <span class="n">exc_traceback</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">sys</span><span class="o">.</span><span class="n">excepthook</span> <span class="o">=</span> <span class="n">handle_exception</span>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="s">&quot;Test unhandled Exception&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>相关解释</h3>

<ul>
<li>上述忽略处理终端下键盘按Ctrl + C 终止异常.</li>
<li>上述使用python的日志管理模块输出格式化的异常信息.</li>
</ul>


<h3>参考文章</h3>

<p><a href="http://stackoverflow.com/questions/6234405/logging-uncaught-exceptions-in-python/16993115#16993115">http://stackoverflow.com/questions/6234405/logging-uncaught-exceptions-in-python/16993115#16993115</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress填坑日记]]></title>
    <link href="http://droidyue.com/blog/2014/06/22/fix-octopress-issues/"/>
    <updated>2014-06-22T10:44:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/22/fix-octopress-issues</id>
    <content type="html"><![CDATA[<p>今日开始开始填Octpress在天朝的坑。</p>

<!--more-->


<h3>文件404问题</h3>

<p><img src="http://droidyueimg.qiniudn.com/octopress_404_img.png">
修改代码简直是太辛苦了。毕竟涉及文件比较多。
于是干脆简单粗暴的把这些文件不存在的文件都创建了吧。直接上代码了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd source</span>/
</span><span class='line'>mkdir github
</span><span class='line'>mkdir github/images
</span><span class='line'>cp images/noise.png github/images/
</span><span class='line'>cp images/line-tile.png github/images/
</span><span class='line'>cp images/rss.png github/images/
</span><span class='line'>cp images/code_bg.png github/images/
</span></code></pre></td></tr></table></div></figure>


<h3>绑定域名更完美</h3>

<p>按照<a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages">https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages</a>说明的绑定域名可以，但是不够完美。 <br/>
举一个例子，我之前的域名为<strong>androidyue.github.io</strong>，新的域名为<strong>droidyue.com</strong>，按照上述操作，可以完成绑定。但是在网站地图文件<strong>sitemap.xml</strong>中还是原来的<strong>androidyue.github.io</strong>。 <br/>
如何解决呢，其实将<a href="http://androidyue.github.io">http://androidyue.github.io</a> 换成 <a href="http://droidyue.com">http://droidyue.com</a> 即可。修改<strong>_config.yml</strong>文件。以下为修改前后diff。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>diff --git a/_config.yml b/_config.yml
</span><span class='line'>-url: http://androidyue.github.io
</span><span class='line'>+url: http://droidyue.com
</span><span class='line'> title: 技术小黑屋
</span><span class='line'> subtitle: Better Than Before
</span><span class='line'> author: androidyue
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决Octopress博客访问慢的问题]]></title>
    <link href="http://droidyue.com/blog/2014/06/22/fix-octopress-slow-loading-speed-issue-in-china-mainland/"/>
    <updated>2014-06-22T10:00:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/22/fix-octopress-slow-loading-speed-issue-in-china-mainland</id>
    <content type="html"><![CDATA[<p>解决Octopress博客访问慢的问题</p>

<h2>本博情况</h2>

<ul>
<li>前身为<a href="http://androidyue.github.io">http://androidyue.github.io</a></li>
<li>新域名<a href="http://droidyue.com">droidyue.com</a>从<a href="http://www.godaddy.com/?ci=90231">Godaddy</a>购买。</li>
<li>DNS由<a href="https://www.dnspod.cn/">DNSPod</a>解析。</li>
<li>内容存放在<a href="https://pages.github.com/">Github Pages</a>。</li>
<li>博客系统为<a href="http://octopress.org/">Octopress</a></li>
</ul>


<!--more-->


<h2>必不可少的罗嗦</h2>

<p>买了这个域名已经一周了，已经决定博客的面向群体为汉语用户。但是发现国内访问还是超级慢，慢的让人无法接收了，当然具体原因，大家都懂得。没办法，尝试使用过安全宝，速度并没有明显替身，反而搜索引擎收录加少了，遂弃用。于是只好自己修改Octopress程序了。修改之前的访问速度以分钟计数。修改完成之后，秒开了有木有。</p>

<h2>清理没用的服务</h2>

<p>以下修改均修改<code>_config.yml</code>,以下可以根据自己的需要进行去除。</p>

<h3>去除Disqus评论</h3>

<p><img src="http://droidyueimg.qiniudn.com/disques_comments.png">
去除上面红色区域的部分,打开文件找到<code>Disqus Comments</code>，按照下面在每一行前面加<strong>#</strong>注释掉即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">#</span> <span class="n">Disqus</span> <span class="n">Comments</span>
</span><span class='line'><span class="err">#</span><span class="nl">disqus_short_name:</span> <span class="n">androidyue</span>
</span><span class='line'><span class="err">#</span><span class="nl">disqus_show_comment_count:</span> <span class="kc">true</span>
</span></code></pre></td></tr></table></div></figure>


<h3>去掉Github仓库展示</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">#</span> <span class="n">Github</span> <span class="n">repositories</span>
</span><span class='line'><span class="err">#</span><span class="nl">github_user:</span> <span class="n">androidyue</span>
</span><span class='line'><span class="err">#</span><span class="nl">github_repo_count:</span> <span class="mi">11</span>
</span><span class='line'><span class="err">#</span><span class="nl">github_show_profile_link:</span> <span class="kc">true</span>
</span><span class='line'><span class="err">#</span><span class="nl">github_skip_forks:</span> <span class="kc">true</span>
</span></code></pre></td></tr></table></div></figure>


<h3>去除Twitter按钮</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">#</span> <span class="n">Twitter</span>
</span><span class='line'><span class="err">#</span><span class="nl">twitter_user:</span>
</span><span class='line'><span class="err">#</span><span class="nl">twitter_tweet_button:</span> <span class="kc">true</span>
</span></code></pre></td></tr></table></div></figure>


<h3>去除Google+相关</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">#</span> <span class="n">Google</span> <span class="o">+</span><span class="mi">1</span>
</span><span class='line'><span class="err">#</span><span class="nl">google_plus_one:</span> <span class="kc">true</span>
</span><span class='line'><span class="err">#</span><span class="nl">google_plus_one_size:</span> <span class="n">medium</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="n">Google</span> <span class="n">Plus</span> <span class="n">Profile</span>
</span><span class='line'><span class="err">#</span> <span class="nl">Hidden:</span> <span class="n">No</span> <span class="n">visible</span> <span class="n">button</span><span class="o">,</span> <span class="n">just</span> <span class="n">add</span> <span class="n">author</span> <span class="n">information</span> <span class="n">to</span> <span class="n">search</span> <span class="n">results</span>
</span><span class='line'><span class="err">#</span><span class="nl">googleplus_user:</span> <span class="mi">105362551238192049560</span>
</span><span class='line'><span class="err">#</span><span class="nl">googleplus_hidden:</span> <span class="kc">false</span>
</span></code></pre></td></tr></table></div></figure>


<h3>去除Pinboard服务</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">#</span> <span class="n">Pinboard</span>
</span><span class='line'><span class="err">#</span><span class="nl">pinboard_user:</span>
</span><span class='line'><span class="err">#</span><span class="nl">pinboard_count:</span> <span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>


<h3>去除Delicious评论,去除后可能没有评论系统</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">#</span> <span class="n">Delicious</span>
</span><span class='line'><span class="err">#</span><span class="nl">delicious_user:</span>
</span><span class='line'><span class="err">#</span><span class="nl">delicious_count:</span> <span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>


<h3>去除Facebook Like</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">#</span> <span class="n">Facebook</span> <span class="n">Like</span>
</span><span class='line'><span class="err">#</span><span class="nl">facebook_like:</span> <span class="kc">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>替换快速的请求资源</h2>

<p>其实，真正解决加速的重要环节可能是这里，因为Octopress很多依赖于Google的库和资源。</p>

<h3>解决Google Analytics巨慢的问题</h3>

<p>对于使用Google Analytics来说，加在ga.js这个文件简直是要命的慢，这里我使用自己存放在<a href="https://portal.qiniu.com/signup?code=3l8cqx1u74rbm">七牛CDN</a>上的js.<a href="http://droidyue-tools.qiniudn.com/ga.js">http://droidyue-tools.qiniudn.com/ga.js</a> 已验证，完全可以正常收集数据。<br/>
参考如下，修改<code>source/_includes/google_analytics.html</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'> _gaq.push([&#39;_trackPageview&#39;]);
</span><span class='line'>
</span><span class='line'> (function() {
</span><span class='line'> var ga = document.createElement(&#39;script&#39;); ga.type = &#39;text/javascript&#39;; ga.async = true;
</span><span class='line'> ga.src=&#39;http://droidyue-tools.qiniudn.com/ga.js&#39;;
</span><span class='line'> var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(ga, s);
</span><span class='line'> })();
</span><span class='line'>   <span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>解决fonts.googleapis.com蜗牛慢</h3>

<p>这里我们使用数字公司提供的Google Fonts大陆解决方案，使用<code>fonts.useso.com</code>替换<code>fonts.googleapis.com</code>。<br/>
修改文件<code>/source/_includes/custom/head.html</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'> <span class="c">&lt;!--Fonts from Google&quot;s Web font directory at http://google.com/webfonts --&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://fonts.useso.com/css?family=PT+Serif:regular,italic,bold,bolditalic&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://fonts.useso.com/css?family=PT+Sans:regular,italic,bold,bolditalic&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>解决ajax.googleapis.com慢的问题</h3>

<p>修改<code>source/_includes/head.html</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>   <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;/stylesheets/screen.css&quot;</span> <span class="na">media=</span><span class="s">&quot;screen, projection&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>   <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;/atom.xml&quot;</span> <span class="na">rel=</span><span class="s">&quot;alternate&quot;</span> <span class="na">title=</span><span class="s">&quot;技术小黑屋&quot;</span> <span class="na">type=</span><span class="s">&quot;application/atom+xml&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>   <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/javascripts/modernizr-2.0.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>   <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//ajax.useso.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>   <span class="nt">&lt;script&gt;</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span> <span class="o">&amp;&amp;</span> <span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">unescape</span><span class="p">(</span><span class="s1">&#39;%3Cscript src=&quot;./javascripts/lib/jquery.min.js&quot;%3E%3C/script%3E&#39;</span><span class="p">))</span><span class="nt">&lt;/script&gt;</span>
</span><span class='line'>   <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/javascripts/octopress.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>In Conclusion</h2>

<p>导致网站慢的原因其实是加载Google的资源，当然我们不能怨Google.经过测试，使用数字公司的解决方法之后，国内国外访问速度都是可以的。这里还是推荐以下数字公司的这个解决方案<a href="http://libs.useso.com/">http://libs.useso.com/</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定义Octopress404页面]]></title>
    <link href="http://droidyue.com/blog/2014/06/20/custom-octopress-404-page/"/>
    <updated>2014-06-20T22:44:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/20/custom-octopress-404-page</id>
    <content type="html"><![CDATA[<p>刚刚在Octopress实现了自定义的404页面。参考别人的文章写的，很容易实现，谁知发现写完后，感觉自己掉进了一个坑，然后又爬了出来，所以，有必要自己写出来一个超级精简没有坑的帖子帮助别人。</p>

<!--more-->


<h2>最简一步到位</h2>

<ul>
<li>只需执行<strong>rake new_page[404.html]</strong> 然后编辑404.html即可。</li>
<li>执行完上述操作404.html页面会创建在source目录下。</li>
<li>说明：网站404页面必须要在最终的Githug Pages网站根目录。</li>
<li>关于404页面，很多人都喜欢设置成公益页面，这里推荐两个公益爱心404页面， <a href="http://www.qq.com/404/">腾讯公司404</a>， <a href="http://yibo.iyiyun.com/Index/web404">益云公益404</a>.</li>
</ul>


<p>我的404.html示例,其中关闭了comments，sharing，去掉了footer。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>---
</span><span class='line'>layout: page
</span><span class='line'>title: &quot;404&quot;
</span><span class='line'>date: 2014-06-20 22:06
</span><span class='line'>comments: false
</span><span class='line'>sharing: false
</span><span class='line'>footer: false
</span><span class='line'>---
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;http://www.qq.com/404/search_children.js&quot;</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;实现和完美的分割线&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</strong></p>

<h2>高级处理</h2>

<p>追求完美的人，请继续读下去。</p>

<h3>禁止搜索引擎索引</h3>

<ul>
<li>修改<strong>source/robots.txt</strong> 如文件不存在请创建。</li>
</ul>


<p>我的robots.txt示例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>---
</span><span class='line'>layout: nil
</span><span class='line'>---
</span><span class='line'>User-agent: *
</span><span class='line'>Disallow: /404.html
</span><span class='line'>
</span><span class='line'>Sitemap: http://droidyue.com/sitemap.xml
</span></code></pre></td></tr></table></div></figure>


<h3>禁止404页面加入sitemap</h3>

<ul>
<li>修改<strong>plugins/sitemap_generator.rb</strong></li>
<li>在 EXCLUDED_FILES  中加入404.html</li>
</ul>


<p>sitemap_generator.rb部分示例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">SITEMAP_FILE_NAME</span> <span class="o">=</span> <span class="s2">&quot;sitemap.xml&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Any files to exclude from being included in the sitemap.xml</span>
</span><span class='line'><span class="no">EXCLUDED_FILES</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;atom.xml&quot;</span><span class="p">,</span> <span class="s2">&quot;404.html&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Any files that include posts, so that when a new post is added, the last</span>
</span><span class='line'><span class="c1"># modified date of these pages should take that into account</span>
</span></code></pre></td></tr></table></div></figure>


<p>参考资料：<a href="https://help.github.com/articles/custom-404-pages">https://help.github.com/articles/custom-404-pages</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gmail垃圾邮件过滤器文件分享]]></title>
    <link href="http://droidyue.com/blog/2014/06/19/share-gmail-spam-fiter-file/"/>
    <updated>2014-06-19T21:35:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/19/share-gmail-spam-fiter-file</id>
    <content type="html"><![CDATA[<p>Gmail垃圾邮件过滤器文件。<br/>
A filter file for Gmail to auto-delete spams.<br/>
工作后，一直使用Gmail邮件托管工作邮箱，收到的反馈很多，其中垃圾邮件，SEO，推销等邮件亦很多。还好Gmail提供了强大了过滤功能。以下是自己整理的一些垃圾邮件过滤文件，现在分享以下，以后会不断更新。</p>

<!--more-->


<p>I have received so many emails. However many of them are spam emails. That&rsquo;s really annoying. But I decided to create a filter when I receive a spam one. Now I will share this file. I will keep the file updated in the future.</p>

<h2>Versions</h2>

<ul>
<li>2014-6-19 Updated. <a href="http://droidyue.qiniudn.com/mailFilters_2014_6_19.xml">http://droidyue.qiniudn.com/mailFilters_2014_6_19.xml</a></li>
</ul>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[快速高效调试移动端前端代码]]></title>
    <link href="http://droidyue.com/blog/2014/06/16/quickly-debug-javascript-works/"/>
    <updated>2014-06-16T20:28:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/16/quickly-debug-javascript-works</id>
    <content type="html"><![CDATA[<p>通常,前端调试输出一些日志信息可以使用alert或者console, 当然在Desktop机器上很容易,很多浏览器都支持,如果是在手机上,可能比较麻烦,怎么得到输出的console信息呢.</p>

<!-- more -->


<p>其实,使用傲游浏览器Android版,完全可以轻松的做到.下面以一个简单的例子来介绍一下.如,我们使用一下的网页代码,输出console</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>    <span class="nt">&lt;head&gt;</span>
</span><span class='line'>        <span class="nt">&lt;SCRIPT </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;This is log level&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="nt">&lt;/SCRIPT&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在傲游浏览器andorid版上加载上述的网页,然后在终端过滤这个命令<code>adb logcat | grep MxWebViewDebug</code>就能得到以下输出.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>13:22 <span class="nv">$ </span>adb logcat | grep MxWebViewDebug
</span><span class='line'>I/MxWebViewDebug<span class="o">(</span> 3614<span class="o">)</span>: <span class="o">[</span>LOG:CONSOLE<span class="o">(</span>844064902<span class="o">)]</span> <span class="s2">&quot;This is log level&quot;</span>, <span class="nb">source</span>:
</span></code></pre></td></tr></table></div></figure>


<p>上述日志格式,完全参考Chromium标准.</p>

<h3>Download</h3>

<ul>
<li>Play Store:<a href="https://play.google.com/store/apps/details?id=com.mx.browser">https://play.google.com/store/apps/details?id=com.mx.browser</a></li>
<li>中文官网下载:<a href="http://www.maxthon.cn/">http://www.maxthon.cn/</a></li>
</ul>


<h3>One More Thing</h3>

<ul>
<li>Q:为什么要写这个类似软文的东西呢?</li>
<li>A:首先这个功能是我做的,自己在一次写javascript时,发现不爽,然后就顺手加上了这个超级简单地小功能.感觉至少解决了包括我在内的至少一个人的痛处,不想让这个功能不为人知,于是写了这篇文章.</li>
</ul>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[程序实现自己管理数据清理工作]]></title>
    <link href="http://droidyue.com/blog/2014/06/15/manage-space-by-replacing-system-clear-button/"/>
    <updated>2014-06-15T18:03:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/15/manage-space-by-replacing-system-clear-button</id>
    <content type="html"><![CDATA[<p>How to disable system clear button and replace it with self application Manage Space?</p>

<p>Android在处理清楚数据时，会在系统的设置选项应用中，有一个清除数据的按钮，点下这个按钮之后，该应用的几乎所有数据都会被清除。具体清除了哪些数据，请参考这篇文章。<a href="http://droidyue.com/blog/2014/06/15/what-will-be-removed-if-you-click-clear-data-button-in-system-application-item/">http://droidyue.com/blog/2014/06/15/what-will-be-removed-if-you-click-clear-data-button-in-system-application-item/</a></p>

<!-- more -->


<p>但是有些情况下，我们不希望将应用的数据全部清除，或者是我们来接管系统的清理操作，其实是可以。并且实现也很简单.</p>

<blockquote><p>android:manageSpaceActivity
The fully qualified name of an Activity subclass that the system can launch to let users manage the memory occupied by the application on the device. The activity should also be declared with an <activity> element.</p></blockquote>

<p>开发者文档如是说，自己实现一个Activity的字类，在manifest中声明这个activity,然后将Application的android:manageSpaceActivity的值设置为这个activity即可。如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;application</span>
</span><span class='line'>        <span class="na">android:allowBackup=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>        <span class="na">android:icon=</span><span class="s">&quot;@drawable/ic_launcher&quot;</span>
</span><span class='line'>        <span class="na">android:label=</span><span class="s">&quot;@string/app_name&quot;</span>
</span><span class='line'>        <span class="na">android:theme=</span><span class="s">&quot;@style/AppTheme&quot;</span>
</span><span class='line'>        <span class="na">android:manageSpaceActivity=</span><span class="s">&quot;ps.androidyue.demo.mangagespace.ManageSpaceActivity&quot;</span>
</span><span class='line'>        <span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;activity</span>
</span><span class='line'>            <span class="na">android:name=</span><span class="s">&quot;ps.androidyue.demo.mangagespace.MainActivity&quot;</span>
</span><span class='line'>            <span class="na">android:label=</span><span class="s">&quot;@string/app_name&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;intent-filter&gt;</span>
</span><span class='line'>                <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&quot;android.intent.action.MAIN&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">&quot;android.intent.category.LAUNCHER&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/intent-filter&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/activity&gt;</span>
</span><span class='line'>        <span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">&quot;ps.androidyue.demo.mangagespace.ManageSpaceActivity&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;/activity&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/application&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后是ManageSpaceActivity 就是点击空间管理进入的Activity，用来处理清除数据的自定义功能，常见的逻辑是，清除完数据后自动退出。以下为超简单的实现。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Button</span> <span class="n">btnClearData</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Button</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnClearData</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;Clear Data&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnClearData</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">PreferenceManager</span><span class="o">.</span><span class="na">getDefaultSharedPreferences</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">())</span>
</span><span class='line'>                  <span class="o">.</span><span class="na">edit</span><span class="o">().</span><span class="na">clear</span><span class="o">().</span><span class="na">commit</span><span class="o">();</span>
</span><span class='line'>              <span class="n">finish</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">btnClearData</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>当然为了更好的实现，我们在LauncherActivity即MainActivity，创造一些测试数据。否则，系统应用中的管理空间不可用！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">createTestData</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">PreferenceManager</span><span class="o">.</span><span class="na">getDefaultSharedPreferences</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">())</span>
</span><span class='line'>      <span class="o">.</span><span class="na">edit</span><span class="o">().</span><span class="na">putString</span><span class="o">(</span><span class="s">&quot;test&quot;</span><span class="o">,</span> <span class="s">&quot;test_data&quot;</span><span class="o">).</span><span class="na">commit</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>demo程序下载：<a href="http://pan.baidu.com/s/1ntJnttZ">http://pan.baidu.com/s/1ntJnttZ</a></p>

<p>延伸阅读：<a href="http://developer.android.com/guide/topics/manifest/application-element.html#space">http://developer.android.com/guide/topics/manifest/application-element.html#space</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android中系统设置中的清除数据究竟会清除哪些数据]]></title>
    <link href="http://droidyue.com/blog/2014/06/15/what-will-be-removed-if-you-click-clear-data-button-in-system-application-item/"/>
    <updated>2014-06-15T17:07:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/15/what-will-be-removed-if-you-click-clear-data-button-in-system-application-item</id>
    <content type="html"><![CDATA[<p>What will be removed If you click Clear Data Button in the System Application</p>

<p>今天中的一个story突然提到了系统设置中的清理数据，后来开始思考究竟系统的应用的这个清理功能，究竟会清理那些数据。
于是开始研究，以com.mx.browser为例，思路大概为首先为/data/data/com.mx.browser下的每一个文件夹下建立一个标志文件，这里为1.txt，然后执行清理数据操作，最后对比结果。
首先，进行清楚数据之前的的各个文件夹的情况。</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/data/data/com.mx.browser <span class="c"># ls</span>
</span><span class='line'>lib
</span><span class='line'>files
</span><span class='line'>databases
</span><span class='line'>shared_prefs
</span><span class='line'>app_thumbnails
</span><span class='line'>cache
</span><span class='line'>app_webIcons
</span><span class='line'>app_appcache
</span><span class='line'>app_databases
</span><span class='line'>app_geolocation
</span></code></pre></td></tr></table></div></figure>


<p>为每个文件夹下创建一个标志（同时验证是否删除文件夹的情况）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/data/data/com.mx.browser <span class="c"># touch lib/1.txt</span>
</span><span class='line'>/data/data/com.mx.browser <span class="c"># touch files/1.txt</span>
</span><span class='line'>/data/data/com.mx.browser <span class="c"># touch databases/1.txt</span>
</span><span class='line'>/data/data/com.mx.browser <span class="c"># touch shared_prefs/1.txt</span>
</span><span class='line'>/data/data/com.mx.browser <span class="c"># touch app_thumbnails/1.txt</span>
</span><span class='line'>/data/data/com.mx.browser <span class="c"># touch cache/1.txt</span>
</span><span class='line'>/data/data/com.mx.browser <span class="c"># touch app_webIcons/1.txt</span>
</span><span class='line'>/data/data/com.mx.browser <span class="c"># touch app_appcache/1.txt</span>
</span><span class='line'>/data/data/com.mx.browser <span class="c"># touch app_databases/1.txt</span>
</span><span class='line'>/data/data/com.mx.browser <span class="c"># touch app_geolocation/1.txt</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行清理数据操作。
查看执行清理数据操作后的结果。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/data/data/com.mx.browser <span class="c"># ls</span>
</span><span class='line'>lib
</span><span class='line'>/data/data/com.mx.browser <span class="c">#</span>
</span></code></pre></td></tr></table></div></figure>


<p>查看lib情况</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/data/data/com.mx.browser <span class="c"># cd lib/</span>
</span><span class='line'>/data/data/com.mx.browser/lib <span class="c"># ls</span>
</span><span class='line'>1.txt
</span><span class='line'>/data/data/com.mx.browser/lib <span class="c">#</span>
</span></code></pre></td></tr></table></div></figure>


<p>总上所述，发现系统中的设置，应用中的清理数据，会清理掉除去lib文件夹（含内部文件）的文件及文件夹。
p.s./sdcard/Android/data/这个目录也是和包名相关的，但是系统中的清理数据不会清理掉这个目录中的相关信息。</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[检查Android是否具有摄像头]]></title>
    <link href="http://droidyue.com/blog/2014/06/14/check-camera-in-android/"/>
    <updated>2014-06-14T15:57:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/14/check-camera-in-android</id>
    <content type="html"><![CDATA[<p>通常我们进行摄像头操作，如扫描二维码需要判断是否有后置摄像头(Rear camera)，比如Nexus 7 一代就没有后置摄像头，这样在尝试使用的时候，我们需要进行判断进行一些提示或者处理。</p>

<!-- more -->


<p>以下代码为一系列的方法，用来判断是否有前置摄像头（Front Camera），后置摄像头。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">checkCameraFacing</span><span class="o">(</span><span class="kd">final</span> <span class="kt">int</span> <span class="n">facing</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">getSdkVersion</span><span class="o">()</span> <span class="o">&lt;</span> <span class="n">Build</span><span class="o">.</span><span class="na">VERSION_CODES</span><span class="o">.</span><span class="na">GINGERBREAD</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">int</span> <span class="n">cameraCount</span> <span class="o">=</span> <span class="n">Camera</span><span class="o">.</span><span class="na">getNumberOfCameras</span><span class="o">();</span>
</span><span class='line'>    <span class="n">CameraInfo</span> <span class="n">info</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CameraInfo</span><span class="o">();</span>
</span><span class='line'>    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">cameraCount</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Camera</span><span class="o">.</span><span class="na">getCameraInfo</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">info</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">facing</span> <span class="o">==</span> <span class="n">info</span><span class="o">.</span><span class="na">facing</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">hasBackFacingCamera</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">int</span> <span class="n">CAMERA_FACING_BACK</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">checkCameraFacing</span><span class="o">(</span><span class="n">CAMERA_FACING_BACK</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">hasFrontFacingCamera</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">int</span> <span class="n">CAMERA_FACING_BACK</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">checkCameraFacing</span><span class="o">(</span><span class="n">CAMERA_FACING_BACK</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getSdkVersion</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Build</span><span class="o">.</span><span class="na">VERSION</span><span class="o">.</span><span class="na">SDK_INT</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意：由于getNumberOfCameras以及getCameraInfo均为API 9 引入，所以方法只适用于2.3及其以上。</p>

<p>延伸阅读：<a href="http://developer.android.com/reference/android/hardware/Camera.html">http://developer.android.com/reference/android/hardware/Camera.html</a>
<a href="http://developer.android.com/reference/android/hardware/Camera.CameraInfo.html">http://developer.android.com/reference/android/hardware/Camera.CameraInfo.html</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[去除mysql连接时的报警音]]></title>
    <link href="http://droidyue.com/blog/2014/06/05/qu-chu-mysqllian-jie-shi-de-bao-jing-yin/"/>
    <updated>2014-06-05T21:34:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/05/qu-chu-mysqllian-jie-shi-de-bao-jing-yin</id>
    <content type="html"><![CDATA[<p>在使用命令行进入mysql时如果没有进行设置会有报警音很是吓人,使用这个命令可以去掉吓人的声音。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql -h localhost -u root -b -p
</span></code></pre></td></tr></table></div></figure>


<p>起作用的就是-p。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Load URL With Extra HTTP Headers Using WebView In Android]]></title>
    <link href="http://droidyue.com/blog/2014/05/27/load-url-with-extra-http-headers-using-webview-in-android/"/>
    <updated>2014-05-27T21:44:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/05/27/load-url-with-extra-http-headers-using-webview-in-android</id>
    <content type="html"><![CDATA[<p>As we know, Webview will add the referer into the reqeust if we click a hyperlink to navigate to another one. But if we want to add a referer when a hard loading starts, What can we do to make it?</p>

<!-- more -->


<p>Since Froyo(API Level 8), the webview starts providing an interface for us to send extra HTTP headers when loading a URL.</p>

<blockquote><p>public void loadUrl (String url, Map&lt;String, String> additionalHttpHeaders)<br/>
Added in API level 8<br/>
Loads the given URL with the specified additional HTTP headers.<br/>
Parameters<br/>
url the URL of the resource to load<br/>
additionalHttpHeaders   the additional headers to be used in the HTTP request for this URL, specified as a map from name to value. Note that if this map contains any of the headers that are set by default by this WebView, such as those controlling caching, accept types or the User-Agent, their values may be overriden by this WebView&rsquo;s defaults.</p></blockquote>

<p>Now this is a working example.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">testLoadURLWithHTTPHeaders</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">String</span> <span class="n">url</span> <span class="o">=</span> <span class="s">&quot;http://androidyue.github.io/&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="n">WebView</span> <span class="n">webView</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WebView</span><span class="o">(</span><span class="n">getActivity</span><span class="o">());</span>
</span><span class='line'>    <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">extraHeaders</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>    <span class="n">extraHeaders</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;Referer&quot;</span><span class="o">,</span> <span class="s">&quot;http://www.google.com&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">webView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">url</span><span class="o">,</span> <span class="n">extraHeaders</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>For more details about HTTP Headers, please visit <a href="http://en.wikipedia.org/wiki/List_of_HTTP_header_fields">List_of_HTTP_header_fields</a>
More details about Webview, please visit <a href="http://developer.android.com/reference/android/webkit/WebView.html">http://developer.android.com/reference/android/webkit/WebView.html</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Check If A Thread Is Main Thread In Android]]></title>
    <link href="http://droidyue.com/blog/2014/05/21/check-if-a-thread-is-main-thread-in-android/"/>
    <updated>2014-05-21T21:42:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/05/21/check-if-a-thread-is-main-thread-in-android</id>
    <content type="html"><![CDATA[<p>How to check a certain thread is the main one or not in Android? You may say it could be determined by checking the name. Yes, It may resolve the problem. However I think it&rsquo;s not reliable.</p>

<!-- more -->


<p>This is the most reliable workaround.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">isInMainThread</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">Looper</span><span class="o">.</span><span class="na">myLooper</span><span class="o">()</span> <span class="o">==</span> <span class="n">Looper</span><span class="o">.</span><span class="na">getMainLooper</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Actually the above code could already resolve your problem. If you want to know more details, please go on reading this post.<br/>
Now Let&rsquo;s do some tests to check the reliability of this method.
This the method with additional debug log</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">isInMainThread</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Looper</span> <span class="n">myLooper</span> <span class="o">=</span> <span class="n">Looper</span><span class="o">.</span><span class="na">myLooper</span><span class="o">();</span>
</span><span class='line'>  <span class="n">Looper</span> <span class="n">mainLooper</span> <span class="o">=</span> <span class="n">Looper</span><span class="o">.</span><span class="na">getMainLooper</span><span class="o">();</span>
</span><span class='line'>  <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;isInMainThread myLooper=&quot;</span> <span class="o">+</span> <span class="n">myLooper</span>
</span><span class='line'>      <span class="o">+</span> <span class="s">&quot;;mainLooper=&quot;</span> <span class="o">+</span> <span class="n">mainLooper</span><span class="o">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">myLooper</span> <span class="o">==</span> <span class="n">mainLooper</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Now we run this test case. Of course we assume that the following code is running in the main thread.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;testInMainThread inMainThread=&quot;</span> <span class="o">+</span> <span class="n">isInMainThread</span><span class="o">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>Look at the output log. It works well.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I/TestInMainThread<span class="o">(</span>32028<span class="o">)</span>: isInMainThread <span class="nv">myLooper</span><span class="o">=</span>Looper<span class="o">{</span>40d35ef8<span class="o">}</span>;<span class="nv">mainLooper</span><span class="o">=</span>Looper<span class="o">{</span>40d35ef8<span class="o">}</span>
</span><span class='line'>I/TestInMainThread<span class="o">(</span>32028<span class="o">)</span>: testInMainThread <span class="nv">inMainThread</span><span class="o">=</span><span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we are going to check the method running in a non-main thread without a message loop.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="nf">Thread</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;testIn NOT in MainThread isMainThread=&quot;</span>
</span><span class='line'>          <span class="o">+</span> <span class="n">isInMainThread</span><span class="o">());</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">run</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}.</span><span class="na">start</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>As we can see from the below output. the main looper has been assigned. However the looper associated with the current thread is Null. That&rsquo;s because <code>Threads by default do not have a message loop associated with them. Of course, the method works</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I/TestInMainThread<span class="o">(</span>32028<span class="o">)</span>: isInMainThread <span class="nv">myLooper</span><span class="o">=</span>null;mainLooper<span class="o">=</span>Looper<span class="o">{</span>40d35ef8<span class="o">}</span>
</span><span class='line'>I/TestInMainThread<span class="o">(</span>32028<span class="o">)</span>: testIn NOT in MainThread <span class="nv">isMainThread</span><span class="o">=</span><span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then, Now we create a thread with a message loop. And let&rsquo;s have a check. According to Android Developer Docs, This is a typical example of the implementation of a Looper thread, using the separation of prepare() and loop() to create an initial Handler to communicate with the Looper.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="nf">Thread</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Handler</span> <span class="n">mHandler</span><span class="o">;</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Looper</span><span class="o">.</span><span class="na">prepare</span><span class="o">();</span>
</span><span class='line'>      <span class="n">mHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Handler</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// process incoming messages here</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">};</span>
</span><span class='line'>      <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;testInNonMainLooperThread isMainThread=&quot;</span>
</span><span class='line'>            <span class="o">+</span> <span class="n">isInMainThread</span><span class="o">());</span>
</span><span class='line'>      <span class="n">Looper</span><span class="o">.</span><span class="na">loop</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'><span class="o">}.</span><span class="na">start</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now both the looper bound to the current thread and the main looper has been assigned. However the are different. That&rsquo;s right; and the method still works.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I/TestInMainThread<span class="o">(</span>32028<span class="o">)</span>: isInMainThread <span class="nv">myLooper</span><span class="o">=</span>Looper<span class="o">{</span>40d72c58<span class="o">}</span>;<span class="nv">mainLooper</span><span class="o">=</span>Looper<span class="o">{</span>40d35ef8<span class="o">}</span>
</span><span class='line'>I/TestInMainThread<span class="o">(</span>32028<span class="o">)</span>: testInNonMainLooperThread <span class="nv">isMainThread</span><span class="o">=</span><span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>But why? And what &rsquo;s inside?
Let&rsquo;s see the code what&rsquo;s is inside the  Looper.class.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// sThreadLocal.get() will return null unless you&#39;ve called prepare().</span>
</span><span class='line'><span class="kd">static</span> <span class="kd">final</span> <span class="n">ThreadLocal</span><span class="o">&lt;</span><span class="n">Looper</span><span class="o">&gt;</span> <span class="n">sThreadLocal</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ThreadLocal</span><span class="o">&lt;</span><span class="n">Looper</span><span class="o">&gt;();</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="n">Looper</span> <span class="n">sMainLooper</span><span class="o">;</span>  <span class="c1">// guarded by Looper.class</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Initialize the current thread as a looper, marking it as an</span>
</span><span class='line'><span class="cm"> * application&#39;s main looper. The main looper for your application</span>
</span><span class='line'><span class="cm"> * is created by the Android environment, so you should never need</span>
</span><span class='line'><span class="cm"> * to call this function yourself.  See also: {@link #prepare()}</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">prepareMainLooper</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">prepare</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">synchronized</span> <span class="o">(</span><span class="n">Looper</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">sMainLooper</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalStateException</span><span class="o">(</span><span class="s">&quot;The main Looper has already been prepared.&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">sMainLooper</span> <span class="o">=</span> <span class="n">myLooper</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">prepare</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">quitAllowed</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">sThreadLocal</span><span class="o">.</span><span class="na">get</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;Only one Looper may be created per thread&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">sThreadLocal</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="k">new</span> <span class="n">Looper</span><span class="o">(</span><span class="n">quitAllowed</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Return the Looper object associated with the current thread.  </span>
</span><span class='line'><span class="cm"> * Returns null if the calling thread is not associated with a Looper.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">Looper</span> <span class="nf">myLooper</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sThreadLocal</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'> <span class="cm">/** Returns the application&#39;s main looper, which lives in the main thread of the application.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">Looper</span> <span class="nf">getMainLooper</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">synchronized</span> <span class="o">(</span><span class="n">Looper</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">sMainLooper</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>For the main thread, the prepareMainLooper method will be called by the Android Environment not by developers. In this way, the looper associated with the main thread is created and passed the reference to the sMainLooper; thus this could guarantee the two looper equals, actually the are the same one.</p>

<p>For non-main thread without a message loop, the looper bound to the current thread is null, because you never call the prepare by yourself. Of course the two looper are different.</p>

<p>For non-main thread with a message loop, Before calling the Lopper.prepare method, the main looper is already assigned. And by calling this method, a looper bound to the current thread is created. And Of course, it is not the main looper.</p>

<p>The above code makes sense.</p>

<p>References:</p>

<ul>
<li> <a href="http://developer.android.com/reference/android/os/Looper.html">http://developer.android.com/reference/android/os/Looper.html</a></li>
<li> <a href="http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.4.2_r1/android/os/Looper.java/">http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.4.2_r1/android/os/Looper.java/</a></li>
</ul>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quickly Find Content in Files]]></title>
    <link href="http://droidyue.com/blog/2014/05/15/quickly-find-content-in-files/"/>
    <updated>2014-05-15T20:34:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/05/15/quickly-find-content-in-files</id>
    <content type="html"><![CDATA[<p>Although Eclipse does provide a lot of facilities for Finding content is Workspace files, it maybe less efficient for find something such as a certain package or class usage. Actually we could do it more efficient and geeky.</p>

<!-- more -->


<p>Now we use the classic Unix command <strong>grep</strong>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#Grammar</span>
</span><span class='line'>grep -E <span class="s2">&quot;word_to_search&quot;</span> folder_to_search -R --color<span class="o">=</span>always -n
</span><span class='line'><span class="c">#Demo</span>
</span><span class='line'>grep -E <span class="s2">&quot;android.os.Looper&quot;</span> ./ -R --color<span class="o">=</span>always -n
</span><span class='line'>.//src/com/mining/app/zxing/decoding/DecodeHandler.java:23:import android.os.Looper;
</span><span class='line'>.//src/com/mining/app/zxing/decoding/DecodeThread.java:24:import android.os.Looper;
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s take a look at the command arguments explanation.</p>

<blockquote><p>-E, &mdash;extended-regexp
Interpret pattern as an extended regular expression (i.e. force grep to behave as egrep).</p>

<p>-R, -r, &mdash;recursive
Recursively search subdirectories listed.</p>

<p>&mdash;colour=[when, &mdash;color=[when]]
Mark up the matching text with the expression stored in GREP_COLOR environment variable.  The possible values of when can be <code>never</code>, <code>always</code> or <code>auto</code>.</p>

<p>-n, &mdash;line-number
Each output line is preceded by its relative line number in the file, starting at line 1.  The line number counter is reset for each file processed.</p></blockquote>

<p>Is this trick awesome? Save it as a bash script named <strong>quickfind.sh</strong>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>grep -E <span class="nv">$1</span> . -R --color<span class="o">=</span>always -n
</span></code></pre></td></tr></table></div></figure>


<p>Then let it executable and just run it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod a+x quickfind.sh
</span><span class='line'>quickfind.sh <span class="s2">&quot;android.os.Looper&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Summarize Folder Size In Terminal]]></title>
    <link href="http://droidyue.com/blog/2014/05/11/how-to-summarize-folder-size-in-terminal/"/>
    <updated>2014-05-11T11:49:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/05/11/how-to-summarize-folder-size-in-terminal</id>
    <content type="html"><![CDATA[<p>In this post, we will use the <strong>du</strong> command. This command does estimate file space usage; and It will summarize disk usage of each FILE, recursively for directories.</p>

<!-- more -->


<p>The description on the arguments we will use.</p>

<blockquote><p>-h, &mdash;human-readable
print sizes in human readable format (e.g., 1K 234M 2G)
-s, &mdash;summarize
display only a total for each argument</p></blockquote>

<h3>How to Summarize a single Folder Size</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#Summarize the current folder size.</span>
</span><span class='line'>11:33:57-androidyue~/googlecode<span class="nv">$ </span>du -sh
</span><span class='line'>85M   .
</span></code></pre></td></tr></table></div></figure>


<h3>Summarize a certain folder size.</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>11:34:03-androidyue~/googlecode<span class="nv">$ </span>du -sh apps-for-android/
</span><span class='line'>11M   apps-for-android/
</span></code></pre></td></tr></table></div></figure>


<h3>How to summarize multiple folders sizes</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>11:35:17-androidyue~/googlecode<span class="nv">$ </span>ls | xargs du -sh
</span><span class='line'>11M   apps-for-android
</span><span class='line'>22M   depot_tools
</span><span class='line'>740K  _gclient_src_fo4RrR
</span><span class='line'>42M   gerrit
</span><span class='line'>11M   reviewboard-read-only
</span></code></pre></td></tr></table></div></figure>


<p>More detailed information</p>

<blockquote><p>ls &ndash; list directory contents<br/>
Description:List  information about the FILEs (the current directory by default)
xargs &ndash; build and execute command lines from standard input</p>

<p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android NinePatch Attention]]></title>
    <link href="http://droidyue.com/blog/2014/04/26/android-ninepatch-attention/"/>
    <updated>2014-04-26T12:23:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/04/26/android-ninepatch-attention</id>
    <content type="html"><![CDATA[<p>I have got many crash report data about using NinePath Drwable. I put a .9.png file into the drawable-xhdpi folder and the file did not exist in any other folder. And I got ResourceNotFoundException. I got this following sayings.</p>

<!-- more -->


<blockquote><p>A NinePatchDrawable graphic is a stretchable bitmap image, which Android will automatically resize to accommodate the contents of the View in which you have placed it as the background. An example use of a NinePatch is the backgrounds used by standard Android buttons — buttons must stretch to accommodate strings of various lengths. A NinePatch drawable is a standard PNG image that includes an extra 1-pixel-wide border. <strong>It must be saved with the extension .9.png, and saved into the res/drawable/ directory of your project.</strong>
<a href="http://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch">http://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch</a></p></blockquote>

<p>The .9.png files must be saved into the res/drawable directory. Why? I guess the legacy Resouce Loading System implemententation may result in this issue. So at least put one .9.png file into the drawable folder.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install lsusb in Mac OSX]]></title>
    <link href="http://droidyue.com/blog/2014/04/26/install-lsusb-in-mac-osx/"/>
    <updated>2014-04-26T12:13:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/04/26/install-lsusb-in-mac-osx</id>
    <content type="html"><![CDATA[<p>To continue doing as the following, make sure you have installed homebrew in your Mac OSX.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">brew</span> <span class="n">update</span> <span class="o">&amp;&amp;</span> <span class="n">brew</span> <span class="n">tap</span> <span class="n">jlhonora</span><span class="o">/</span><span class="n">lsusb</span> <span class="o">&amp;&amp;</span> <span class="n">brew</span> <span class="n">install</span> <span class="n">lsusb</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Revert A Certain File Back To A Certain Commit]]></title>
    <link href="http://droidyue.com/blog/2014/04/18/revert-a-certain-file-back-to-a-certain-commit/"/>
    <updated>2014-04-18T21:49:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/04/18/revert-a-certain-file-back-to-a-certain-commit</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#Grammar</span>
</span><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="o">&lt;</span><span class="n">commit</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">filename</span><span class="o">&gt;</span>
</span><span class='line'><span class="c">#Examples</span>
</span><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="mi">19</span><span class="n">ea3021303c89449506e99e25de3a061dc5aa75</span> <span class="n">AndroidManifest</span><span class="o">.</span><span class="n">xml</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auth password cannot be read from a file]]></title>
    <link href="http://droidyue.com/blog/2014/04/18/auth-password-cannot-be-read-from-a-file/"/>
    <updated>2014-04-18T21:35:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/04/18/auth-password-cannot-be-read-from-a-file</id>
    <content type="html"><![CDATA[<p>I am facing this problem which leaves the error message</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">&#39;</span><span class="n">Auth</span><span class="err">&#39;</span> <span class="n">password</span> <span class="n">cannot</span> <span class="n">be</span> <span class="n">read</span> <span class="n">from</span> <span class="n">a</span> <span class="n">file</span>
</span></code></pre></td></tr></table></div></figure>


<p>Because I have set configuration like this in the .opvn file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">auth</span><span class="o">-</span><span class="n">user</span><span class="o">-</span><span class="n">pass</span> <span class="n">user_password</span><span class="o">.</span><span class="na">config</span>
</span></code></pre></td></tr></table></div></figure>


<p>And after I googled I found one solution. It says You should recomiple the openVPN. Then I did as it said. It works. <br/>
Now Go into the openvpn folder. and follow the below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./configure --enable-password-save
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Vim in StackEdit]]></title>
    <link href="http://droidyue.com/blog/2014/03/29/use-vim-in-stackedit/"/>
    <updated>2014-03-29T19:21:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/03/29/use-vim-in-stackedit</id>
    <content type="html"><![CDATA[<p>StackEdit is really great online editor. It could connect with Google Drive. And what&rsquo;s more, you can even use Vim in this editor.<br/>
Now add the following snippet into Settings&mdash;Extensions&mdash;UserCustom extension javascript area.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">userCustom</span><span class="p">.</span><span class="nx">onReady</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">ace</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>        <span class="nx">ace</span><span class="p">.</span><span class="nx">require</span> <span class="o">=</span> <span class="nx">require</span>
</span><span class='line'>        <span class="nx">ace</span><span class="p">.</span><span class="nx">define</span> <span class="o">=</span> <span class="nx">define</span>
</span><span class='line'>    <span class="nx">ace</span><span class="p">.</span><span class="nx">require</span><span class="p">([</span><span class="s2">&quot;ace/lib/net&quot;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">acenet</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">acenet</span><span class="p">.</span><span class="nx">loadScript</span><span class="p">(</span><span class="s2">&quot;http://google-drive-sdk-samples.googlecode.com/hg-history/db27d16a6e84d35bf068ce3864450cb557aa6a8d/php/lib/ace/keybinding-vim.js&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                        <span class="nx">e</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;.ace_editor&quot;</span><span class="p">).</span><span class="nx">env</span><span class="p">.</span><span class="nx">editor</span>
</span><span class='line'>            <span class="nx">ace</span><span class="p">.</span><span class="nx">require</span><span class="p">([</span><span class="s2">&quot;ace/keyboard/vim&quot;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">acevim</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                <span class="nx">e</span><span class="p">.</span><span class="nx">setKeyboardHandler</span><span class="p">(</span><span class="nx">acevim</span><span class="p">.</span><span class="nx">handler</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>        <span class="nb">window</span><span class="p">.</span><span class="nx">ace</span> <span class="o">=</span> <span class="nx">ace</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>

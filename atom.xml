<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[技术小黑屋]]></title>
  <link href="http://droidyue.com/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2014-09-14T21:25:25+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我的七牛参赛作品]]></title>
    <link href="http://droidyue.com/blog/2014/09/13/my-work-for-qiniu-demo/"/>
    <updated>2014-09-13T13:19:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/13/my-work-for-qiniu-demo</id>
    <content type="html"><![CDATA[<p>使用Ocopress写博客将近一年多了，大概几个月前同事给我推荐了<a href="https://portal.qiniu.com/signup?code=3l8cqx1u74rbm" target="_blank">七牛</a>做网站的静态文件存储服务，于是果断尝试了一下，发现真实不错。速度不错，而且有免费套餐。很是支持。最近发现七牛有一个demo大赛，于是果断参加了。</p>

<!--more-->


<h2>痛点</h2>

<ul>
<li>域名Godaddy购买，无法备案，不能使用七牛的独立域名绑定</li>
<li>服务器为github pages， 有300M空间限制，所以只能把静态文件放到七牛</li>
<li>每次写带图片等资源的博客，都需要先上传到七牛，然后得到外链地址，贴回到博客，过于繁琐啦。</li>
</ul>


<h2>解决思路</h2>

<p>由于ocotpress程序是将markdown文档转换成纯静态的HTML网页，我们可以在这个转换过程之前或者期间将图片等资源自动上传到七牛服务器，然后替换这些资源的地址为已上传文件的外链。</p>

<h2>实现细节</h2>

<ul>
<li>通过rb-inotify检测文件变化，新文件会直接上传，已经上传过的文件则覆盖更新。避免在生成html网页时大量拥挤上传</li>
<li>进行rake generate时，对没有上传的文件进行上传</li>
<li>通过sqlite数据库，记录文件路径和最后修改时间进行验证。</li>
</ul>


<h2>好处</h2>

<ul>
<li>节省了博客在github中的空间占用，让github空间限制几乎不再存在。只剩纯文本了，能占用多少空间</li>
<li>提高了在国内的访问的速度</li>
<li>使用更多的七牛的服务，比如防盗链等功能。</li>
</ul>


<h2>安装</h2>

<p>如果尚未安装Octopress，请参考<a href="http://blog.segmentfault.com/yaashion_xiang/1190000000364677" target="_blank">本文</a>安装。</p>

<h3>超级简单的一步安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>YOUR_OCTOPRESS_ROOT_DIR
</span><span class='line'>curl -o /tmp/install.sh https://gitcafe.com/androidyue/octopress_qiniu/raw/master/install.sh <span class="o">&amp;&amp;</span> bash /tmp/install.sh
</span></code></pre></td></tr></table></div></figure>


<h3>配置文件</h3>

<p>安装过程中，会使用vi打开一个配置文件，文件内容为，文件路径位于家目录下的.qiniu.ini。按照自己的实际情况填写配置即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#Qiniu Config File</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Project</span>
</span><span class='line'><span class="o">[</span>octopress<span class="o">]</span>
</span><span class='line'><span class="c">#Your Bucket to Store Images In Octopress</span>
</span><span class='line'><span class="nv">image_bucket</span> <span class="o">=</span> <span class="s2">&quot;your_bucket&quot;</span>
</span><span class='line'><span class="c">#Your Image Folder Path to store the files locally. Usually it&#39;s #{OCTORESS_DIRECTORY}/public/images/</span>
</span><span class='line'><span class="nv">image_dir</span> <span class="o">=</span> <span class="s2">&quot;image_dir_in_octopress&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Auth Info</span>
</span><span class='line'><span class="c">#Generate two following two keys in Qiniu Web Portal</span>
</span><span class='line'><span class="o">[</span>auth<span class="o">]</span>
</span><span class='line'><span class="nv">access_key</span> <span class="o">=</span> <span class="s2">&quot;your_access_key&quot;</span>
</span><span class='line'><span class="nv">secret_key</span> <span class="o">=</span> <span class="s2">&quot;your_secret_key&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>启动程序</h2>

<p>配置完成，轻松执行一个脚本就可以启动监控文件变化自动上传的程序了。当检测目录有文件变化时就会自动上传到七牛的文件服务器。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>YOUR_OCTOPRESS_ROOT_DIR/startQiniu.sh
</span></code></pre></td></tr></table></div></figure>


<h2>文件介绍</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>.
</span><span class='line'>|-- install.sh  <span class="c">#快捷安装脚本</span>
</span><span class='line'>|-- octopress   <span class="c">#覆盖octopress程序的目录</span>
</span><span class='line'>|   <span class="sb">`</span>-- plugins
</span><span class='line'>|       <span class="sb">`</span>-- image_tag.rb <span class="c"># 覆盖Octopress 程序自带的image_tag，实现图片上传到七牛</span>
</span><span class='line'>|-- qiniu       <span class="c">#工具程序的主目录</span>
</span><span class='line'>|   |-- qiniuCLI.rb    <span class="c">#命令行工具，这个工具是所有上传下载请求的对外处理程序，本工具中所有的请求都是直接调用这个工具。</span>
</span><span class='line'>|   |-- .qiniu_config_template.ini <span class="c">#配置文件模板，不要对这个文件直接配置，请使用家目录下的.qiniu.ini进行配置</span>
</span><span class='line'>|   |-- qiniuCore.rb   <span class="c">#最主要的处理脚本。支持从ini文件读取配置，数据库存储文件的上传信息，调用七牛的SDK来完成文件的上传和下载。</span>
</span><span class='line'>|   |-- .qiniu.db      <span class="c">#数据库文件，存储上传的记录</span>
</span><span class='line'>|   |-- qiniuFileNotifier.rb  <span class="c">#监控配置目录变化，自动上传或者覆盖文件。</span>
</span><span class='line'>|   <span class="sb">`</span>-- .setupQiniu.rb <span class="c">#安装需要的gem，复制配置文件到家目录</span>
</span><span class='line'>|-- README.md  <span class="c">#说明文件</span>
</span><span class='line'><span class="sb">`</span>-- startQiniu.sh <span class="c">#检查安装情况并启动文件监控自动上传启动程序</span>
</span></code></pre></td></tr></table></div></figure>


<h2>源码地址</h2>

<ul>
<li><a href="https://gitcafe.com/androidyue/octopress_qiniu" target="_blank">我的七牛参赛作品</a></li>
</ul>


<h3>解答问题</h3>

<ul>
<li>提问：为什么配置文件放在家目录下</li>
<li><p>回答：配置文件中包含了七牛的accessKey和accessSecret，默认的ocotpress受git管理，为了避免将配置文件误加入git管理，传到服务器端造成前面的accessKey和acessSecret泄露，所以放到家目录下。</p></li>
<li><p>提问：既然文件都上传到了，是不是可以删除掉存储到public/images/的文件</p></li>
<li>回答：当然可以，因为生成的网页的图片地址为七牛的外链地址，目前程序没有做主动删除文件的操作。</li>
</ul>


<p>最后希望大家多多支持，投我一票哈。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android根据资源名获取资源ID]]></title>
    <link href="http://droidyue.com/blog/2014/09/12/get-resource-id-by-name-in-android/"/>
    <updated>2014-09-12T22:12:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/12/get-resource-id-by-name-in-android</id>
    <content type="html"><![CDATA[<p>接触过Android开发的同学们都知道在Android中访问程序资源基本都是通过资源ID来访问。这样开发起来很简单，并且可以不去考虑各种分辨率，语言等不同资源显式指定。</p>

<!--more-->


<h2>痛点</h2>

<p>但是，有时候也会有一些问题，比如我们根据服务器端的值取图片，但是服务器端绝对不会返回给我们的是资源id，最多是一种和文件名相关联的值，操作资源少的时候，可以维护一个容器进行值与资源ID的映射，但是多的话，就需要另想办法了。</p>

<h3>便捷的方法</h3>

<p>在这种情况下，使用文件名来得到资源ID显得事半功倍。
通过调用Resources的getIdentifier可以很轻松地得到资源ID。
几个简单的示例</p>

<figure class='code'><figcaption><span>lineos:false </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Resources</span> <span class="n">res</span> <span class="o">=</span> <span class="n">getResources</span><span class="o">();</span>
</span><span class='line'><span class="kd">final</span> <span class="n">String</span> <span class="n">packageName</span> <span class="o">=</span> <span class="n">getPackageName</span><span class="o">();</span>
</span><span class='line'><span class="kt">int</span> <span class="n">imageResId</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="s">&quot;ic_launcher&quot;</span><span class="o">,</span> <span class="s">&quot;drawable&quot;</span><span class="o">,</span> <span class="n">packageName</span><span class="o">);</span>
</span><span class='line'><span class="kt">int</span> <span class="n">imageResIdByAnotherForm</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="n">packageName</span> <span class="o">+</span> <span class="s">&quot;:drawable/ic_launcher&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'><span class="kt">int</span> <span class="n">musicResId</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="s">&quot;test&quot;</span><span class="o">,</span> <span class="s">&quot;raw&quot;</span><span class="o">,</span> <span class="n">packageName</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'><span class="kt">int</span> <span class="n">notFoundResId</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="s">&quot;activity_main&quot;</span><span class="o">,</span> <span class="s">&quot;drawable&quot;</span><span class="o">,</span> <span class="n">packageName</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;testGetResourceIds imageResId = &quot;</span> <span class="o">+</span> <span class="n">imageResId</span>
</span><span class='line'>              <span class="o">+</span> <span class="s">&quot;;imageResIdByAnotherForm = &quot;</span> <span class="o">+</span> <span class="n">imageResIdByAnotherForm</span>
</span><span class='line'>              <span class="o">+</span> <span class="s">&quot;;musicResId=&quot;</span> <span class="o">+</span> <span class="n">musicResId</span>
</span><span class='line'>              <span class="o">+</span> <span class="s">&quot;;notFoundResId =&quot;</span> <span class="o">+</span> <span class="n">notFoundResId</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I/MainActivity<span class="o">(</span> 4537<span class="o">)</span>: testGetResourceIds <span class="nv">imageResId</span> <span class="o">=</span> 2130837504;imageResIdByAnotherForm <span class="o">=</span> 2130837504;musicResId<span class="o">=</span>2130968576;notFoundResId <span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<h2>看一看API</h2>

<h3>直接API</h3>

<ul>
<li>这个方法用来使用资源名来获取资源ID</li>
<li>完整的资源名为<code>package:type/entry</code>，如果资源名这个参数有完整地指定，后面的defType和defPackage可以省略。</li>
<li>defType和defPackage省略时，需要将其设置成null</li>
<li>注意这个方法不提倡，因为直接通过资源ID访问资源会更加效率高</li>
<li>如果资源没有找到，返回0,在Android资源ID中0不是合法的资源ID。</li>
</ul>


<figure class='code'><figcaption><span>lineos:false android.content.res.Resources.class</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Return a resource identifier for the given resource name.  A fully</span>
</span><span class='line'><span class="cm">     * qualified resource name is of the form &quot;package:type/entry&quot;.  The first</span>
</span><span class='line'><span class="cm">     * two components (package and type) are optional if defType and</span>
</span><span class='line'><span class="cm">     * defPackage, respectively, are specified here.</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * &lt;p&gt;Note: use of this function is discouraged.  It is much more</span>
</span><span class='line'><span class="cm">     * efficient to retrieve resources by identifier than by name.</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param name The name of the desired resource.</span>
</span><span class='line'><span class="cm">     * @param defType Optional default resource type to find, if &quot;type/&quot; is</span>
</span><span class='line'><span class="cm">     *                not included in the name.  Can be null to require an</span>
</span><span class='line'><span class="cm">     *                explicit type.</span>
</span><span class='line'><span class="cm">     * @param defPackage Optional default package to find, if &quot;package:&quot; is</span>
</span><span class='line'><span class="cm">     *                   not included in the name.  Can be null to require an</span>
</span><span class='line'><span class="cm">     *                   explicit package.</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @return int The associated resource identifier.  Returns 0 if no such</span>
</span><span class='line'><span class="cm">     *         resource was found.  (0 is not a valid resource ID.)</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getIdentifier</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">String</span> <span class="n">defType</span><span class="o">,</span> <span class="n">String</span> <span class="n">defPackage</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Ignore</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">mAssets</span><span class="o">.</span><span class="na">getResourceIdentifier</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">defType</span><span class="o">,</span> <span class="n">defPackage</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>间接API</h3>

<p>实际上上述API调用的是AssetManager.class中的native方法。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Retrieve the resource identifier for the given resource name.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="cm">/*package*/</span> <span class="kd">native</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">getResourceIdentifier</span><span class="o">(</span><span class="n">String</span> <span class="n">type</span><span class="o">,</span>
</span><span class='line'>                                                       <span class="n">String</span> <span class="n">name</span><span class="o">,</span>
</span><span class='line'>                                                       <span class="n">String</span> <span class="n">defPackage</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00J4DXWDG/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00J4DXWDG&linkCode=as2&tag=droidyue-23">Android编程权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00J4DXWDG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011F7WU4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F7WU4&linkCode=as2&tag=droidyue-23">收藏必备：Java编程思想</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011F7WU4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011C2P7W/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011C2P7W&linkCode=as2&tag=droidyue-23">经典著作：人月神话</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011C2P7W" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[十分钟掌握SQLite操作]]></title>
    <link href="http://droidyue.com/blog/2014/09/08/learn-sqlite-in-a-very-fast-way/"/>
    <updated>2014-09-08T20:45:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/08/learn-sqlite-in-a-very-fast-way</id>
    <content type="html"><![CDATA[<p>最近用Ruby写了一个七牛的demo参赛作品，使用了sqlite3，用到很多操作，利用假期的时间，简单做一个快速掌握SQLite命令的小入门。</p>

<p>SQLite是一个开放源代码的数据库引擎，具有独立，无服务器依赖，零配置，支持事务等特点。SQLite一直以轻量级为特点，在移动和嵌入式设备上使用广泛，官方称其是世界上部署最广泛的数据库引擎。</p>

<!--more-->


<p>本文主要侧重部分常用操作命令的介绍。试图以最简单的示例来展示如何操作。</p>

<h2>强大的命令集</h2>

<p>首先我们看一下sqlite3提供了哪些强大的命令。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .help
</span><span class='line'>.backup ?DB? FILE      Backup DB <span class="o">(</span>default <span class="s2">&quot;main&quot;</span><span class="o">)</span> to FILE
</span><span class='line'>.bail ON|OFF           Stop after hitting an error.  Default OFF
</span><span class='line'>.databases             List names and files of attached databases
</span><span class='line'>.dump ?TABLE? ...      Dump the database in an SQL text format
</span><span class='line'>                         If TABLE specified, only dump tables matching
</span><span class='line'>                         LIKE pattern TABLE.
</span><span class='line'>.echo ON|OFF           Turn <span class="nb">command echo </span>on or off
</span><span class='line'>.exit                  Exit this program
</span><span class='line'>.explain ?ON|OFF?      Turn output mode suitable <span class="k">for </span>EXPLAIN on or off.
</span><span class='line'>                         With no args, it turns EXPLAIN on.
</span><span class='line'>.header<span class="o">(</span>s<span class="o">)</span> ON|OFF      Turn display of headers on or off
</span><span class='line'>.help                  Show this message
</span><span class='line'>.import FILE TABLE     Import data from FILE into TABLE
</span><span class='line'>.indices ?TABLE?       Show names of all indices
</span><span class='line'>                         If TABLE specified, only show indices <span class="k">for </span>tables
</span><span class='line'>                         matching LIKE pattern TABLE.
</span><span class='line'>.load FILE ?ENTRY?     Load an extension library
</span><span class='line'>.log FILE|off          Turn logging on or off.  FILE can be stderr/stdout
</span><span class='line'>.mode MODE ?TABLE?     Set output mode where MODE is one of:
</span><span class='line'>                         csv      Comma-separated values
</span><span class='line'>                         column   Left-aligned columns.  <span class="o">(</span>See .width<span class="o">)</span>
</span><span class='line'>                         html     HTML &lt;table&gt; code
</span><span class='line'>                         insert   SQL insert statements <span class="k">for </span>TABLE
</span><span class='line'>                         line     One value per line
</span><span class='line'>                         list     Values delimited by .separator string
</span><span class='line'>                         tabs     Tab-separated values
</span><span class='line'>                         tcl      TCL list elements
</span><span class='line'>.nullvalue STRING      Print STRING in place of NULL values
</span><span class='line'>.output FILENAME       Send output to FILENAME
</span><span class='line'>.output stdout         Send output to the screen
</span><span class='line'>.prompt MAIN CONTINUE  Replace the standard prompts
</span><span class='line'>.quit                  Exit this program
</span><span class='line'>.read FILENAME         Execute SQL in FILENAME
</span><span class='line'>.restore ?DB? FILE     Restore content of DB <span class="o">(</span>default <span class="s2">&quot;main&quot;</span><span class="o">)</span> from FILE
</span><span class='line'>.schema ?TABLE?        Show the CREATE statements
</span><span class='line'>                         If TABLE specified, only show tables matching
</span><span class='line'>                         LIKE pattern TABLE.
</span><span class='line'>.separator STRING      Change separator used by output mode and .import
</span><span class='line'>.show                  Show the current values <span class="k">for </span>various settings
</span><span class='line'>.stats ON|OFF          Turn stats on or off
</span><span class='line'>.tables ?TABLE?        List names of tables
</span><span class='line'>                         If TABLE specified, only list tables matching
</span><span class='line'>                         LIKE pattern TABLE.
</span><span class='line'>.timeout MS            Try opening locked tables <span class="k">for </span>MS milliseconds
</span><span class='line'>.vfsname ?AUX?         Print the name of the VFS stack
</span><span class='line'>.width NUM1 NUM2 ...   Set column widths <span class="k">for</span> <span class="s2">&quot;column&quot;</span> mode
</span><span class='line'>.timer ON|OFF          Turn the CPU timer measurement on or off
</span><span class='line'>sqlite&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>以&#8221;.&ldquo;开始的命令规则</h2>

<p>看到了上面的全部命令，可以观察到，所有的命令都是以&#8221;.&ldquo;开始的。而常用的SQL语句是格式自由的，并且可以跨越多行，空白字符（whitespace）和注释可以出现在任何地方。而SQLite中以.开始的命令有更多的限制，具体如下</p>

<ul>
<li>所有命令以 <strong>.</strong> 开始，并且 <strong>.</strong> 的左侧不包含任何空白字符</li>
<li>所有命令必须全部包含在一行输入行中</li>
<li>所有命令不能出现在SQL语句之中</li>
<li>命令不识别注释</li>
</ul>


<h2>常用操作</h2>

<h3>创建一个数据库文件</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#找一个不存在的文件</span>
</span><span class='line'>09:35:16-androidyue/tmp<span class="nv">$ </span>cat test.db
</span><span class='line'>cat: test.db: No such file or directory
</span><span class='line'>
</span><span class='line'><span class="c">#使用sqlite3 想要创建的数据库文件</span>
</span><span class='line'>09:35:28-androidyue/tmp<span class="nv">$ </span>sqlite3 test.db
</span><span class='line'>
</span><span class='line'><span class="c">#进入sqlite，执行建表语句</span>
</span><span class='line'>sqlite&gt; CREATE TABLE qn_uploaded<span class="o">(</span>filePath VARCHAR<span class="o">(</span>255<span class="o">)</span>, bucket VARCHAR<span class="o">(</span>63<span class="o">)</span>,  lastModified FLOAT<span class="o">)</span>;
</span><span class='line'><span class="c">#退出SQLite</span>
</span><span class='line'>sqlite&gt; .exit
</span><span class='line'>
</span><span class='line'><span class="c">#查看指定的文件，创建成功</span>
</span><span class='line'>09:42:26-androidyue/tmp<span class="nv">$ </span>cat test.db
</span><span class='line'>09:44:45-androidyue/tmp<span class="nv">$ </span>dedqn_uploadedCREATE TABLE qn_uploaded<span class="o">(</span>filePath VARCHAR<span class="o">(</span>255<span class="o">)</span>, bucket VARCHAR<span class="o">(</span>63<span class="o">)</span>,  lastModified FLOAT<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>打开已存在的数据库文件</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>22:56:15-androidyue~ <span class="nv">$ </span>sqlite3 database_file.db
</span></code></pre></td></tr></table></div></figure>


<h3>查看数据库</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .databases
</span><span class='line'>seq  name             file
</span><span class='line'>---  ---------------  ----------------------------------------------------------
</span><span class='line'>0    main             /home/androidyue/qiniu/.qiniu.db
</span><span class='line'>1    temp
</span></code></pre></td></tr></table></div></figure>


<h3>查看数据表</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .tables
</span><span class='line'>qn_uploaded
</span></code></pre></td></tr></table></div></figure>


<h3>查看建表语句</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .schema qn_uploaded
</span><span class='line'>CREATE TABLE qn_uploaded<span class="o">(</span>filePath VARCHAR<span class="o">(</span>255<span class="o">)</span>, bucket VARCHAR<span class="o">(</span>63<span class="o">)</span>,  lastModified FLOAT<span class="o">)</span>;
</span></code></pre></td></tr></table></div></figure>


<h3>显示字段名称</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#没有开启</span>
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png|droidyue|1410096518.43964
</span><span class='line'>
</span><span class='line'><span class="c">#开启之后</span>
</span><span class='line'>sqlite&gt; .header on
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>filePath|bucket|lastModified
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png|droidyue|1410096518.43964
</span></code></pre></td></tr></table></div></figure>


<h3>导出数据表结构和数据(文本形式)</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .dump qn_uploaded
</span><span class='line'>PRAGMA <span class="nv">foreign_keys</span><span class="o">=</span>OFF;
</span><span class='line'>BEGIN TRANSACTION;
</span><span class='line'>CREATE TABLE qn_uploaded<span class="o">(</span>filePath VARCHAR<span class="o">(</span>255<span class="o">)</span>, bucket VARCHAR<span class="o">(</span>63<span class="o">)</span>,  lastModified FLOAT<span class="o">)</span>;
</span><span class='line'>INSERT INTO <span class="s2">&quot;qn_uploaded&quot;</span> VALUES<span class="o">(</span><span class="s1">&#39;/home/androidyue/Documents/octopress/public/images/dotted-border.png&#39;</span>,<span class="s1">&#39;droidyue&#39;</span>,1410096552.54864<span class="o">)</span>;
</span><span class='line'>COMMIT;
</span></code></pre></td></tr></table></div></figure>


<h2>调整输出</h2>

<p>sqlite3程序可以使用八种不同的格式显示结果。 这些格式是&#8221;csv&#8221;, &ldquo;column&rdquo;, &ldquo;html&rdquo;, &ldquo;insert&rdquo;, &ldquo;line&rdquo;, &ldquo;list&rdquo;, &ldquo;tabs&rdquo;, and &ldquo;tcl&rdquo;. 你可以使用<strong>.mode</strong>命令来进行切换输出格式</p>

<p>默认的输出模式list，使用了list模式，每条查询结果记录都会输出到一行，每一列使用一个分割符分割，默认的分割符是 &ldquo;<strong>|</strong>&#8220;，list模式有一个常用的使用情况，就是当你想对查询结果记性额外处理（比如AWK处理）时，会事半功倍。</p>

<h3>列表模式输出</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png|droidyue|1410096518.43964
</span></code></pre></td></tr></table></div></figure>


<h3>修改列表模式分割符</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .separator <span class="s2">&quot;, &quot;</span>
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png, droidyue, 1410096518.43964
</span></code></pre></td></tr></table></div></figure>


<h3>使用Line模式</h3>

<p>每行的输出格式为 <code>字段名 =  字段值</code></p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .mode line
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>    <span class="nv">filePath</span> <span class="o">=</span> /home/androidyue/Documents/octopress/public//images/email.png
</span><span class='line'>      <span class="nv">bucket</span> <span class="o">=</span> droidyue
</span><span class='line'><span class="nv">lastModified</span> <span class="o">=</span> 1410096518.43964
</span></code></pre></td></tr></table></div></figure>


<h3>使用列模式</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .mode column
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png  droidyue    1410096518.43964
</span><span class='line'>/home/androidyue/Documents/octopress/public/images/rss.png     droidyue    1410096552.54764
</span></code></pre></td></tr></table></div></figure>


<h2>输出内容</h2>

<h3>输出结果</h3>

<p>默认情况下，所有的查询结果都是都是作为标准的输出展示。使用.output可以将输出结果定向到文件中。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .output /tmp/test.txt
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>sqlite&gt; .exit
</span><span class='line'>17:48:54-androidyue~/Documents/octopress/qiniu <span class="o">(</span>master<span class="o">)</span><span class="nv">$ </span>cat /tmp/test.txt
</span><span class='line'>file  bucket         last
</span><span class='line'>----  -------------  ----
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png  droidyue       1410096518.43964
</span><span class='line'>/home/androidyue/Documents/octopress/public/images/rss.png  droidyue       1410096552.54764
</span></code></pre></td></tr></table></div></figure>


<h2>备份和恢复</h2>

<h3>备份</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#语法 .backup ?DB? FILE      Backup DB (default &quot;main&quot;) to FILE</span>
</span><span class='line'>sqlite&gt; .backup main /tmp/main.txt
</span></code></pre></td></tr></table></div></figure>


<h3>恢复</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#语法.restore ?DB? FILE     Restore content of DB (default &quot;main&quot;) from FILE</span>
</span><span class='line'>.restore main  /tmp/main.txt
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li> <a href="http://www.amazon.cn/gp/product/B00COG3W58/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00COG3W58&linkCode=as2&tag=droidyue-23">SQL必知必会</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00COG3W58" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B006K2EHL0/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B006K2EHL0&linkCode=as2&tag=droidyue-23">SQLite权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B006K2EHL0" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00457W5DO/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00457W5DO&linkCode=as2&tag=droidyue-23">揭示facebook上市背后的秘密</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00457W5DO" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[来傲游浏览器工作]]></title>
    <link href="http://droidyue.com/blog/2014/09/01/wanna-work-at-maxthon/"/>
    <updated>2014-09-01T12:16:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/01/wanna-work-at-maxthon</id>
    <content type="html"><![CDATA[<p>帮公司发布一下一些职位的招聘，未来的小伙伴赶紧投递简历哈。投递给我，会有更大的面试特权哈。发送简历给我 andrewallanwallace#gmail.com, 请将#替换成@。</p>

<p>还等什么，快到碗里来。</p>

<!--more-->


<h2>高级Android开发工程师</h2>

<h3>岗位职责</h3>

<ul>
<li>负责安卓平台上的应用开发；</li>
</ul>


<h3>岗位要求</h3>

<ul>
<li>五年以上开发经验；</li>
<li>两年以上Android SDK及 NDK使用经验；</li>
<li>精通JAVA，有面向对象编程的思想；</li>
<li>优秀的分析解决问题的能力；</li>
<li>良好的口头及书面沟通技巧；</li>
<li>领导跨部门核心项目团队的能力。</li>
</ul>


<h3>有以下经验者更佳</h3>

<ul>
<li>熟悉OpenGL；</li>
<li>熟悉C/C++;</li>
<li>有其他移动平台(如iOS)开发经验者优先；</li>
<li>能适应产品快速发布的环境，有敏捷开发经验者更佳；</li>
<li>有TDD经验及结对编程经验者优先。</li>
</ul>


<h2>iOS 开发工程师 (浏览器方向)</h2>

<h3>岗位职责</h3>

<ul>
<li>负责iOS平台浏览器以及相关应用的开发测试和维护.</li>
</ul>


<h3>岗位要求</h3>

<ul>
<li>3年以上开发经验; 1年以上iOS或者Mac应用开发经验;</li>
<li>熟悉CocoaTouch框架, 深入了解Objective-C, 有良好的编程习惯;</li>
<li>对技术有浓厚兴趣, 有较好的产品敏感度, 善于沟通, 良好的团队合作精神;</li>
<li>良好的分析和解决问题的能力;</li>
</ul>


<h3>有以下经验者更佳：</h3>

<ul>
<li>对c/c++有深入了解, 有1年以上实际相关开发经验;</li>
<li>熟悉javascript/css, 有实际的开发经验;</li>
<li>了解webkit和iOS网络架构;</li>
<li>有其他移动平台相关开发经验.</li>
</ul>


<h2>Linux应用运维工程师</h2>

<h3>岗位职责</h3>

<ul>
<li>负责上线应用部署，故障定位，业务优化</li>
</ul>


<h3>岗位要求</h3>

<ul>
<li>二年以上互联网公司相关工作经验；</li>
<li>至少能够编写一种脚本语言(Bash,Perl,Python) ，了解代码版本管理系统 （SVN、Git）；</li>
<li>至少熟练运用一种 Linux 发行版本 （CentOS、Debian、Ubuntu、Arch、Gentoo）；</li>
<li>理解并能熟练运用 iptables、apache、nginx、LVS、nagios、zabbix、cacti等常见的开源软件；</li>
<li>有高度的责任心、较强的沟通能力和良好的团队合作精神做事细致；</li>
<li>主动性强，善于主动思考问题，并提出自己的解决思路。</li>
</ul>


<h2>高级Linux运维工程师</h2>

<h3>岗位职责</h3>

<ul>
<li>负责国内外服务器的系统、应用运维工作，包括系统监控、系统升级、系统安全、性能优化等；</li>
<li>参与公共类运维支撑平台的建设；</li>
<li>参与部门运维自动化实施；</li>
<li>运维相关的新技术研究；</li>
<li>负责公司内部mysql数据库管理工作(主要是日常数据库维护工作) 。</li>
</ul>


<h3>岗位要求</h3>

<ul>
<li>两年以上服务器维护经验，了解互联网运用架构，管理过50台以上Linux服务器经验；</li>
<li>有一定的开发能力（能使用shell、perl,python等脚本语言）；</li>
<li>有高度的责任心、较强的沟通能力和良好的团队合作精神做事细致，主动性强，善于主动思考问题，并提出自己的解决思路；</li>
<li>有维护mysql的数据库的经验(熟悉mysql主从原理及myisam,innodb存储引擎原理)。</li>
</ul>


<p>同时，这些职位也同时在热招，测试工程师，安卓开发工程师，网页设计师（游戏），游戏客服，手机推广专员，前端工程师，服务器开发工程师，更多详细内容，请参考<a href="http://www.maxthon.cn/jobs/" target="_blank">来傲游工作</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java细节：字符串的拼接]]></title>
    <link href="http://droidyue.com/blog/2014/08/30/java-details-string-concatenation/"/>
    <updated>2014-08-30T18:18:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/30/java-details-string-concatenation</id>
    <content type="html"><![CDATA[<p>工作日忙于项目的逻辑实现，周六有点时间，从书柜里拿出厚厚的英文版<em>Thinking In Java</em>，读到了字符串对象的拼接。参考着这本书做个翻译，加上自己思考的东西，写上这篇文章记录一下。</p>

<!--more-->


<h2>不可变的String对象</h2>

<p>在Java中,String对象是不可变的(Immutable)。在代码中，可以创建多个某一个String对象的别名。但是这些别名都是的引用是相同的。<br/>
比如s1和s2都是&#8221;droidyue.com&#8221;对象的别名，别名保存着到真实对象的引用。所以s1 = s2</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">s1</span> <span class="o">=</span> <span class="s">&quot;droidyue.com&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">s2</span> <span class="o">=</span> <span class="n">s1</span><span class="o">;</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;s1 and s2 has the same reference =&quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">s1</span> <span class="o">==</span> <span class="n">s2</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Java中仅有的重载运算符</h2>

<p>在Java中，唯一被重载的运算符就是字符串的拼接相关的。<code>+</code>,<code>+=</code>。除此之外，Java设计者不允许重载其他的运算符。</p>

<h2>拼接剖析</h2>

<h3>真的有性能代价么</h3>

<p>了解了上面两点，可能会有这样的思考，既然Sting对象不可变，那么多个（三个及以上）字符串拼接必然产生多余的中间String对象。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">userName</span> <span class="o">=</span> <span class="s">&quot;Andy&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">age</span> <span class="o">=</span> <span class="s">&quot;24&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">job</span> <span class="o">=</span> <span class="s">&quot;Developer&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">info</span> <span class="o">=</span> <span class="n">userName</span> <span class="o">+</span> <span class="n">age</span> <span class="o">+</span> <span class="n">job</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>要得到上面的info，就会userName和age拼接生成临时一个String对象t1,内容为<code>Andy24</code>，然后有t1和job拼接生成最终我们需要的info对象，这其中，产生了一个中间的t1，而且t1创建之后，没有主动回收，势必会占一定的空间。如果是一个很多(假设上百个，多见于对对象的toString的调用)字符串的拼接，那么代价就更大了，性能一下会降低很多。</p>

<h3>编译器的优化处理</h3>

<p>真的会有上面的性能代价么，字符串拼接这么常用，没有特殊的处理优化么，答案是有的，这个优化进行在编译器编译.java到bytecode时。</p>

<p>一个Java程序如果想运行起来，需要经过两个时期，编译时和运行时。在编译时，Java 编译器(Compiler)将java文件转换成字节码。在运行时，Java虚拟机（JVM）运行编译时生成的字节码。通过这样两个时期，Java做到了所谓的一处编译，处处运行。</p>

<p>我们实验一下编译期都做了哪些优化，我们制造一段可能会出现性能代价的代码。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Concatenation</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">userName</span> <span class="o">=</span> <span class="s">&quot;Andy&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">age</span> <span class="o">=</span> <span class="s">&quot;24&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">job</span> <span class="o">=</span> <span class="s">&quot;Developer&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">info</span> <span class="o">=</span> <span class="n">userName</span> <span class="o">+</span> <span class="n">age</span> <span class="o">+</span> <span class="n">job</span><span class="o">;</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">info</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>对Concatenation.java进行编译一下。得到Concatenation.class</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>javac Concatenation.java
</span></code></pre></td></tr></table></div></figure>


<p>然后我们使用javap反编译一下编译出来的Concatenation.class文件。<code>javap -c Concatenation.class</code>。如果没有找到javap命令，请考虑将javap所在目录加入环境变量或者使用javap的完整路径。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>17:22:04-androidyue~/workspace_adt/strings/src<span class="nv">$ </span>javap -c Concatenation.class
</span><span class='line'>Compiled from <span class="s2">&quot;Concatenation.java&quot;</span>
</span><span class='line'>public class Concatenation <span class="o">{</span>
</span><span class='line'>  public Concatenation<span class="o">()</span>;
</span><span class='line'>    Code:
</span><span class='line'>       0: aload_0
</span><span class='line'>       1: invokespecial <span class="c">#1                  // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>       4: <span class="k">return        </span>
</span><span class='line'>
</span><span class='line'><span class="k">  </span>public static void main<span class="o">(</span>java.lang.String<span class="o">[])</span>;
</span><span class='line'>    Code:
</span><span class='line'>       0: ldc           <span class="c">#2                  // String Andy</span>
</span><span class='line'>       2: astore_1
</span><span class='line'>       3: ldc           <span class="c">#3                  // String 24</span>
</span><span class='line'>       5: astore_2
</span><span class='line'>       6: ldc           <span class="c">#4                  // String Developer</span>
</span><span class='line'>       8: astore_3
</span><span class='line'>       9: new           <span class="c">#5                  // class java/lang/StringBuilder</span>
</span><span class='line'>      12: dup
</span><span class='line'>      13: invokespecial <span class="c">#6                  // Method java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>      16: aload_1
</span><span class='line'>      17: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      20: aload_2
</span><span class='line'>      21: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      24: aload_3
</span><span class='line'>      25: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      28: invokevirtual <span class="c">#8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span>
</span><span class='line'>      31: astore        4
</span><span class='line'>      33: getstatic     <span class="c">#9                  // Field java/lang/System.out:Ljava/io/PrintStream;</span>
</span><span class='line'>      36: aload         4
</span><span class='line'>      38: invokevirtual <span class="c">#10                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
</span><span class='line'>      41: <span class="k">return</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中，ldc，astore等为java字节码的指令，类似汇编指令。后面的注释使用了Java相关的内容进行了说明。
我们可以看到上面有很多StringBuilder,但是我们在Java代码里并没有显示地调用，这就是Java编译器做的优化，当Java编译器遇到字符串拼接的时候，会创建一个StringBuilder对象，后面的拼接，实际上是调用StringBuilder对象的append方法。这样就不会有我们上面担心的问题了。</p>

<h3>仅靠编译器优化？</h3>

<p>既然编译器帮我们做了优化，是不是仅仅依靠编译器的优化就够了呢，当然不是。 <br/>
下面我们看一段未优化性能较低的代码</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span>  <span class="nf">implicitUseStringBuilder</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">values</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span> <span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">result</span> <span class="o">+=</span> <span class="n">values</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用javac编译，使用javap查看</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>public void implicitUseStringBuilder<span class="o">(</span>java.lang.String<span class="o">[])</span>;
</span><span class='line'>    Code:
</span><span class='line'>       0: ldc           <span class="c">#11                 // String </span>
</span><span class='line'>       2: astore_2
</span><span class='line'>       3: iconst_0
</span><span class='line'>       4: istore_3
</span><span class='line'>       5: iload_3
</span><span class='line'>       6: aload_1
</span><span class='line'>       7: arraylength
</span><span class='line'>       8: if_icmpge     38
</span><span class='line'>      11: new           <span class="c">#5                  // class java/lang/StringBuilder</span>
</span><span class='line'>      14: dup
</span><span class='line'>      15: invokespecial <span class="c">#6                  // Method java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>      18: aload_2
</span><span class='line'>      19: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      22: aload_1
</span><span class='line'>      23: iload_3
</span><span class='line'>      24: aaload
</span><span class='line'>      25: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      28: invokevirtual <span class="c">#8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span>
</span><span class='line'>      31: astore_2
</span><span class='line'>      32: iinc          3, 1
</span><span class='line'>      35: goto          5
</span><span class='line'>      38: getstatic     <span class="c">#9                  // Field java/lang/System.out:Ljava/io/PrintStream;</span>
</span><span class='line'>      41: aload_2
</span><span class='line'>      42: invokevirtual <span class="c">#10                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
</span><span class='line'>      45: <span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>8: if_icmpge     38</code> 和<code>35: goto          5</code>构成了一个循环。<code>8: if_icmpge     38</code>的意思是如果JVM操作数栈的整数对比大于等于（i &lt; values.length的相反结果）成立，则跳到第38行（System.out）。<code>35: goto          5</code>则表示直接跳到第5行。</p>

<p>但是这里面有一个很重要的就是StringBuilder对象创建发生在循环之间，也就是意味着有多少次循环会创建多少个StringBuilder对象，这样明显不好。赤裸裸地低水平代码啊。</p>

<p>稍微优化一下，瞬间提升逼格。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">explicitUseStringBuider</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">StringBuilder</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">values</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span> <span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">values</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>对应的编译后的信息</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>public void explicitUseStringBuider<span class="o">(</span>java.lang.String<span class="o">[])</span>;
</span><span class='line'>    Code:
</span><span class='line'>       0: new           <span class="c">#5                  // class java/lang/StringBuilder</span>
</span><span class='line'>       3: dup
</span><span class='line'>       4: invokespecial <span class="c">#6                  // Method java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>       7: astore_2
</span><span class='line'>       8: iconst_0
</span><span class='line'>       9: istore_3
</span><span class='line'>      10: iload_3
</span><span class='line'>      11: aload_1
</span><span class='line'>      12: arraylength
</span><span class='line'>      13: if_icmpge     30
</span><span class='line'>      16: aload_2
</span><span class='line'>      17: aload_1
</span><span class='line'>      18: iload_3
</span><span class='line'>      19: aaload
</span><span class='line'>      20: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      23: pop
</span><span class='line'>      24: iinc          3, 1
</span><span class='line'>      27: goto          10
</span><span class='line'>      30: <span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>


<p>从上面可以看出，<code>13: if_icmpge     30</code>和<code>27: goto          10</code>构成了一个loop循环，而<code>0: new           #5</code>位于循环之外，所以不会多次创建StringBuilder.</p>

<p>总的来说，我们在循环体中需要尽量避免隐式或者显式创建StringBuilder. 所以那些了解代码如何编译，内部如何执行的人，写的代码档次都比较高。</p>

<p>以上文章，如有错误，请批评指正 。</p>

<h3>推荐阅读</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0011F7WU4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F7WU4&linkCode=as2&tag=droidyue-23">Java编程思想(第4版)</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011F7WU4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011C3CVA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011C3CVA&linkCode=as2&tag=droidyue-23">Java编程思想（英文版）</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011C3CVA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00D2ID4PK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00D2ID4PK&linkCode=as2&tag=droidyue-23">深入理解Java虚拟机:JVM高级特性与最佳实践</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00D2ID4PK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[也说CSS之not：为样式加入例外处理]]></title>
    <link href="http://droidyue.com/blog/2014/08/30/add-exceptions-in-applying-css/"/>
    <updated>2014-08-30T11:37:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/30/add-exceptions-in-applying-css</id>
    <content type="html"><![CDATA[<p>使用Octopress作为日常的博客发布工具，在加入多说评论的时候遇到了一个问题，顺带接触了css中的not选择，<strong>用来将某些Css选择器加入例外，不应用指定的css样式</strong>。</p>

<!--more-->


<h2>用法</h2>

<p> :not(selector),参数selector为css中的选择器，可以是元素，类，id等。如不清楚，可以查阅<a href="http://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank">CSS3 选择器</a>了解详细。</p>

<p> 语法</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/*单个使用*/</span>
</span><span class='line'> <span class="nd">:not</span><span class="o">(</span><span class="nt">selector</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">property</span><span class="o">:</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c">/*多个使用*/</span>
</span><span class='line'> <span class="nd">:not</span><span class="o">(</span><span class="nt">selector1</span><span class="o">)</span><span class="nd">:not</span><span class="o">(</span><span class="nt">selector2</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">property</span><span class="o">:</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>例子</h2>

<p>下面代码，所有的li元素都有一个样式，就是背景色设置为红色，这里我们把class为special和id为specialLi的li元素加入例外，不应用这个样式，我们就可以这样做。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">li</span><span class="nd">:not</span><span class="o">(</span><span class="nc">.special</span><span class="o">)</span><span class="nd">:not</span><span class="o">(</span><span class="nf">#specialLi</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">background-color</span><span class="o">:</span> <span class="nb">red</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="nt">&lt;/style&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'><span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;special&quot;</span><span class="nt">&gt;</span>Android<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;</span>Chrome<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li</span> <span class="na">id=</span><span class="s">&quot;specialLi&quot;</span><span class="nt">&gt;</span>Google Glass<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果就是如下这样</p>

<ul>
<li class="special">Android</li>
<li style="background-color:red">Chrome</li>
<li id="specialLi">Google Glass</li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B008HN791U/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B008HN791U&linkCode=as2&tag=droidyue-23">CSS禅意花园</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B008HN791U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011F5SIC/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F5SIC&linkCode=as2&tag=droidyue-23">典藏经典：CSS权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011F5SIC" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00ASVF4Y8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ASVF4Y8&linkCode=as2&tag=droidyue-23">HTML5与CSS3设计模式</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ASVF4Y8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[龟兔赛跑中为什么要用兔子]]></title>
    <link href="http://droidyue.com/blog/2014/08/30/story-thinking-guituisaipao/"/>
    <updated>2014-08-30T10:09:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/30/story-thinking-guituisaipao</id>
    <content type="html"><![CDATA[<p>龟兔赛跑的童话故事，想必是家喻户晓，前几天很好奇，为什么要故事要使用兔子，为什么不使用狗狼或者人类作为角色呢？</p>

<p>下面不妨替我慢慢讲解</p>

<p>龟兔赛跑这篇故事摘自古希腊的文学著作《伊索寓言》，《伊索寓言》的一系列故事，大都篇辐短小，却能阐述大道理，深具哲理。</p>

<!--more-->


<p>《伊索寓言》里面的角色大多是拟人化的动物，它们用人的方式来表现行为举
止，作者借以形象化地说出某种思想、道德观或生活经验，使读者从中得到教育。</p>

<p>《伊索寓言》中，有关狮子、豺狼、毒蛇、鳄鱼和狐狸象征著统治者，他们残暴专横，对人民姿意巧取横夺。是不是有点像古代诗人写诗的时候常用到的借古讽今的手法啊。</p>

<p>上面可以说明为什么不使用人类的了。那么为什么又要兔子呢？其实兔子本身有着某种象征。</p>

<p>野兔在体育界的某些项目中被认为是速度的象征，一些以速度见长的运动员被冠以野兔的花名，如澳洲著名网球运动员休伊特</p>

<p>相信看到上面就明白了为什么用兔子了吧。所以兔子作为赛跑先天优势者和先天劣势者乌龟赛跑是可以被理解的。</p>

<p>最重要的应该是我们从这篇故事中学到的启发和思考。</p>

<p>这个故事的教训有两面：</p>

<ul>
<li>先天优势者：要虚心学习，谦虚做人，不要轻敌，因为骄兵必败，只有时刻都保持谦卑之心，才能保持头脑清醒，从而使做事更为成功。</li>
<li>先天弱势者：勿自暴自弃，保持自信，只有坚持目标，努力不懈，最后才可能成功。</li>
</ul>


<p>如果你有更好的解释，请告诉我哈。</p>

<h3>参考链接</h3>

<ul>
<li><a href="http://zh.wikipedia.org/wiki/%E9%BE%9C%E5%85%94%E8%B3%BD%E8%B7%91" target="_blank">龟兔赛跑@维基百科</a></li>
<li><a href="http://zh.wikipedia.org/zh-cn/%E5%85%94" target="_blank">兔子@维基百科</a></li>
<li><a href="http://zh.wikipedia.org/wiki/%E4%BC%8A%E7%B4%A2%E5%AF%93%E8%A8%80" target="_blank">伊索寓言@维基百科</a></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00AH8Z384/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00AH8Z384&linkCode=as2&tag=droidyue-23">如何提问最好</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00AH8Z384" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B003SRH9M4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003SRH9M4&linkCode=as2&tag=droidyue-23">经典译林:伊索寓言全集</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B003SRH9M4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00AR8JWA4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00AR8JWA4&linkCode=as2&tag=droidyue-23">清醒思考的艺术:你最好让别人去犯的52种思维错误</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00AR8JWA4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[日语中的ない形]]></title>
    <link href="http://droidyue.com/blog/2014/08/28/nai-form-in-nihongo/"/>
    <updated>2014-08-28T21:10:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/28/nai-form-in-nihongo</id>
    <content type="html"><![CDATA[<p>在语言中，否定形式是一种及其常见的形式，当然日语中也存在，常见的表现为未然形后接ない、ぬ（ん），来表示否定。</p>

<h2>未然形 == ない形（否定形）？</h2>

<p>相信有人认为未然形就是ない形，其实是不对的，未然形是日语动词的一种活用，而ない形可以看成日语中的未然形后接ない构成。所以这两个不是相等的</p>

<!--more-->


<h2>未然形变化</h2>

<h3>五段动词</h3>

<ul>
<li>词尾う段假名变成同行的あ段假名</li>
<li>e.g. なる　　ーー＞　なら  行くーー＞　行か</li>
<li>词尾为う的变成わ，而不是あ</li>
<li>e.g. 言う　　ーー＞　言わ</li>
</ul>


<h3>一段动词</h3>

<ul>
<li>去掉词尾的る</li>
<li>e.g. 食べる　ーー＞　食べ　　できる　ーー＞　でき</li>
</ul>


<h3>サ变动词</h3>

<ul>
<li>する变成し</li>
<li>e.g. する　ーー＞　し　　　運動する　ーー＞　運動し</li>
</ul>


<h3>カ变动词</h3>

<ul>
<li>来（く）る　变成 来（こ）</li>
</ul>


<h2>ない形变化</h2>

<p>按照上面的未然形变化，然后词尾加上ない即可。</p>

<h2>ない的种种形式</h2>

<ul>
<li>敬体现在时 　未然形 + ません</li>
<li>敬体过去时 　未然形 + ませんでした</li>
<li>简体现在时 　未然形 + ない</li>
<li>简体过去时 　未然形 + なかった</li>
</ul>


<h2>例外</h2>

<p>ある的否定表达形式不是あらない，是ない。需要特殊记忆。</p>

<h2>附上例句</h2>

<ul>
<li>しょうがない　没有办法</li>
<li>野菜を食べない　不吃蔬菜</li>
<li>運動しないと、体は弱いになります。　　不锻炼身体的话，体质会变差的。</li>
<li>彼は多分来ないだろう。他可能不来了。</li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B004XFVI3Q/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B004XFVI3Q&linkCode=as2&tag=droidyue-23">新东方如何教日语</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B004XFVI3Q" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B004VPC684/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B004VPC684&linkCode=as2&tag=droidyue-23">日本人最爱背诵的名篇佳段</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B004VPC684" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[工作利器：终于可以使用Markdown写邮件啦]]></title>
    <link href="http://droidyue.com/blog/2014/08/26/write-emails-using-markdown-in-browsers/"/>
    <updated>2014-08-26T20:59:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/26/write-emails-using-markdown-in-browsers</id>
    <content type="html"><![CDATA[<p>本人作为一个Markdown重度依赖患者，一直深受Markdown的高效写作的恩惠，一直在探索如何在浏览器中写Gmail邮件也可以使用Markdown这种高效语言。前段时间终于找到了答案，自己用着很棒。当然，好东西要分享才可以。遂作此文。</p>

<!--more-->


<h2>利器揭露</h2>

<ul>
<li>真正的利器叫做markdown-here</li>
<li><a href="https://github.com/adam-p/markdown-here" target="_blank">Github地址</a></li>
<li><a href="https://chrome.google.com/webstore/detail/markdown-here/elifhakcjgalahccnjkneoccemfahfoa" target="_blank">Chrome插件地址</a></li>
</ul>


<h2>上图演示</h2>

<p>  这里摘了一张图来说明如何使用
<img src="http://droidyueimg.qiniudn.com/markdown_here_example.png" title="how to use markdown-here" ></p>

<p>如果想取消转换，选中转换后的效果，同样选择<strong>Mardown Toggle</strong>就可以了</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0061XKRXA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0061XKRXA&linkCode=as2&tag=droidyue-23">代码大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0061XKRXA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0031M9GHC/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0031M9GHC&linkCode=as2&tag=droidyue-23">代码整洁之道</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0031M9GHC" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B003BY6PLK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003BY6PLK&linkCode=as2&tag=droidyue-23">重构:改善既有代码的设计</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B003BY6PLK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby常用文件操作]]></title>
    <link href="http://droidyue.com/blog/2014/08/21/file-code-sinppets-in-ruby/"/>
    <updated>2014-08-21T19:20:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/21/file-code-sinppets-in-ruby</id>
    <content type="html"><![CDATA[<p>初学Ruby，很多需要学习，现在开始尝试使用Ruby来写一个脚本，其中用到了很多文件相关的操作，这里阶段地整理一些。便于后续的再次查找。</p>

<!--more-->


<h3>文件或目录是否存在</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="s1">&#39;file_path&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>是否为文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">file?</span><span class="p">(</span><span class="s2">&quot;file_path&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>是否为目录</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">directory?</span><span class="p">(</span><span class="s2">&quot;file_path&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>从路径中获取文件名</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="s1">&#39;/tmp/adb.log&#39;</span><span class="p">)</span>  <span class="c1">#=&gt; &quot;adb.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#从上面结果中移除扩展名</span>
</span><span class='line'>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="s1">&#39;/tmp/adb.log&#39;</span><span class="p">,</span> <span class="s1">&#39;.log&#39;</span><span class="p">)</span> <span class="c1">#=&gt; &quot;adb&quot;</span>
</span><span class='line'><span class="c1">#或者</span>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="s1">&#39;/tmp/adb.log&#39;</span><span class="p">,</span> <span class="s1">&#39;.*&#39;</span><span class="p">)</span>   <span class="c1">#=&gt; &quot;adb&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>列出目录下的全部子文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#替换puts child为自己的操作</span>
</span><span class='line'><span class="no">Dir</span><span class="o">[</span><span class="s1">&#39;/tmp/*&#39;</span><span class="o">].</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">child</span><span class="o">|</span><span class="nb">puts</span> <span class="n">child</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>获得父目录</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#特定目录的父路径</span>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s2">&quot;..&quot;</span><span class="p">,</span><span class="n">specific_path</span><span class="p">)</span>
</span><span class='line'><span class="c1">#当前目录的父路径</span>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s2">&quot;..&quot;</span><span class="p">,</span><span class="no">Dir</span><span class="o">.</span><span class="n">pwd</span><span class="p">)</span>
</span><span class='line'><span class="c1">#或者</span>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s2">&quot;..&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0061XKRXA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0061XKRXA&linkCode=as2&tag=droidyue-23">代码大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0061XKRXA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B005KGBTQ8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B005KGBTQ8&linkCode=as2&tag=droidyue-23">松本行弘的程序世界</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B005KGBTQ8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B004WHZGZQ/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B004WHZGZQ&linkCode=as2&tag=droidyue-23">黑客与画家:硅谷创业之父Paul Graham文集</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B004WHZGZQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby检测Gem是否安装]]></title>
    <link href="http://droidyue.com/blog/2014/08/19/check-for-ruby-gem-availability/"/>
    <updated>2014-08-19T20:04:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/19/check-for-ruby-gem-availability</id>
    <content type="html"><![CDATA[<p>最近参加七牛的<a href="https://portal.qiniu.com/contest/demo2014" target="_blank">demo大赛</a>,决定使用ruby开发。于是遇到了一些疑问，然后解决了，这里记录一下。</p>

<p>在Ruby中，Gem是一个很常见的东西，其相当于插件，Ruby有很多很棒的gem，避免了我们重复造轮子，我的demo中需要安装gem，但是为了更加实现好一些，先检测gem是否已经安装，如果没有安装，在继续安装，否则不安装。</p>

<!--more-->


<p>于是，怎么在Ruby中检测gem是否安装呢，其实也很简单，直接上代码就可以了。不需太多解释。begin&hellip;rescue&hellip;相当于java中的try catch。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">checkGemAvailable</span><span class="p">(</span><span class="n">gemName</span><span class="p">,</span> <span class="n">versionLimit</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="n">isAvailable</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">begin</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">versionLimit</span> <span class="o">==</span> <span class="kp">nil</span>
</span><span class='line'>            <span class="n">gem</span>  <span class="n">gemName</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="n">gem</span>  <span class="n">gemName</span><span class="p">,</span> <span class="n">versionLimit</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="n">isAvailable</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="no">LoadError</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">isAvailable</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>跑起来看一看</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="n">checkGemAvailable</span><span class="p">(</span><span class="s1">&#39;rack&#39;</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">checkGemAvailable</span><span class="p">(</span><span class="s1">&#39;rack&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;=2&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>我机器的rack信息</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rack <span class="o">(</span>1.5.2<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>所以上面执行的结果为</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">true</span>
</span><span class='line'><span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0061XKRXA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0061XKRXA&linkCode=as2&tag=droidyue-23">代码大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0061XKRXA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B005KGBTQ8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B005KGBTQ8&linkCode=as2&tag=droidyue-23">松本行弘的程序世界</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B005KGBTQ8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B004WHZGZQ/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B004WHZGZQ&linkCode=as2&tag=droidyue-23">黑客与画家:硅谷创业之父Paul Graham文集</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B004WHZGZQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress中嵌入ruby代码如何不被解析]]></title>
    <link href="http://droidyue.com/blog/2014/08/18/how-to-escape-embeded-ruby-block-in-octopress/"/>
    <updated>2014-08-18T07:48:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/18/how-to-escape-embeded-ruby-block-in-octopress</id>
    <content type="html"><![CDATA[<p>用Octopress写博客即将快一年了，感觉自己用的还可以，并且借此熟练使用了Markdown，但是前几天写一篇关于如何在Octopress中集成多说评论的文章的时候，遇到了一个代码高亮的问题，就是如何处理代码块的问题。</p>

<!--more-->


<h2>问题描述</h2>

<p>默认的作为嵌入的ruby代码会被解释然后转成其真实的值对应的HTML代码形式。</p>

<h2>举个例子</h2>

<p><code>Octopress中嵌入ruby代码如何不被解析</code>代表当前页面的标题，默认情况下，如果执行了<code>rake generate &amp;&amp; rake preview</code>，这段代码会被解释成了<strong>Octopress中嵌入ruby代码如何不被解析</strong></p>

<p>但是我们想要的是原样输出，类似这样在代码块中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{{ page.title }}
</span></code></pre></td></tr></table></div></figure>


<h2>如何做到</h2>

<p>如果想避免嵌入的ruby代码块被解析，使用&#123;% raw %&#125;和&#123;% endraw %&#125;来包裹不想被解析的代码块即可。示例如下</p>

<p>&#123;% raw %&#125;{{ page.title }}&#123;% endraw %&#125;
&#123;% raw %&#125;{{ page.url }}&#123;% endraw %&#125;</p>

<h2>更棘手的</h2>

<p>如果出现了<code>Liquid Exception: Unknown tag 'endraw' in _posts</code>这样的问题，
使用<code>&amp;#123;</code>代替<strong>{</strong>,使用<code>&amp;#125;</code>代替<strong>}</strong></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0061XKRXA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0061XKRXA&linkCode=as2&tag=droidyue-23">代码大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0061XKRXA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B005KGBTQ8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B005KGBTQ8&linkCode=as2&tag=droidyue-23">松本行弘的程序世界</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B005KGBTQ8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B004WHZGZQ/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B004WHZGZQ&linkCode=as2&tag=droidyue-23">黑客与画家:硅谷创业之父Paul Graham文集</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B004WHZGZQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby程序区分运行来源]]></title>
    <link href="http://droidyue.com/blog/2014/08/17/how-to-determin-file-load-type-in-ruby/"/>
    <updated>2014-08-17T20:12:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/17/how-to-determin-file-load-type-in-ruby</id>
    <content type="html"><![CDATA[<p>当我们在写模块的时候，或多或少需要直接运行这个文件也可以执行一些方法，但是这样对于当这个模块被require或者include时，显得不好，在ruby里，有没有区分运行来自当前文件，还是被require的目标文件调用呢？</p>

<h2>Python可以</h2>

<p>比如像Python这样</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;from direct running&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h2>Ruby当然也可以</h2>

<p>对于处处为程序员着想，拥有快乐编程理念的Ruby来说当然是可以区别的。其原理就是判断启动文件是否为模块的代码文件。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;called from direct running&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>举个例子</h2>

<p>工具类模块utils.rb</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Utils</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">StringUtils</span>
</span><span class='line'>        <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">test</span>
</span><span class='line'>            <span class="nb">puts</span> <span class="s2">&quot;test method myfile=&quot;</span> <span class="o">+</span> <span class="bp">__FILE__</span> <span class="o">+</span> <span class="s1">&#39;;load from &#39;</span> <span class="o">+</span>  <span class="vg">$0</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;called from direct running&#39;</span>
</span><span class='line'>    <span class="ss">Utils</span><span class="p">:</span><span class="ss">:StringUtils</span><span class="o">.</span><span class="n">test</span><span class="p">()</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>直接运行，结果,if条件成立，执行了输出</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>20:04:37-androidyue~/rubydir/test<span class="nv">$ </span>ruby utils.rb
</span><span class='line'>called from direct running
</span><span class='line'><span class="nb">test </span>method <span class="nv">myfile</span><span class="o">=</span>utils.rb;load from utils.rb
</span></code></pre></td></tr></table></div></figure>


<p>引用Utils的类test.rb</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;./utils&#39;</span>
</span><span class='line'><span class="ss">Utils</span><span class="p">:</span><span class="ss">:StringUtils</span><span class="o">.</span><span class="n">test</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果，引入模块的条件不成立，没有输出<code>called from direct running</code></p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>20:08:07-androidyue~/rubydir/test<span class="nv">$ </span>ruby test.rb
</span><span class='line'><span class="nb">test </span>method <span class="nv">myfile</span><span class="o">=</span>/home/androidyue/rubydir/test/utils.rb;load from test.rb
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0073APSCK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0073APSCK&linkCode=as2&tag=droidyue-23">Ruby元编程</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0073APSCK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00D1HUYVE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00D1HUYVE&linkCode=as2&tag=droidyue-23">代码的未来</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00D1HUYVE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B005KGBTQ8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B005KGBTQ8&linkCode=as2&tag=droidyue-23">大神松本行弘的程序世界</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B005KGBTQ8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[日语て形整理]]></title>
    <link href="http://droidyue.com/blog/2014/08/15/verb-type-te-form-in-nihongo/"/>
    <updated>2014-08-15T23:33:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/15/verb-type-te-form-in-nihongo</id>
    <content type="html"><![CDATA[<p>在日语中，动词是相当重要的一部分，掌握动词的各种形态显得特别重要。当然在这其中，て形以及た形都是比较常用的。这里尝试以最清晰的方式来阐述以下て形主体的变化规则。</p>

<!--more-->


<h2>五段动词</h2>

<h3>促音变</h3>

<ul>
<li>以「う」、「つ」、「る」结尾的五段动词，发生促音变，结尾变成「っ」，再接「て」</li>
<li>買う　&mdash;&ndash;>　買って</li>
<li>持つ　&mdash;&ndash;>　持って</li>
<li>なる　&mdash;&ndash;>　なって</li>
</ul>


<h3>拔音变</h3>

<ul>
<li>以「む」、「ぬ」、「ぶ」结尾的五段动词，发生拔音变，结尾变成「ん」，再接「で」</li>
<li>飲む　&mdash;&ndash;>　飲んで</li>
<li>死ぬ　&mdash;&ndash;>　死んで</li>
<li>飛ぶ　&mdash;&ndash;>　飛んで</li>
</ul>


<h3>い音变</h3>

<ul>
<li>词尾「く」变成「い」，再接「て」，词尾「ぐ」变成「い」，再接「で」</li>
<li>咲く　&mdash;&ndash;>　咲いて</li>
<li>脱ぐ　&mdash;&ndash;>　脱いで</li>
<li>注意，行く音变为<strong>行って</strong>、而不是<del>いいて</del></li>
</ul>


<h3>词尾为す</h3>

<ul>
<li>词尾为「す」的五段动词，将词尾「す」变成「し」，再接「て」</li>
<li>押す　&mdash;&ndash;>　押して</li>
<li>過ごす&mdash;&ndash;>　過ごして</li>
</ul>


<h2>一段动词</h2>

<ul>
<li>去掉词尾的「る」，然后接「て」</li>
<li>食べる　&mdash;&ndash;>　食べて</li>
<li>覚える　&mdash;&ndash;>　覚えて</li>
</ul>


<h2>カ变动词</h2>

<ul>
<li>「来る」变成「来（き）」后接「て」</li>
</ul>


<h2>サ变动词</h2>

<ul>
<li>「（～）する」变为「（～）し」后接「て」</li>
<li>する　　　&mdash;&ndash;>　して</li>
<li>散歩する　&mdash;&ndash;>　散歩して</li>
</ul>


<h2>て形作用</h2>

<h3>动作和状态的进行</h3>

<ul>
<li>公園で 手を引いて 散歩する恋人同士 は よく 見られます。</li>
<li>在公园里，经常可以看到手牵手散步的情侣。</li>
</ul>


<h3>动作或行为的先后</h3>

<ul>
<li>ドアを開けて、外に出ます。</li>
<li>把门打开，然后外出。</li>
</ul>


<h3>表示行为的方法和手段</h3>

<ul>
<li>毎日バスに乗って、会社へ行きます。</li>
<li>每天坐公交车上班</li>
</ul>


<h3>表示原因</h3>

<ul>
<li>良い方法が無くて困ります。</li>
<li>没有想到好办法，所以很苦恼。</li>
</ul>


<h2>た形作用</h2>

<ul>
<li>表示动作的过去时，或者动作的结束</li>
<li>可以在句子中修饰名词，代词等。</li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B008SLHP24/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B008SLHP24&linkCode=as2&tag=droidyue-23">别笑!我是日语学习书</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B008SLHP24" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011685PY/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011685PY&linkCode=as2&tag=droidyue-23">标配：中日交流标准日本语</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011685PY" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00B7EBWDW/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00B7EBWDW&linkCode=as2&tag=droidyue-23">东半球最详细的N1-N5文字词汇详解</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00B7EBWDW" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android UI之自定义Window Title样式]]></title>
    <link href="http://droidyue.com/blog/2014/08/14/style-android-window-title/"/>
    <updated>2014-08-14T20:07:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/14/style-android-window-title</id>
    <content type="html"><![CDATA[<p>Android提供了很多控件便于开发者进行UI相关的程序设计。但是很多时候，默认的一些UI设置不足以满足我们的需求，要么不好看，要么高度不够，亦或者是与应用界面不协调。于是这时候需要通过自定义样式或者自定义控件来实现。</p>

<p>当然，在空间足以满足需求的情况下，通常需要定义样式就可以搞定。本文将简单介绍如何通过自定义样式来实现定义Window Title。</p>

<!--more-->


<h2>先看一下效果图</h2>

<p><img src="http://droidyueimg.qiniudn.com/style_window_title.png" title="Custom Window Title Using Style" ></p>

<h2>逐步实现</h2>

<p>在<strong>res/values/styles.xml</strong>文件中加入下列代码</p>

<figure class='code'><figcaption><span>lineos:false res/values/styles.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> <span class="nt">&lt;style</span> <span class="na">name=</span><span class="s">&quot;MyActivityTheme&quot;</span> <span class="na">parent=</span><span class="s">&quot;android:Theme.Light&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:windowTitleBackgroundStyle&quot;</span><span class="nt">&gt;</span>@style/windowTitleBackgroundStyle<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>      <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:windowTitleStyle&quot;</span><span class="nt">&gt;</span>@style/windowTitleStyle<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- Window Header Height --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:windowTitleSize&quot;</span><span class="nt">&gt;</span>54dp<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c">&lt;!-- Preference Settings Window Title --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;style</span> <span class="na">name=</span><span class="s">&quot;windowTitleBackgroundStyle&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:background&quot;</span><span class="nt">&gt;</span>#CCE8CF<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="nt">&lt;style</span> <span class="na">name=</span><span class="s">&quot;windowTitleStyle&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:textColor&quot;</span><span class="nt">&gt;</span>#FF0000<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>      <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:paddingLeft&quot;</span><span class="nt">&gt;</span>25dp<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>      <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">&quot;android:textSize&quot;</span><span class="nt">&gt;</span>20sp<span class="nt">&lt;/item&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/style&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在Manifest中指定Activity或者Application的主题为上面定义的MyActivityTheme，下面以设置Activity为例。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;activity</span>
</span><span class='line'>    <span class="na">android:name=</span><span class="s">&quot;com.example.stylewindowtitle.MainActivity&quot;</span>
</span><span class='line'>    <span class="na">android:label=</span><span class="s">&quot;@string/app_name&quot;</span>
</span><span class='line'>    <span class="na">android:theme=</span><span class="s">&quot;@style/MyActivityTheme&quot;</span>
</span><span class='line'><span class="nt">&gt;</span>
</span><span class='line'><span class="c">&lt;!--code goes here--&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>延伸阅读</h2>

<p><a href="http://developer.android.com/reference/android/R.attr.html" target="_blank">Android中的属性</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00D73BJWK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00D73BJWK&linkCode=as2&tag=droidyue-23">浪潮之巅</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00D73BJWK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B004Y4QWMS/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B004Y4QWMS&linkCode=as2&tag=droidyue-23">启示录:打造用户喜爱的产品</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B004Y4QWMS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/0307463745/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=0307463745&linkCode=as2&tag=droidyue-23">Rework</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=0307463745" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[超简单生成微博微信应用签名]]></title>
    <link href="http://droidyue.com/blog/2014/08/13/create-fignerprint-for-weibo-or-wechat-in-the-easiest-way/"/>
    <updated>2014-08-13T20:00:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/13/create-fignerprint-for-weibo-or-wechat-in-the-easiest-way</id>
    <content type="html"><![CDATA[<p>集成微博或者微信的SDK时，编辑应用信息要求填写应用签名，官方推荐下载一个apk工具。有那么复杂么，直接终端就可以搞定。</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>19:33 <span class="nv">$ </span>keytool -exportcert -alias your_alias_name -keystore your_keystore_path | openssl md5
</span><span class='line'><span class="c">##然后按照提示输入密码</span>
</span><span class='line'>Enter keystore password:  ********
</span></code></pre></td></tr></table></div></figure>


<p>替换上面的your_alias_name 和your_keystore_path即可。</p>

<p>真心觉得从手机上安装apk，输入包名得到签名，再取复制，再转到计算机上。麻烦！！！！！</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00647RV78/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00647RV78&linkCode=as2&tag=droidyue-23">Google Android SDK开发范例大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00647RV78" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00HECZXKE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00HECZXKE&linkCode=as2&tag=droidyue-23">Android 开发入门与实战</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00HECZXKE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[赶走那些Android工程中得冗余字符串]]></title>
    <link href="http://droidyue.com/blog/2014/08/08/remove-repeated-string-resources-in-android-project/"/>
    <updated>2014-08-08T19:32:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/08/remove-repeated-string-resources-in-android-project</id>
    <content type="html"><![CDATA[<p>Android提供了一套很方便的进行资源（语言）国际化机制，为了更好地支持多语言，很多工程的翻译往往会放到类似crowdin这样的平台上。资源是全了，但是还是会有一些问题。</p>

<!--more-->


<h2>哪些问题</h2>

<p>以下使用一些语言进行举例。其中values为工程默认的资源。</p>

<ul>
<li>某语言的资源和某语言限定区域的资源之间。如<strong>values-fr-rCA</strong>存在于<strong>values-fr</strong>相同的字符串，这种表现最为严重。</li>
<li>某语言的资源和默认的资源之间。<strong>values-fr</strong>存在与<strong>values</strong>相同的字符串，可能原因是由于<strong>values-fr</strong>存在未翻译字符串导致</li>
</ul>


<h2>为什么要去重</h2>

<ul>
<li>洁癖，容不下半点冗余。</li>
</ul>


<h2>解决思路</h2>

<ul>
<li><p>如果<strong>values-fr-rCA</strong>存在于<strong>values-fr</strong>相同的字符串，去除<strong>values-fr-rCA</strong>中的重复字符串，保留<strong>values-fr</strong>。这样可以保证在values-fr-rCA下也可以正确读取到资源。</p></li>
<li><p>如果<strong>values-fr</strong>存在与<strong>values</strong>相同的字符串。如去除<strong>values-fr</strong>中得重复字符串，保留values的条目。</p></li>
</ul>


<h2>Py脚本</h2>

<figure class='code'><figcaption><span>filenos:false removeRepeatedStrings.py</span><a href='https://raw.githubusercontent.com/androidyue/DroidResCleaner/master/removeRepeatedStrings.py'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c"># coding=utf-8</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">os</span> <span class="kn">import</span> <span class="n">listdir</span><span class="p">,</span><span class="n">path</span><span class="p">,</span> <span class="n">system</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">sys</span> <span class="kn">import</span> <span class="n">argv</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">xml.etree.cElementTree</span> <span class="kn">as</span> <span class="nn">ET</span>
</span><span class='line'><span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">xml.etree.ElementTree</span> <span class="kn">as</span> <span class="nn">ET</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">genRegionLangPair</span><span class="p">(</span><span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>    <span class="n">basicLanguage</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="s">&#39;values&#39;</span> <span class="ow">in</span> <span class="n">filePath</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>        <span class="n">hasRegionLimit</span> <span class="o">=</span> <span class="p">(</span><span class="s">&#39;r&#39;</span> <span class="o">==</span> <span class="n">filePath</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">:</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">hasRegionLimit</span><span class="p">):</span>
</span><span class='line'>            <span class="n">basicLanguage</span> <span class="o">=</span> <span class="n">filePath</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="o">-</span><span class="mi">4</span><span class="p">]</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="ow">not</span> <span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">basicLanguage</span><span class="p">))</span> <span class="p">:</span>
</span><span class='line'>                <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>            <span class="n">belongsToEnglish</span> <span class="o">=</span>  <span class="p">(</span><span class="s">&quot;values-en&quot;</span> <span class="ow">in</span> <span class="n">basicLanguage</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">belongsToEnglish</span><span class="p">):</span>
</span><span class='line'>                <span class="c">#Compare with the res/values/strings.xml</span>
</span><span class='line'>                <span class="k">return</span> <span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">basicLanguage</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;/values/strings.xml&#39;</span><span class="p">,</span> <span class="n">filePath</span> <span class="o">+</span> <span class="s">&quot;/strings.xml&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="k">return</span> <span class="p">(</span><span class="n">basicLanguage</span> <span class="o">+</span> <span class="s">&#39;/strings.xml&#39;</span><span class="p">,</span> <span class="n">filePath</span> <span class="o">+</span> <span class="s">&quot;/strings.xml&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">genLangPair</span><span class="p">(</span><span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">shouldGenLanPair</span><span class="p">(</span><span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="ow">not</span> <span class="s">&#39;values&#39;</span> <span class="ow">in</span> <span class="n">filePath</span> <span class="p">):</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="s">&#39;dpi&#39;</span> <span class="ow">in</span> <span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="s">&#39;dimes&#39;</span> <span class="ow">in</span> <span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="s">&#39;large&#39;</span> <span class="ow">in</span> <span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">shouldGenLanPair</span><span class="p">(</span><span class="n">filePath</span><span class="p">)):</span>
</span><span class='line'>        <span class="n">basicLanguage</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">filePath</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;/values/strings.xml&#39;</span>
</span><span class='line'>        <span class="n">targetLanguage</span> <span class="o">=</span> <span class="n">filePath</span> <span class="o">+</span> <span class="s">&#39;/strings.xml&#39;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="ow">not</span> <span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">targetLanguage</span><span class="p">)):</span>
</span><span class='line'>           <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="ow">not</span> <span class="n">path</span><span class="o">.</span><span class="n">samefile</span><span class="p">(</span><span class="n">basicLanguage</span><span class="p">,</span><span class="n">targetLanguage</span><span class="p">))</span> <span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="n">basicLanguage</span><span class="p">,</span> <span class="n">targetLanguage</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">genCompareList</span><span class="p">(</span><span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>    <span class="n">compareLists</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="nb">file</span> <span class="ow">in</span> <span class="n">listdir</span><span class="p">(</span><span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>        <span class="n">regionPair</span> <span class="o">=</span> <span class="n">genRegionLangPair</span><span class="p">(</span><span class="n">filePath</span> <span class="o">+</span> <span class="s">&#39;/&#39;</span> <span class="o">+</span> <span class="nb">file</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="bp">None</span> <span class="o">!=</span> <span class="n">regionPair</span><span class="p">):</span>
</span><span class='line'>            <span class="n">compareLists</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">regionPair</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">languagePair</span> <span class="o">=</span> <span class="n">genLangPair</span><span class="p">(</span><span class="n">filePath</span> <span class="o">+</span> <span class="s">&#39;/&#39;</span> <span class="o">+</span> <span class="nb">file</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="bp">None</span> <span class="o">!=</span> <span class="n">languagePair</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>            <span class="n">compareLists</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">languagePair</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">compareLists</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">getXmlEntries</span><span class="p">(</span><span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>    <span class="n">root</span> <span class="o">=</span> <span class="n">ET</span><span class="o">.</span><span class="n">ElementTree</span><span class="p">(</span><span class="nb">file</span><span class="o">=</span><span class="n">filePath</span><span class="p">)</span><span class="o">.</span><span class="n">getroot</span><span class="p">()</span>
</span><span class='line'>    <span class="n">entries</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">child</span> <span class="ow">in</span> <span class="n">root</span><span class="p">:</span>
</span><span class='line'>        <span class="n">attrib</span> <span class="o">=</span> <span class="n">child</span><span class="o">.</span><span class="n">attrib</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="bp">None</span> <span class="o">!=</span> <span class="n">attrib</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>            <span class="n">entries</span><span class="p">[</span><span class="n">attrib</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;name&#39;</span><span class="p">)]</span> <span class="o">=</span> <span class="n">child</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;xmlEntriesCount&#39;</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">entries</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">entries</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">rewriteRegionFile</span><span class="p">(</span><span class="n">sourceEntries</span><span class="p">,</span> <span class="n">filePath</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="ow">not</span> <span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">filePath</span><span class="p">)):</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="n">ET</span><span class="o">.</span><span class="n">register_namespace</span><span class="p">(</span><span class="s">&#39;xliff&#39;</span><span class="p">,</span><span class="s">&quot;urn:oasis:names:tc:xliff:document:1.2&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">tree</span> <span class="o">=</span> <span class="n">ET</span><span class="o">.</span><span class="n">ElementTree</span><span class="p">(</span><span class="nb">file</span><span class="o">=</span><span class="n">filePath</span><span class="p">)</span>
</span><span class='line'>    <span class="n">root</span> <span class="o">=</span> <span class="n">tree</span><span class="o">.</span><span class="n">getroot</span><span class="p">()</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">root</span>
</span><span class='line'>    <span class="n">totalCount</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">removeCount</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">unRemoveCount</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">print</span> <span class="nb">len</span><span class="p">(</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>    <span class="n">toRemoveList</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">child</span> <span class="ow">in</span> <span class="n">root</span><span class="p">:</span>
</span><span class='line'>        <span class="n">totalCount</span> <span class="o">=</span> <span class="n">totalCount</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>        <span class="n">attrib</span> <span class="o">=</span> <span class="n">child</span><span class="o">.</span><span class="n">attrib</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="bp">None</span> <span class="o">==</span> <span class="n">attrib</span><span class="p">):</span>
</span><span class='line'>            <span class="k">continue</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">childName</span> <span class="o">=</span> <span class="n">attrib</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;name&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">sourceEntries</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">childName</span><span class="p">)</span> <span class="o">==</span> <span class="n">child</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
</span><span class='line'>            <span class="n">removeCount</span> <span class="o">=</span> <span class="n">removeCount</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>            <span class="n">toRemoveList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">child</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">unRemoveCount</span> <span class="o">=</span> <span class="n">unRemoveCount</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>            <span class="k">print</span> <span class="n">childName</span><span class="p">,</span> <span class="n">sourceEntries</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">childName</span><span class="p">),</span> <span class="n">child</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">filePath</span><span class="p">,</span><span class="n">totalCount</span><span class="p">,</span> <span class="n">removeCount</span><span class="p">,</span><span class="n">unRemoveCount</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="n">aItem</span> <span class="ow">in</span> <span class="n">toRemoveList</span><span class="p">:</span>
</span><span class='line'>        <span class="n">root</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">aItem</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">root</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">):</span>
</span><span class='line'>        <span class="n">tree</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">filePath</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;UTF-8&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="n">command</span> <span class="o">=</span> <span class="s">&#39;rm -rf </span><span class="si">%s</span><span class="s">&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">filePath</span><span class="p">))</span>
</span><span class='line'>        <span class="k">print</span> <span class="n">command</span>
</span><span class='line'>        <span class="n">system</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">projectDir</span><span class="p">):</span>
</span><span class='line'>    <span class="n">lists</span> <span class="o">=</span> <span class="n">genCompareList</span><span class="p">(</span><span class="n">projectDir</span> <span class="o">+</span> <span class="s">&quot;/res/&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">lists</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="n">item</span>
</span><span class='line'>        <span class="n">src</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>        <span class="n">dest</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>        <span class="n">rewriteRegionFile</span><span class="p">(</span><span class="n">getXmlEntries</span><span class="p">(</span><span class="n">src</span><span class="p">),</span><span class="n">dest</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">argv</span><span class="p">)</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>        <span class="n">main</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<h2>如何使用</h2>

<figure class='code'><figcaption><span>filenos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python removeRepeatedStrings.py your_android_project_root_dir
</span></code></pre></td></tr></table></div></figure>


<h2>工程参与</h2>

<p><a href="https://github.com/androidyue/DroidResCleaner/blob/master/removeRepeatedStrings.py" target="_blank">RemoveRepeatedStrings.py</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00DZEX5JQ/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00DZEX5JQ&linkCode=as2&tag=droidyue-23">控制你行为的秘密</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00DZEX5JQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0090HBORW/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0090HBORW&linkCode=as2&tag=droidyue-23">好工作是设计出来的</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0090HBORW" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B001F7AEFI/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B001F7AEFI&linkCode=as2&tag=droidyue-23">原来这才是瑞士多功能军刀</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B001F7AEFI" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress中处理加网分享问题]]></title>
    <link href="http://droidyue.com/blog/2014/08/06/fix-conflicts-of-jiathis-in-octopress/"/>
    <updated>2014-08-06T19:44:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/06/fix-conflicts-of-jiathis-in-octopress</id>
    <content type="html"><![CDATA[<p>作为一个以内容为中心的网站，在文章结尾增加社会化分享按钮是一种标配，使用Octopress也不例外，本博客选用了加网的社会化分享按钮。开始的时候一切顺利，但是后来出现了一点小瑕疵，具体的情况如下图</p>

<!--more-->


<p><img src="http://droidyueimg.qiniudn.com/jiathis_flash_issue.png" title="Octoress jiathis Issue" ></p>

<h2>究其原因</h2>

<p>我们来看看出问题的HTML代码。</p>

<figure class='code'><figcaption><span>linenos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;flash-video&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;object</span> <span class="na">classid=</span><span class="s">&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot;</span> <span class="na">width=</span><span class="s">&quot;0&quot;</span> <span class="na">height=</span><span class="s">&quot;0&quot;</span> <span class="na">id=</span><span class="s">&quot;JIATHISSWF&quot;</span> <span class="na">codebase=</span><span class="s">&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;allowScriptAccess&quot;</span> <span class="na">value=</span><span class="s">&quot;always&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;swLiveConnect&quot;</span> <span class="na">value=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;movie&quot;</span> <span class="na">value=</span><span class="s">&quot;http://www.jiathis.com/code/swf/m.swf&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;FlashVars&quot;</span> <span class="na">value=</span><span class="s">&quot;z=a&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;embed</span> <span class="na">name=</span><span class="s">&quot;JIATHISSWF&quot;</span> <span class="na">src=</span><span class="s">&quot;http://www.jiathis.com/code/swf/m.swf&quot;</span> <span class="na">flashvars=</span><span class="s">&quot;z=a&quot;</span> <span class="na">width=</span><span class="s">&quot;0&quot;</span> <span class="na">height=</span><span class="s">&quot;0&quot;</span> <span class="na">allowscriptaccess=</span><span class="s">&quot;always&quot;</span> <span class="na">swliveconnect=</span><span class="s">&quot;true&quot;</span> <span class="na">type=</span><span class="s">&quot;application/x-shockwave-flash&quot;</span> <span class="na">pluginspage=</span><span class="s">&quot;http://www.macromedia.com/go/getflashplayer&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/object&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>压缩css代码之后发现了这样一段代码。</p>

<figure class='code'><figcaption><span>linenos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">article</span> <span class="nt">img</span><span class="o">,</span><span class="nt">article</span> <span class="nt">video</span><span class="o">,</span><span class="nt">article</span> <span class="nc">.flash-video</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">0.3em</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">0.3em</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">ms</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">0.3em</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">o</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">0.3em</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">0.3em</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span><span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="o">.</span><span class="m">15</span><span class="p">)</span> <span class="m">0</span> <span class="m">1px</span> <span class="m">4px</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span><span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="o">.</span><span class="m">15</span><span class="p">)</span> <span class="m">0</span> <span class="m">1px</span> <span class="m">4px</span><span class="p">;</span>
</span><span class='line'>  <span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span><span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="o">,</span><span class="m">0</span><span class="o">.</span><span class="m">15</span><span class="p">)</span> <span class="m">0</span> <span class="m">1px</span> <span class="m">4px</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">box</span><span class="o">-</span><span class="n">sizing</span><span class="o">:</span><span class="k">border</span><span class="o">-</span><span class="n">box</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">box</span><span class="o">-</span><span class="n">sizing</span><span class="o">:</span><span class="k">border</span><span class="o">-</span><span class="n">box</span><span class="p">;</span>
</span><span class='line'>  <span class="n">box</span><span class="o">-</span><span class="n">sizing</span><span class="o">:</span><span class="k">border</span><span class="o">-</span><span class="n">box</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border</span><span class="o">:</span><span class="m">#fff</span> <span class="m">0.5em</span> <span class="k">solid</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这句话<code>border:#fff 0.5em solid</code>就会产生我们所看到的白色的遮挡。</p>

<h2>解决问题</h2>

<p>思路：对id为JIATHISSWF的Object不应用包裹flash-video的div即可。
需要修改的文件为<strong>source/javascripts/octopress.js</strong></p>

<h3>这是原来的代码</h3>

<figure class='code'><figcaption><span>linenos:false source/javascripts/octopress.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">wrapFlashVideos</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;object&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">object</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span> <span class="nx">$</span><span class="p">(</span><span class="nx">object</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;param[name=movie]&#39;</span><span class="p">).</span><span class="nx">length</span> <span class="p">){</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nx">object</span><span class="p">).</span><span class="nx">wrap</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;flash-video&quot;&gt;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;iframe[src*=vimeo],iframe[src*=youtube]&#39;</span><span class="p">).</span><span class="nx">wrap</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;flash-video&quot;&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>这是修改后的代码</h3>

<figure class='code'><figcaption><span>linenos:false source/javascripts/octopress.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">wrapFlashVideos</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;object&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">object</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">object</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">)</span> <span class="o">!=</span> <span class="s2">&quot;JIATHISSWF&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span> <span class="nx">$</span><span class="p">(</span><span class="nx">object</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;param[name=movie]&#39;</span><span class="p">).</span><span class="nx">length</span> <span class="p">){</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="nx">object</span><span class="p">).</span><span class="nx">wrap</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;flash-video&quot;&gt;&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;iframe[src*=vimeo],iframe[src*=youtube]&#39;</span><span class="p">).</span><span class="nx">wrap</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;flash-video&quot;&gt;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>OK，到这里就解决问题了，检查一下看看吧。</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B007VEF454/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B007VEF454&linkCode=as2&tag=droidyue-23">网站优化也是艺术</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B007VEF454" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00G6SNZXY/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00G6SNZXY&linkCode=as2&tag=droidyue-23">就这样设计大型网站</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00G6SNZXY" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00C5KS5AA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00C5KS5AA&linkCode=as2&tag=droidyue-23">极客:改变世界的创新基因</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00C5KS5AA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何从UA分辨出Android设备类型]]></title>
    <link href="http://droidyue.com/blog/2014/08/05/detect-android-device-type-by-sniffing-user-agent/"/>
    <updated>2014-08-05T22:29:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/05/detect-android-device-type-by-sniffing-user-agent</id>
    <content type="html"><![CDATA[<p>随着Android设备增多，不少网站都开始设备Android设备，而Android主流设备类型以手机和平板为主。网站在适配时通过User Agent(用户代理，以下简称UA)又如何区分呢，本文部分内容翻译自Google官方博客<a href="http://googlewebmastercentral.blogspot.hk/2011/03/mo-better-to-also-detect-mobile-user.html" target="_blank">Mo’ better to also detect “mobile” user-agent</a>。</p>

<!--more-->


<h2>一针见血</h2>

<p>标准判断规则：<strong>Mobile Android has &ldquo;Mobile&rdquo; string in the User-Agent header. Tablet Android does not.</strong><br/>
<font color="red">在Android设备UA字符串中，移动设备包含<strong>Mobile</strong>字符串，而平板设备没有。</font></p>

<h2>旁征博引</h2>

<p>在最初的Android设备（即手机）中UA字符串中包含着<strong>android</strong>,所以那时候可以使用检测UA字符串中是否包含（不区分大小写）<strong>android</strong>来判断。</p>

<p>但是后来一个新的Android设备出现了，就是Android平板，不幸的是，Android平板上的UA也包含android，而对于平板上更适合展示桌面（PC）的网页版式。而如果仅仅以上述的判断规则，会给平板用户带来不是很好的用户体验。</p>

<p>鉴于上述问题，Google的Android工程师提出了一个解决方案。对于引导到移动版式的设备，即手机，需要从UA字符串中同时判断是否包含<strong>mobile</strong>和<strong>android</strong>这两个单词。我们先看一些示例。</p>

<p>比如这个UA字符串</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Mozilla/5.0 <span class="o">(</span>Linux; U; Android 3.0; en-us; Xoom Build/HRI39<span class="o">)</span> AppleWebKit/534.13 <span class="o">(</span>KHTML, like Gecko<span class="o">)</span> Version/4.0 Safari/534.13
</span></code></pre></td></tr></table></div></figure>


<p>因为这个UA字符串中没有mobile，所以需要把它引导到桌面版式（或者一个为Android大屏设备定制的版式）。从这个UA字符串中我们可以了解到，它来自一个大屏设置，即摩托罗拉的XOOM平板。</p>

<p>我们再看另一个UA字符串</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Mozilla/5.0 <span class="o">(</span>Linux; U; Android 2.2.1; en-us; Nexus One Build/FRG83<span class="o">)</span> AppleWebKit/533.1 <span class="o">(</span>KHTML, like Gecko<span class="o">)</span> Version/4.0 Mobile Safari/533.1
</span></code></pre></td></tr></table></div></figure>


<p>包含了mobile和android,所以把这台Nexus One手机导向到移动版式吧。</p>

<p>相信通过上面两个UA字符串对比，你发现了UA的一些共性了吧，我们看看这些共性吧。
<img src="http://git.oschina.net/androidyue/blogres/raw/master/android-user-agent.jpeg" title="Android User Agent commonalities" ></p>

<h2>最后</h2>

<p>所以，当你依据检测UA来判断Android手机设备，请同时检查android和mobile两个字符串。</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B007OQQVMY/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B007OQQVMY&linkCode=as2&tag=droidyue-23">这才是JavaScript的高级程序设计</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B007OQQVMY" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00ENZ67VE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ENZ67VE&linkCode=as2&tag=droidyue-23">极客用什么高科技的钟表</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ENZ67VE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00ASIN7G8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ASIN7G8&linkCode=as2&tag=droidyue-23">这就叫精通Android？</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ASIN7G8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定义支持读取XML属性的View]]></title>
    <link href="http://droidyue.com/blog/2014/08/05/create-your-view-with-supporting-xml-attribute/"/>
    <updated>2014-08-05T19:12:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/05/create-your-view-with-supporting-xml-attribute</id>
    <content type="html"><![CDATA[<p>在Android中，添加一个View很简单，简单的你可以简简单单地使用xml和一部分简单的java代码就可以搞定。
比如这样</p>

<!--more-->


<figure class='code'><figcaption><span>linenos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;RelativeLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:paddingBottom=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingLeft=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingRight=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingTop=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>    <span class="na">tools:context=</span><span class="s">&quot;.MainActivity&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;@string/hello_world&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/RelativeLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Android Framework提供了这种便捷的xml布局方式，而且还可以支持从XML节点读取属性值。那么如果如何自定义View并且支持读取XML属性值呢。<br/>
下面开始尝试以一种很简单容易理解的方式介绍一下。</p>

<h2>自定义View代码实现</h2>

<p>比如我们自定义一个View，这个View继承自TextView，名称为ExTextView。这里我们创建简单的构造方法，仅仅包含Context和AttributeSet参数。这样我们就可以在布局编辑器中创建或者修改ExTextView的实例。</p>

<figure class='code'><figcaption><span>linenos:false ExTextView.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">customviewwithxml</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.AttributeSet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TextView</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ExTextView</span> <span class="kd">extends</span> <span class="n">TextView</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">ExTextView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>定义XML属性</h3>

<p>在使用系统内置的View时，我们可以通过在XML布局文件中指定属性来控制View的样式和行为。一个优秀的View应该可以通过XML来添加并且设置样式。所以，要让你自定义的View做到上述功能，你需要做。</p>

<ul>
<li>通过<code>&lt;declare-styleable&gt;</code> 来定义自定义View的属性集。</li>
<li>可以在布局文件中指定View的属性值。</li>
<li>在程序运行时可以检索读取属性值。</li>
<li>为View应用读取出来的属性值。</li>
</ul>


<p>现在就为你的View添加<code>&lt;declare-styleable&gt;</code>来定义属性集哈。 其存放文件为 <strong>res/values/attrs.xml</strong>。以下为几个简单实例。</p>

<figure class='code'><figcaption><span>linenos:false attrs.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;resources&gt;</span>
</span><span class='line'>  <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;enableOnPad&quot;</span> <span class="na">format=</span><span class="s">&quot;boolean&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;supportDeviceType&quot;</span> <span class="na">format=</span><span class="s">&quot;reference&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;declare-styleable</span> <span class="na">name=</span><span class="s">&quot;ExTextView&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;enableOnPad&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;attr</span> <span class="na">name=</span><span class="s">&quot;supportDeviceType&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/declare-styleable&gt;</span>
</span><span class='line'><span class="nt">&lt;/resources&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>注意</h3>

<ul>
<li><code>&lt;declare-styleable name="ExTextView"&gt;</code>中ExTextView为样式实体的名字，例样式实体的名字没有特殊的限制，但是通常约定为View的类名。</li>
</ul>


<h2>布局中使用自定义View</h2>

<p>一旦我们定义了属性值，我们可以想系统内置的属性值一样使用，唯一不同的是，自定义的属性值和系统提供的属于不同的名字空间。系统内置的属性归属于名字空间<code>http://schemas.android.com/apk/res/android</code> 而自定义的属性归属于名字空间<strong><code>http://schemas.android.com/apk/res/[your package name]</code></strong></p>

<figure class='code'><figcaption><span>linenos:false activity_main.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;RelativeLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">xmlns:droidyue=</span><span class="s">&quot;http://schemas.android.com/apk/res/com.example.customviewwithxml&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:paddingBottom=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingLeft=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingRight=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>    <span class="na">android:paddingTop=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>    <span class="na">tools:context=</span><span class="s">&quot;.MainActivity&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;TextView</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;@string/hello_world&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;com.example.customviewwithxml.ExTextView</span>
</span><span class='line'>      <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="na">android:text=</span><span class="s">&quot;Hello World&quot;</span>
</span><span class='line'>      <span class="na">droidyue:supportDeviceType=</span><span class="s">&quot;@array/support_device_types&quot;</span>   
</span><span class='line'>      <span class="na">droidyue:enableOnPad=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="nt">/&gt;</span>
</span><span class='line'>  
</span><span class='line'><span class="nt">&lt;/RelativeLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>读取XML属性值</h2>

<p>当View从XML中被创建时，其所有标签的属性值都是以AttributeSet的对象从资源包中获取并传递。</p>

<h3>为什么不直接读取AttributeSet，而是obtainStyledAttributes</h3>

<ul>
<li>属性值中得资源引用不能解析</li>
<li>样式不会应用到View</li>
</ul>


<figure class='code'><figcaption><span>linenos:false  ExTextView.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="nf">ExTextView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class='line'>      <span class="n">TypedArray</span> <span class="n">a</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getTheme</span><span class="o">().</span><span class="na">obtainStyledAttributes</span><span class="o">(</span>
</span><span class='line'>              <span class="n">attrs</span><span class="o">,</span><span class="n">R</span><span class="o">.</span><span class="na">styleable</span><span class="o">.</span><span class="na">ExTextView</span><span class="o">,</span>
</span><span class='line'>              <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">supportDevicesResId</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="na">getResourceId</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">styleable</span><span class="o">.</span><span class="na">ExTextView_supportDeviceType</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">supportDeviceTypes</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getStringArray</span><span class="o">(</span><span class="n">supportDevicesResId</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">enableOnPad</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="na">getBoolean</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">styleable</span><span class="o">.</span><span class="na">ExTextView_enableOnPad</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">VIEW_LOG_TAG</span><span class="o">,</span> <span class="s">&quot;getAtrributeFromXml supportDeviceType=&quot;</span> <span class="o">+</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">supportDeviceTypes</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;;enableOnPad=&quot;</span> <span class="o">+</span> <span class="n">enableOnPad</span><span class="o">);</span>
</span><span class='line'>      <span class="n">a</span><span class="o">.</span><span class="na">recycle</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意，TypedArray实例为公用资源，再次使用之前需要回收（recycle）。</p>

<h2>延伸阅读</h2>

<p><a href="http://developer.android.com/training/custom-views/create-view.html" target="_blank">Create View</a></p>

<h2>源码下载</h2>

<p><a href="http://pan.baidu.com/s/1c0gXfw8" target="_blank">百度云</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00ASIN7G8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ASIN7G8&linkCode=as2&tag=droidyue-23">如何才能精通Android</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ASIN7G8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B009OLU8EE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B009OLU8EE&linkCode=as2&tag=droidyue-23">你能看懂Android系统源代码么</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B009OLU8EE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00LVHTI9U/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00LVHTI9U&linkCode=as2&tag=droidyue-23">第一行代码:Android</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00LVHTI9U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
</feed>

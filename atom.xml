<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[技术小黑屋]]></title>
  <link href="https://droidyue.com/atom.xml" rel="self"/>
  <link href="https://droidyue.com/"/>
  <updated>2025-10-16T07:06:30+08:00</updated>
  <id>https://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[一看就会，为 AI 编程 Agent 撸一个 MCP 服务]]></title>
    <link href="https://droidyue.com/blog/2025/10/15/kan-jiu-hui-wei-ai-bian-cheng-agent-lu-ge-mcp-fu-wu/"/>
    <updated>2025-10-15T14:30:00+08:00</updated>
    <id>https://droidyue.com/blog/2025/10/15/kan-jiu-hui-wei-ai-bian-cheng-agent-lu-ge-mcp-fu-wu</id>
    <content type="html"><![CDATA[<p>通过 MCP (Model Context Protocol) 让 AI 助手直接调用 ADB 命令操作 Android 设备，实现日志查看、应用安装、性能分析等自动化操作。</p>

<!--more-->

<h2 id="mcp-协议说明">MCP 协议说明</h2>

<p>MCP 是 Anthropic 推出的开放协议，用于连接 AI 助手与外部工具。MCP Server 将特定工具包装成标准化接口，让 AI 能够理解和调用。</p>

<p>架构如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Claude Desktop/API → MCP Server → ADB Commands → Android Device</span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<h2 id="实现步骤">实现步骤</h2>

<h3 id="初始化项目">初始化项目</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="nb">mkdir </span>adb_mcp
</span><span class="line"><span class="nb">cd </span>adb_mcp
</span><span class="line">npm init <span class="nt">-y</span>
</span><span class="line">npm <span class="nb">install</span> @modelcontextprotocol/sdk</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="配置-packagejson">配置 package.json</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span><span class="w">
</span><span class="line">  </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"adb-mcp-server"</span><span class="p">,</span><span class="w">
</span><span class="line">  </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1.0.0"</span><span class="p">,</span><span class="w">
</span><span class="line">  </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"MCP Server for Android Debug Bridge (ADB) operations"</span><span class="p">,</span><span class="w">
</span><span class="line">  </span><span class="nl">"main"</span><span class="p">:</span><span class="w"> </span><span class="s2">"adb-mcp-server.js"</span><span class="p">,</span><span class="w">
</span><span class="line">  </span><span class="nl">"bin"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="line">    </span><span class="nl">"adb-mcp-server"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./adb-mcp-server.js"</span><span class="w">
</span><span class="line">  </span><span class="p">},</span><span class="w">
</span><span class="line">  </span><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="line">    </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"node adb-mcp-server.js"</span><span class="w">
</span><span class="line">  </span><span class="p">},</span><span class="w">
</span><span class="line">  </span><span class="nl">"keywords"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"mcp"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adb"</span><span class="p">,</span><span class="w"> </span><span class="s2">"android"</span><span class="p">,</span><span class="w"> </span><span class="s2">"debug"</span><span class="p">],</span><span class="w">
</span><span class="line">  </span><span class="nl">"author"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
</span><span class="line">  </span><span class="nl">"license"</span><span class="p">:</span><span class="w"> </span><span class="s2">"MIT"</span><span class="p">,</span><span class="w">
</span><span class="line">  </span><span class="nl">"dependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="line">    </span><span class="nl">"@modelcontextprotocol/sdk"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^1.0.0"</span><span class="w">
</span><span class="line">  </span><span class="p">}</span><span class="w">
</span><span class="line"></span><span class="p">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="核心代码实现">核心代码实现</h3>

<p>创建 <code class="language-plaintext highlighter-rouge">adb-mcp-server.js</code>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
<span class="line-number">154</span>
<span class="line-number">155</span>
<span class="line-number">156</span>
<span class="line-number">157</span>
<span class="line-number">158</span>
<span class="line-number">159</span>
<span class="line-number">160</span>
<span class="line-number">161</span>
<span class="line-number">162</span>
<span class="line-number">163</span>
<span class="line-number">164</span>
<span class="line-number">165</span>
<span class="line-number">166</span>
<span class="line-number">167</span>
<span class="line-number">168</span>
<span class="line-number">169</span>
<span class="line-number">170</span>
<span class="line-number">171</span>
<span class="line-number">172</span>
<span class="line-number">173</span>
<span class="line-number">174</span>
<span class="line-number">175</span>
<span class="line-number">176</span>
<span class="line-number">177</span>
<span class="line-number">178</span>
<span class="line-number">179</span>
<span class="line-number">180</span>
<span class="line-number">181</span>
<span class="line-number">182</span>
<span class="line-number">183</span>
<span class="line-number">184</span>
<span class="line-number">185</span>
<span class="line-number">186</span>
<span class="line-number">187</span>
<span class="line-number">188</span>
<span class="line-number">189</span>
<span class="line-number">190</span>
<span class="line-number">191</span>
<span class="line-number">192</span>
<span class="line-number">193</span>
<span class="line-number">194</span>
<span class="line-number">195</span>
<span class="line-number">196</span>
<span class="line-number">197</span>
<span class="line-number">198</span>
<span class="line-number">199</span>
<span class="line-number">200</span>
<span class="line-number">201</span>
<span class="line-number">202</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="cp">#!/usr/bin/env node
</span><span class="line"></span><span class="kd">const</span> <span class="p">{</span> <span class="nx">Server</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">@modelcontextprotocol/sdk/server/index.js</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line"><span class="kd">const</span> <span class="p">{</span> <span class="nx">StdioServerTransport</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">@modelcontextprotocol/sdk/server/stdio.js</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line"><span class="kd">const</span> <span class="p">{</span> <span class="nx">CallToolRequestSchema</span><span class="p">,</span> <span class="nx">ListToolsRequestSchema</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">@modelcontextprotocol/sdk/types.js</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line"><span class="kd">const</span> <span class="p">{</span> <span class="nx">exec</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">child_process</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line"><span class="kd">const</span> <span class="p">{</span> <span class="nx">promisify</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">util</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="kd">const</span> <span class="nx">execPromise</span> <span class="o">=</span> <span class="nx">promisify</span><span class="p">(</span><span class="nx">exec</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="c1">// 创建 MCP Server 实例</span>
</span><span class="line"><span class="kd">const</span> <span class="nx">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Server</span><span class="p">(</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-server</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">version</span><span class="p">:</span> <span class="dl">'</span><span class="s1">1.0.0</span><span class="dl">'</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="na">capabilities</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="na">tools</span><span class="p">:</span> <span class="p">{}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="c1">// 定义工具列表</span>
</span><span class="line"><span class="kd">const</span> <span class="nx">tools</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-logcat</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Get Android device logs</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">inputSchema</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">      <span class="na">properties</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="na">lines</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">          <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">number</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">          <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Number of log lines to retrieve</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">          <span class="na">default</span><span class="p">:</span> <span class="mi">100</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-devices</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">List connected Android devices</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">inputSchema</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">      <span class="na">properties</span><span class="p">:</span> <span class="p">{}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-install</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Install APK on connected device</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">inputSchema</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">      <span class="na">properties</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="na">apkPath</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">          <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">          <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Path to the APK file to install</span><span class="dl">'</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">      <span class="p">},</span>
</span><span class="line">      <span class="na">required</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">apkPath</span><span class="dl">'</span><span class="p">]</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-app-info</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Get app package information</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">inputSchema</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">      <span class="na">properties</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="na">packageName</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">          <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">          <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Android package name (e.g., com.example.app)</span><span class="dl">'</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">      <span class="p">},</span>
</span><span class="line">      <span class="na">required</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">packageName</span><span class="dl">'</span><span class="p">]</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-meminfo</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Get app memory usage information</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">inputSchema</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">      <span class="na">properties</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="na">packageName</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">          <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">          <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Android package name (e.g., com.example.app)</span><span class="dl">'</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">      <span class="p">},</span>
</span><span class="line">      <span class="na">required</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">packageName</span><span class="dl">'</span><span class="p">]</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-clear-data</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Clear app data and cache</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="na">inputSchema</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">      <span class="na">properties</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="na">packageName</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">          <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">          <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Android package name (e.g., com.example.app)</span><span class="dl">'</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">      <span class="p">},</span>
</span><span class="line">      <span class="na">required</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">packageName</span><span class="dl">'</span><span class="p">]</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">];</span>
</span><span class="line">
</span><span class="line"><span class="c1">// 处理工具列表请求</span>
</span><span class="line"><span class="nx">server</span><span class="p">.</span><span class="nx">setRequestHandler</span><span class="p">(</span><span class="nx">ListToolsRequestSchema</span><span class="p">,</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="k">return</span> <span class="p">{</span> <span class="nx">tools</span> <span class="p">};</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="c1">// 处理工具执行请求</span>
</span><span class="line"><span class="nx">server</span><span class="p">.</span><span class="nx">setRequestHandler</span><span class="p">(</span><span class="nx">CallToolRequestSchema</span><span class="p">,</span> <span class="k">async</span> <span class="p">(</span><span class="nx">request</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">const</span> <span class="p">{</span> <span class="nx">name</span><span class="p">,</span> <span class="na">arguments</span><span class="p">:</span> <span class="nx">args</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">request</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">  <span class="k">try</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">let</span> <span class="nx">result</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">    <span class="k">switch</span> <span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">      <span class="k">case</span> <span class="dl">'</span><span class="s1">adb-logcat</span><span class="dl">'</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="kd">const</span> <span class="nx">lines</span> <span class="o">=</span> <span class="nx">args</span><span class="p">.</span><span class="nx">lines</span> <span class="o">||</span> <span class="mi">100</span><span class="p">;</span>
</span><span class="line">        <span class="kd">const</span> <span class="p">{</span> <span class="nx">stdout</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">execPromise</span><span class="p">(</span><span class="s2">`adb logcat -d -t </span><span class="p">${</span><span class="nx">lines</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
</span><span class="line">        <span class="nx">result</span> <span class="o">=</span> <span class="nx">stdout</span><span class="p">;</span>
</span><span class="line">        <span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">
</span><span class="line">      <span class="k">case</span> <span class="dl">'</span><span class="s1">adb-devices</span><span class="dl">'</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="kd">const</span> <span class="p">{</span> <span class="nx">stdout</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">execPromise</span><span class="p">(</span><span class="dl">'</span><span class="s1">adb devices -l</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line">        <span class="nx">result</span> <span class="o">=</span> <span class="nx">stdout</span><span class="p">;</span>
</span><span class="line">        <span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">
</span><span class="line">      <span class="k">case</span> <span class="dl">'</span><span class="s1">adb-install</span><span class="dl">'</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">args</span><span class="p">.</span><span class="nx">apkPath</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">          <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="dl">'</span><span class="s1">apkPath is required</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">        <span class="kd">const</span> <span class="p">{</span> <span class="nx">stdout</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">execPromise</span><span class="p">(</span><span class="s2">`adb install -r "</span><span class="p">${</span><span class="nx">args</span><span class="p">.</span><span class="nx">apkPath</span><span class="p">}</span><span class="s2">"`</span><span class="p">);</span>
</span><span class="line">        <span class="nx">result</span> <span class="o">=</span> <span class="nx">stdout</span><span class="p">;</span>
</span><span class="line">        <span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">
</span><span class="line">      <span class="k">case</span> <span class="dl">'</span><span class="s1">adb-app-info</span><span class="dl">'</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">args</span><span class="p">.</span><span class="nx">packageName</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">          <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="dl">'</span><span class="s1">packageName is required</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">        <span class="kd">const</span> <span class="p">{</span> <span class="nx">stdout</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">execPromise</span><span class="p">(</span><span class="s2">`adb shell dumpsys package </span><span class="p">${</span><span class="nx">args</span><span class="p">.</span><span class="nx">packageName</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
</span><span class="line">        <span class="nx">result</span> <span class="o">=</span> <span class="nx">stdout</span><span class="p">;</span>
</span><span class="line">        <span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">
</span><span class="line">      <span class="k">case</span> <span class="dl">'</span><span class="s1">adb-meminfo</span><span class="dl">'</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">args</span><span class="p">.</span><span class="nx">packageName</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">          <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="dl">'</span><span class="s1">packageName is required</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">        <span class="kd">const</span> <span class="p">{</span> <span class="nx">stdout</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">execPromise</span><span class="p">(</span><span class="s2">`adb shell dumpsys meminfo </span><span class="p">${</span><span class="nx">args</span><span class="p">.</span><span class="nx">packageName</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
</span><span class="line">        <span class="nx">result</span> <span class="o">=</span> <span class="nx">stdout</span><span class="p">;</span>
</span><span class="line">        <span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">
</span><span class="line">      <span class="k">case</span> <span class="dl">'</span><span class="s1">adb-clear-data</span><span class="dl">'</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">args</span><span class="p">.</span><span class="nx">packageName</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">          <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="dl">'</span><span class="s1">packageName is required</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">        <span class="kd">const</span> <span class="p">{</span> <span class="nx">stdout</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">execPromise</span><span class="p">(</span><span class="s2">`adb shell pm clear </span><span class="p">${</span><span class="nx">args</span><span class="p">.</span><span class="nx">packageName</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
</span><span class="line">        <span class="nx">result</span> <span class="o">=</span> <span class="nx">stdout</span><span class="p">;</span>
</span><span class="line">        <span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">
</span><span class="line">      <span class="nl">default</span><span class="p">:</span>
</span><span class="line">        <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">`Unknown tool: </span><span class="p">${</span><span class="nx">name</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="k">return</span> <span class="p">{</span>
</span><span class="line">      <span class="na">content</span><span class="p">:</span> <span class="p">[</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">          <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">          <span class="na">text</span><span class="p">:</span> <span class="nx">result</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">      <span class="p">]</span>
</span><span class="line">    <span class="p">};</span>
</span><span class="line">  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="p">{</span>
</span><span class="line">      <span class="na">content</span><span class="p">:</span> <span class="p">[</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">          <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">          <span class="na">text</span><span class="p">:</span> <span class="s2">`Error executing </span><span class="p">${</span><span class="nx">name</span><span class="p">}</span><span class="s2">: </span><span class="p">${</span><span class="nx">error</span><span class="p">.</span><span class="nx">message</span><span class="p">}</span><span class="s2">`</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">      <span class="p">],</span>
</span><span class="line">      <span class="na">isError</span><span class="p">:</span> <span class="kc">true</span>
</span><span class="line">    <span class="p">};</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="c1">// 启动服务器</span>
</span><span class="line"><span class="k">async</span> <span class="kd">function</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">const</span> <span class="nx">transport</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">StdioServerTransport</span><span class="p">();</span>
</span><span class="line">  <span class="k">await</span> <span class="nx">server</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">transport</span><span class="p">);</span>
</span><span class="line">  <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">ADB MCP Server running on stdio</span><span class="dl">'</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nx">main</span><span class="p">().</span><span class="k">catch</span><span class="p">((</span><span class="nx">error</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Server error:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
</span><span class="line">  <span class="nx">process</span><span class="p">.</span><span class="nx">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>赋予执行权限：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="nb">chmod</span> +x adb-mcp-server.js</span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<h2 id="关键实现说明">关键实现说明</h2>

<h3 id="server-初始化">Server 初始化</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">const</span> <span class="nx">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Server</span><span class="p">(</span>
</span><span class="line">  <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-server</span><span class="dl">'</span><span class="p">,</span> <span class="na">version</span><span class="p">:</span> <span class="dl">'</span><span class="s1">1.0.0</span><span class="dl">'</span> <span class="p">},</span>
</span><span class="line">  <span class="p">{</span> <span class="na">capabilities</span><span class="p">:</span> <span class="p">{</span> <span class="na">tools</span><span class="p">:</span> <span class="p">{}</span> <span class="p">}</span> <span class="p">}</span>
</span><span class="line"><span class="p">);</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>声明服务器名称、版本和支持的能力类型。</p>

<h3 id="工具定义">工具定义</h3>

<p>每个工具包含三个部分：</p>
<ul>
  <li><strong>name</strong>: 唯一标识符</li>
  <li><strong>description</strong>: 功能描述，AI 根据此判断调用时机</li>
  <li><strong>inputSchema</strong>: JSON Schema 格式的参数定义</li>
</ul>

<p>示例：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nl">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-install</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">  <span class="nx">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Install APK on connected device</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">  <span class="nx">inputSchema</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">    <span class="nl">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="nx">properties</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="nl">apkPath</span><span class="p">:</span> <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">,</span> <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Path to the APK file</span><span class="dl">'</span> <span class="p">}</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">    <span class="nx">required</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">apkPath</span><span class="dl">'</span><span class="p">]</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="请求处理">请求处理</h3>

<p>MCP 定义两种请求类型：</p>

<p><strong>ListToolsRequest</strong> - 列出所有可用工具：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">server</span><span class="p">.</span><span class="nx">setRequestHandler</span><span class="p">(</span><span class="nx">ListToolsRequestSchema</span><span class="p">,</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="k">return</span> <span class="p">{</span> <span class="nx">tools</span> <span class="p">};</span>
</span><span class="line"><span class="p">});</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>CallToolRequest</strong> - 执行具体工具：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">server</span><span class="p">.</span><span class="nx">setRequestHandler</span><span class="p">(</span><span class="nx">CallToolRequestSchema</span><span class="p">,</span> <span class="k">async</span> <span class="p">(</span><span class="nx">request</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">const</span> <span class="p">{</span> <span class="nx">name</span><span class="p">,</span> <span class="na">arguments</span><span class="p">:</span> <span class="nx">args</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">request</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
</span><span class="line">  <span class="c1">// 根据 name 执行相应 ADB 命令</span>
</span><span class="line"><span class="p">});</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="命令执行">命令执行</h3>

<p>使用 <code class="language-plaintext highlighter-rouge">child_process</code> 执行 ADB 命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">const</span> <span class="p">{</span> <span class="nx">stdout</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">execPromise</span><span class="p">(</span><span class="s2">`adb devices -l`</span><span class="p">);</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<h2 id="配置方式">配置方式</h2>

<h3 id="claude-desktop-配置">Claude Desktop 配置</h3>

<p>编辑 <code class="language-plaintext highlighter-rouge">~/Library/Application Support/Claude/claude_desktop_config.json</code>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span><span class="w">
</span><span class="line">  </span><span class="nl">"mcpServers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="line">    </span><span class="nl">"adb"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="line">      </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"node"</span><span class="p">,</span><span class="w">
</span><span class="line">      </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"/Users/你的用户名/Documents/self_host/adb_mcp/adb-mcp-server.js"</span><span class="p">]</span><span class="w">
</span><span class="line">    </span><span class="p">}</span><span class="w">
</span><span class="line">  </span><span class="p">}</span><span class="w">
</span><span class="line"></span><span class="p">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>配置完成后重启 Claude Desktop。</p>

<h3 id="claude-code-cli-配置">Claude Code CLI 配置</h3>

<p>使用 Claude Code 命令行工具添加 MCP Server：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">claude <span class="nt">-p</span> mcp add adb node /Users/xxxx/Documents/sxxx/adb_mcp/adb-mcp-server.js</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>参数说明：</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">adb</code>: MCP Server 名称</li>
  <li><code class="language-plaintext highlighter-rouge">node</code>: 运行命令</li>
  <li>最后是 <code class="language-plaintext highlighter-rouge">adb-mcp-server.js</code> 的完整路径</li>
</ul>

<h3 id="gemini-cli-配置">Gemini CLI 配置</h3>

<p>编辑 Gemini CLI 配置文件 <code class="language-plaintext highlighter-rouge">~/.gemini/mcp_config.json</code>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span><span class="w">
</span><span class="line">  </span><span class="nl">"mcpServers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="line">    </span><span class="nl">"adb"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="line">      </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"node"</span><span class="p">,</span><span class="w">
</span><span class="line">      </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"/Users/xxxx/Documents/sxxx/adb_mcp/adb-mcp-server.js"</span><span class="p">]</span><span class="w">
</span><span class="line">    </span><span class="p">}</span><span class="w">
</span><span class="line">  </span><span class="p">}</span><span class="w">
</span><span class="line"></span><span class="p">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>注</strong>：Gemini CLI 的 MCP 配置可能因版本而异，建议以官方文档为准。</p>

<h3 id="copilot-cli-配置">Copilot CLI 配置</h3>

<p>编辑 Copilot CLI 配置文件 <code class="language-plaintext highlighter-rouge">~/.github-copilot/mcp_servers.json</code>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span><span class="w">
</span><span class="line">  </span><span class="nl">"adb"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="line">    </span><span class="nl">"command"</span><span class="p">:</span><span class="w"> </span><span class="s2">"node"</span><span class="p">,</span><span class="w">
</span><span class="line">    </span><span class="nl">"args"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"/Users/xxxx/Documents/sxxx/adb_mcp/adb-mcp-server.js"</span><span class="p">]</span><span class="w">
</span><span class="line">  </span><span class="p">}</span><span class="w">
</span><span class="line"></span><span class="p">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>注</strong>：Copilot CLI 的 MCP 配置可能因版本而异，建议以官方文档为准。</p>

<hr />

<h2 id="使用示例">使用示例</h2>

<p>在 Claude 中直接使用自然语言：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="err">查看连接的</span><span class="w"> </span><span class="err">Android</span><span class="w"> </span><span class="err">设备</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="err">获取最近</span><span class="w"> </span><span class="mi">50</span><span class="w"> </span><span class="err">行</span><span class="w"> </span><span class="err">logcat</span><span class="w"> </span><span class="err">日志</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="err">查看</span><span class="w"> </span><span class="err">com.android.chrome</span><span class="w"> </span><span class="err">的内存使用情况</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="err">清除</span><span class="w"> </span><span class="err">com.example.app</span><span class="w"> </span><span class="err">的数据</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Claude 会自动调用对应的 MCP 工具执行操作。</p>

<hr />

<h2 id="应用场景">应用场景</h2>

<h3 id="日志分析">日志分析</h3>

<p>传统方式：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">adb logcat <span class="nt">-d</span> <span class="o">&gt;</span> log.txt
</span><span class="line"><span class="c"># 手动搜索错误信息</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>使用 MCP：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">获取最近的 logcat 日志，找出所有 ERROR 级别信息</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Claude 自动执行并分析结果。</p>

<h3 id="性能监控">性能监控</h3>

<p>传统方式：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">adb shell dumpsys meminfo com.example.app
</span><span class="line"><span class="c"># 手动分析输出数据</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>使用 MCP：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">查看 com.example.app 的内存使用，分析是否有内存泄漏</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="批量操作">批量操作</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">列出所有连接的设备，在每个设备上安装 /path/to/app.apk</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Claude 自动处理设备列表和批量安装。</p>

<hr />

<h2 id="扩展功能">扩展功能</h2>

<h3 id="添加截图">添加截图</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nl">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-screenshot</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">  <span class="nx">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Take a screenshot</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">  <span class="nx">inputSchema</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">    <span class="nl">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="nx">properties</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="nl">savePath</span><span class="p">:</span> <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">,</span> <span class="na">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Path to save screenshot</span><span class="dl">'</span> <span class="p">}</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">    <span class="nx">required</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">savePath</span><span class="dl">'</span><span class="p">]</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行命令：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="k">await</span> <span class="nx">execPromise</span><span class="p">(</span><span class="s2">`adb exec-out screencap -p &gt; </span><span class="p">${</span><span class="nx">args</span><span class="p">.</span><span class="nx">savePath</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="添加性能监控">添加性能监控</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nl">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-top</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">  <span class="nx">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Get CPU usage</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">  <span class="nx">inputSchema</span><span class="p">:</span> <span class="p">{</span> <span class="nl">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span> <span class="nx">properties</span><span class="p">:</span> <span class="p">{}</span> <span class="p">}</span>
</span><span class="line"><span class="p">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="添加文件传输">添加文件传输</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nl">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">adb-push</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">  <span class="nx">description</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Push file to device</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">  <span class="nx">inputSchema</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">    <span class="nl">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">,</span>
</span><span class="line">    <span class="nx">properties</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">      <span class="nl">localPath</span><span class="p">:</span> <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span> <span class="p">},</span>
</span><span class="line">      <span class="nx">remotePath</span><span class="p">:</span> <span class="p">{</span> <span class="nl">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span> <span class="p">}</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">    <span class="nx">required</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">localPath</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">remotePath</span><span class="dl">'</span><span class="p">]</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<h2 id="注意事项">注意事项</h2>

<h3 id="权限检查">权限检查</h3>

<p>确保 ADB 已添加到系统 PATH：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">which adb
</span><span class="line">adb version</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="设备授权">设备授权</h3>

<p>使用前确认设备已连接并授权：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">adb devices</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果显示 <code class="language-plaintext highlighter-rouge">unauthorized</code>，需在设备上确认 USB 调试授权。</p>

<h3 id="错误处理">错误处理</h3>

<p>生产环境应添加：</p>
<ul>
  <li>详细日志记录</li>
  <li>设备断开连接处理</li>
  <li>命令超时机制</li>
</ul>

<h3 id="安全性">安全性</h3>

<ul>
  <li>避免在不信任的环境使用</li>
  <li>注意 APK 路径注入风险</li>
  <li>考虑添加命令白名单</li>
</ul>

<hr />

<h2 id="参考资源">参考资源</h2>

<ul>
  <li><a href="https://modelcontextprotocol.io/">MCP 官方文档</a></li>
  <li><a href="https://github.com/modelcontextprotocol/sdk">MCP SDK GitHub</a></li>
  <li><a href="https://developer.android.com/tools/adb">ADB 官方文档</a></li>
</ul>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[同样是 Sonnet 4.5，为何 CLI 工具差距这么大]]></title>
    <link href="https://droidyue.com/blog/2025/10/13/tong-ge-sonnet-4-dot-5-wei-he-biao-xian-chai-5-bei/"/>
    <updated>2025-10-13T08:00:00+08:00</updated>
    <id>https://droidyue.com/blog/2025/10/13/tong-ge-sonnet-4-dot-5-wei-he-biao-xian-chai-5-bei</id>
    <content type="html"><![CDATA[<p>最近使用 Claude Code CLI 和 GitHub Copilot CLI 时发现，虽然两者都使用 Claude Sonnet 4.5 模型，但 Claude Code 明显更智能。本文记录性能差异的技术原因。</p>

<!--more-->

<h2 id="核心问题">核心问题</h2>

<p><strong>同模型不等于同性能</strong>。Claude Sonnet 4.5 原生支持 200K tokens 上下文和 Extended Thinking，但 Copilot CLI 通过中间层大幅限制了这些能力。</p>

<hr />

<h2 id="copilot-cli-的三大限制">Copilot CLI 的三大限制</h2>

<h3 id="1-上下文窗口严重缩水">1. 上下文窗口严重缩水</h3>

<p><strong>Claude Sonnet 4.5 原生能力</strong>：</p>
<ul>
  <li>标准：200K tokens</li>
  <li>长上下文版本：1M tokens</li>
</ul>

<p><strong>Copilot CLI 实际限制</strong>：</p>
<ul>
  <li>约 <strong>8K tokens</strong> 上下文窗口</li>
  <li>官方未明确公布，但用户实测约为此值</li>
</ul>

<p><strong>实际影响</strong>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c1"># 场景：分析涉及 10 个文件的代码库
</span><span class="line"></span>
</span><span class="line"><span class="c1"># Claude Code CLI (200K 上下文)
</span><span class="line"># ✓ 可同时加载多个相关文件
</span><span class="line"># ✓ 保持完整的代码关系理解
</span><span class="line"># ✓ 前后一致的分析结果
</span><span class="line"></span>
</span><span class="line"><span class="c1"># Copilot CLI (8K 上下文)
</span><span class="line"># ✗ 只能保持 1-2 个文件
</span><span class="line"># ✗ 频繁遗忘先前分析内容
</span><span class="line"># ✗ 需要反复重新读取</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>8K tokens 约等于 <strong>6000 英文单词</strong> 或 <strong>1500 行代码</strong>。Copilot CLI 的小窗口导致频繁的上下文切换和信息丢失。</p>

<h3 id="2-extended-thinking-功能完全缺失">2. Extended Thinking 功能完全缺失</h3>

<p><strong>什么是 Extended Thinking</strong>：</p>

<p>允许模型进行深度推理，配置 1K-64K tokens 的”思考预算”，在复杂任务中显著提升表现。</p>

<p><strong>Claude Code CLI 配置示例</strong>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span><span class="w">
</span><span class="line">  </span><span class="nl">"model"</span><span class="p">:</span><span class="w"> </span><span class="s2">"claude-sonnet-4-5-20250929"</span><span class="p">,</span><span class="w">
</span><span class="line">  </span><span class="nl">"thinking"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="line">    </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"enabled"</span><span class="p">,</span><span class="w">
</span><span class="line">    </span><span class="nl">"budget_tokens"</span><span class="p">:</span><span class="w"> </span><span class="mi">10000</span><span class="w">
</span><span class="line">  </span><span class="p">}</span><span class="w">
</span><span class="line"></span><span class="p">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>Copilot CLI</strong>：</p>

<p>完全不支持此配置，无法启用 Extended Thinking。这是两者智能表现差异的关键原因。</p>

<h3 id="3-资源配额与超时策略">3. 资源配额与超时策略</h3>

<p><strong>Claude Code CLI</strong>：</p>
<ul>
  <li>按 token 计费（$3/百万输入，$15/百万输出）</li>
  <li>允许长时间运行</li>
  <li>支持检查点功能，可保存进度</li>
</ul>

<p><strong>Copilot CLI</strong>：</p>
<ul>
  <li>Premium Request 配额制（Pro 300 次/月）</li>
  <li>隐性”思考预算”限制</li>
  <li>超时中断机制</li>
</ul>

<p><strong>比喻</strong>：</p>

<p>Claude Code 设计用于 <strong>跑马拉松</strong>（长时间、多步骤任务），Copilot CLI 只能 <strong>跑百米</strong>（快速交互）。</p>

<hr />

<h2 id="架构差异">架构差异</h2>

<h3 id="claude-code-cli直接访问">Claude Code CLI：直接访问</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="err">用户</span><span class="w"> </span><span class="err">→</span><span class="w"> </span><span class="err">Anthropic</span><span class="w"> </span><span class="err">API</span><span class="w"> </span><span class="err">→</span><span class="w"> </span><span class="err">Claude</span><span class="w"> </span><span class="err">Sonnet</span><span class="w"> </span><span class="mf">4.5</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>特点</strong>：</p>
<ul>
  <li>完整的 200K tokens 上下文</li>
  <li>支持 Extended Thinking</li>
  <li>完全参数控制</li>
  <li>并行工具调用</li>
  <li>无功能限制</li>
</ul>

<p><strong>代价</strong>：</p>
<ul>
  <li>使用 grep-only 检索（无语义索引）</li>
  <li>大量顺序工具调用</li>
  <li><strong>速度慢 4-5 倍</strong></li>
</ul>

<h3 id="copilot-cli中间层架构">Copilot CLI：中间层架构</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="err">用户</span><span class="w"> </span><span class="err">→</span><span class="w"> </span><span class="err">GitHub</span><span class="w"> </span><span class="err">编排层</span><span class="w"> </span><span class="err">→</span><span class="w"> </span><span class="err">Anthropic</span><span class="w"> </span><span class="err">API</span><span class="w"> </span><span class="err">→</span><span class="w"> </span><span class="err">Claude</span><span class="w"> </span><span class="err">Sonnet</span><span class="w"> </span><span class="mf">4.5</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>中间层作用</strong>：</p>
<ul>
  <li>模型路由和切换</li>
  <li>成本控制和配额管理</li>
  <li>上下文窗口限制（8K）</li>
  <li>屏蔽高级功能（Extended Thinking）</li>
  <li>GitHub 生态集成</li>
</ul>

<p><strong>优点</strong>：</p>
<ul>
  <li>多模型选择</li>
  <li>GitHub 深度集成</li>
  <li>相对稳定</li>
</ul>

<p><strong>代价</strong>：</p>
<ul>
  <li>模型能力被”阉割”</li>
  <li>上下文限制严重</li>
  <li>复杂任务表现差</li>
</ul>

<hr />

<h2 id="实测性能对比">实测性能对比</h2>

<h3 id="速度差异">速度差异</h3>

<p>重构 React 前端任务（约 15 个文件）：</p>
<ul>
  <li><strong>Claude Code CLI</strong>: 18 分 20 秒</li>
  <li><strong>Claude Chat 手动</strong>: 4 分 30 秒</li>
  <li><strong>Copilot CLI</strong>: 约 <strong>90 分钟</strong>（18 分 × 5）</li>
</ul>

<p>用户反馈：Copilot CLI 比 Claude Code <strong>慢 5 倍以上</strong>。</p>

<h3 id="大文件处理">大文件处理</h3>

<p><strong>Claude Code 限制</strong>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="c"># 单文件读取限制 25K tokens</span>
</span><span class="line">Error: File content <span class="o">(</span>28375 tokens<span class="o">)</span> exceeds maximum allowed tokens <span class="o">(</span>25000<span class="o">)</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>需要使用 offset 和 limit 分块读取，导致反复工具调用。</p>

<p><strong>Copilot CLI 问题</strong>：</p>
<ul>
  <li>8K tokens 窗口导致频繁分块</li>
  <li>
    <blockquote>
      <p>1000 行文件经常卡顿</p>
    </blockquote>
  </li>
  <li>有时卡死 30 分钟后超时</li>
</ul>

<hr />

<h2 id="为什么-claude-code-更智能">为什么 Claude Code “更智能”</h2>

<h3 id="1-全局视野-vs-局部视野">1. 全局视野 vs 局部视野</h3>

<p><strong>Claude Code</strong>：</p>
<ul>
  <li>200K tokens 上下文窗口</li>
  <li>可同时保持多个文件内容</li>
  <li>理解代码全局关系</li>
</ul>

<p><strong>Copilot CLI</strong>：</p>
<ul>
  <li>8K tokens 上下文窗口</li>
  <li>只能保持少量文件</li>
  <li>频繁遗忘先前内容</li>
</ul>

<h3 id="2-深度思考-vs-快速响应">2. 深度思考 vs 快速响应</h3>

<p><strong>Claude Code</strong>：</p>
<ul>
  <li>Extended Thinking 允许模型”想”得更久</li>
  <li>可以进行复杂推理</li>
  <li>适合多步骤任务</li>
</ul>

<p><strong>Copilot CLI</strong>：</p>
<ul>
  <li>无 Extended Thinking</li>
  <li>思考预算受限</li>
  <li>倾向快速给出结果</li>
</ul>

<h3 id="3-马拉松-vs-百米">3. 马拉松 vs 百米</h3>

<p><strong>Claude Code</strong>：</p>
<ul>
  <li>设计用于长时间运行</li>
  <li>可处理复杂、多步骤任务</li>
  <li>允许大量 token 消耗</li>
</ul>

<p><strong>Copilot CLI</strong>：</p>
<ul>
  <li>为快速交互优化</li>
  <li>超出一定时限就中断</li>
  <li>控制成本和资源</li>
</ul>

<hr />

<h2 id="稳定性问题">稳定性问题</h2>

<h3 id="copilot-cli">Copilot CLI</h3>

<p>GitHub 社区反馈：</p>
<ul>
  <li>Claude Sonnet 4 在约 5 个提示后停止</li>
  <li>频繁 “I’m sorry but there was an error”</li>
  <li>上下文突然丢失</li>
</ul>

<p>官方承认是”已知的服务器端问题”。</p>

<h3 id="claude-code">Claude Code</h3>

<ul>
  <li>使用 31% 配额时被提前限制</li>
  <li>陷入”无限压缩循环”</li>
  <li>读取大文件时崩溃</li>
</ul>

<hr />

<h2 id="优化建议">优化建议</h2>

<h3 id="claude-code-1">Claude Code</h3>

<p><strong>使用语义索引</strong>：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="c"># 安装 MCP 服务器（如 Serena MCP）</span>
</span><span class="line"><span class="c"># 替代低效 grep 检索</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>主动管理上下文</strong>：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">/clear   <span class="c"># 清理上下文</span>
</span><span class="line">/compact <span class="c"># 压缩上下文</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>维护 CLAUDE.md</strong>：</p>
<ul>
  <li>项目规范</li>
  <li>禁止目录</li>
  <li>常用命令</li>
</ul>

<h3 id="copilot-cli-1">Copilot CLI</h3>

<p><strong>监控配额</strong>：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">/usage  <span class="c"># 查看使用情况</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>按任务选模型</strong>：</p>
<ul>
  <li>复杂任务：Claude Sonnet 4.5</li>
  <li>简单任务：Haiku</li>
</ul>

<p><strong>避免大任务接近限制时启动</strong></p>

<hr />

<h2 id="总结">总结</h2>

<p>两者差异的根本原因：</p>

<table>
  <thead>
    <tr>
      <th>维度</th>
      <th>Claude Code CLI</th>
      <th>Copilot CLI</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>上下文窗口</strong></td>
      <td>200K tokens</td>
      <td>~8K tokens</td>
    </tr>
    <tr>
      <td><strong>Extended Thinking</strong></td>
      <td>✓ 支持</td>
      <td>✗ 不支持</td>
    </tr>
    <tr>
      <td><strong>资源策略</strong></td>
      <td>马拉松</td>
      <td>百米</td>
    </tr>
    <tr>
      <td><strong>架构</strong></td>
      <td>直接访问</td>
      <td>中间层限制</td>
    </tr>
    <tr>
      <td><strong>适用场景</strong></td>
      <td>复杂重构</td>
      <td>快速迭代</td>
    </tr>
  </tbody>
</table>

<p><strong>Claude Code</strong> 提供完整模型能力但速度慢，像让模型”看全局、想得久”。</p>

<p><strong>Copilot CLI</strong> 功能受限但集成好，像让模型”看局部、快速答”。</p>

<p>用户反馈的”8K tokens 限制”并非误解，而是 Copilot CLI 的真实约束。这个限制加上 Extended Thinking 缺失，是智能表现差异的核心原因。</p>

<p>实际使用中，<strong>许多开发者两者并用</strong>：Claude Code 处理复杂任务，Copilot CLI 处理快速交互。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[定位 Android 权限声明来源]]></title>
    <link href="https://droidyue.com/blog/2025/10/12/ding-wei-android-quan-xian-sheng-ming-lai-yuan/"/>
    <updated>2025-10-12T08:00:00+08:00</updated>
    <id>https://droidyue.com/blog/2025/10/12/ding-wei-android-quan-xian-sheng-ming-lai-yuan</id>
    <content type="html"><![CDATA[<p>开发中经常需要排查某个权限是由哪个依赖库引入的，本文记录通过 Gradle daemon 日志快速定位权限来源的方法。</p>

<!--more-->

<h2 id="查询方法">查询方法</h2>

<p>使用以下命令在 Gradle daemon 日志中搜索权限声明：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="nb">grep</span> <span class="nt">-n</span> <span class="nt">-C</span> 2 <span class="s2">"android.permission.INTERNET"</span> <span class="nt">--include</span><span class="o">=</span><span class="s2">"*.out.log"</span> <span class="nt">-R</span> ~/.gradle/daemon/ .</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="参数说明">参数说明</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">-n</code>：显示行号</li>
  <li><code class="language-plaintext highlighter-rouge">-C 2</code>：显示匹配行前后各 2 行上下文（关于 grep 上下文参数的详细用法见<a href="https://droidyue.com/blog/2025/06/24/use-grep-with-context/">这篇文章</a>）</li>
  <li><code class="language-plaintext highlighter-rouge">--include="*.out.log"</code>：只搜索 <code class="language-plaintext highlighter-rouge">.out.log</code> 文件</li>
  <li><code class="language-plaintext highlighter-rouge">-R</code>：递归搜索目录</li>
  <li><code class="language-plaintext highlighter-rouge">~/.gradle/daemon/</code>：Gradle daemon 日志目录</li>
</ul>

<hr />

<h2 id="daemon-日志文件说明">daemon 日志文件说明</h2>

<h3 id="什么是-daemonoutlog">什么是 daemon*.out.log</h3>

<p>Gradle daemon 是 Gradle 构建系统的后台进程，用于加速构建过程。<code class="language-plaintext highlighter-rouge">daemon-*.out.log</code> 文件记录了 daemon 进程的详细输出信息，包括：</p>

<ul>
  <li><strong>依赖解析过程</strong>：库的下载、合并信息</li>
  <li><strong>Manifest 合并日志</strong>：权限、组件的合并来源</li>
  <li><strong>构建任务执行</strong>：编译、打包等任务的详细输出</li>
  <li><strong>错误堆栈信息</strong>：构建失败时的完整日志</li>
</ul>

<h3 id="文件位置">文件位置</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">~/.gradle/daemon/
</span><span class="line">├── 5.4.1/
</span><span class="line">│   ├── daemon-77407.out.log
</span><span class="line">│   └── daemon-77408.out.log
</span><span class="line">├── 7.0.2/
</span><span class="line">│   └── daemon-88901.out.log
</span><span class="line">└── ...</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>每个 Gradle 版本对应一个目录，每次 daemon 启动会生成新的日志文件，文件名中的数字为进程 ID。</p>

<hr />

<h2 id="结果分析">结果分析</h2>

<h3 id="查询结果示例">查询结果示例</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="plaintext"><span class="line">/daemon/5.4.1/daemon-77407.out.log:132336:Merging uses-permission#android.permission.INTERNET 
</span><span class="line">with lower [net.butterflytv.utils:rtmp-client:3.0.1] AndroidManifest.xml:11:5-67</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="信息解读">信息解读</h3>

<p>从日志可以看出：</p>

<ul>
  <li><strong>权限名称</strong>：<code class="language-plaintext highlighter-rouge">android.permission.INTERNET</code></li>
  <li><strong>来源依赖</strong>：<code class="language-plaintext highlighter-rouge">net.butterflytv.utils:rtmp-client:3.0.1</code></li>
  <li><strong>声明位置</strong>：该依赖的 <code class="language-plaintext highlighter-rouge">AndroidManifest.xml</code> 第 11 行</li>
  <li><strong>日志文件</strong>：<code class="language-plaintext highlighter-rouge">daemon-77407.out.log</code> 第 132336 行</li>
</ul>

<h3 id="处理方式">处理方式</h3>

<p>使用 <code class="language-plaintext highlighter-rouge">&lt;uses-permission tools:node="remove"&gt;</code> 在主 Manifest 中显式移除。</p>

<hr />

<h2 id="注意事项">注意事项</h2>

<ul>
  <li>daemon 日志会随着构建次数增多而变大，定期清理 <code class="language-plaintext highlighter-rouge">~/.gradle/daemon/</code> 目录</li>
  <li>不同 Gradle 版本的日志格式可能略有差异</li>
  <li>查询结果可能包含多个匹配项，需根据依赖关系判断实际来源</li>
</ul>

<h2 id="延伸阅读">延伸阅读</h2>

<ul>
  <li><a href="https://docs.gradle.org/current/userguide/gradle_daemon.html">Gradle Daemon 官方文档</a></li>
  <li><a href="https://developer.android.com/studio/build/manifest-merge">Android Manifest 合并机制</a></li>
</ul>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 升级 targetSDK 35 解决 namespace 问题]]></title>
    <link href="https://droidyue.com/blog/2025/10/04/android-sheng-ji-targetsdk-35-jie-jue-namespace-wen-ti/"/>
    <updated>2025-10-04T10:00:00+08:00</updated>
    <id>https://droidyue.com/blog/2025/10/04/android-sheng-ji-targetsdk-35-jie-jue-namespace-wen-ti</id>
    <content type="html"><![CDATA[<p>升级 Android targetSDK 至 35 并使用 Gradle 8.0+ 后，遇到了第三方库 namespace 配置问题。</p>

<!--more-->

<h2 id="错误信息">错误信息</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">Execution failed <span class="k">for </span>task <span class="s1">':react-native-inappbrowser:processDebugManifest'</span><span class="nb">.</span>
</span><span class="line"><span class="o">&gt;</span> A failure occurred <span class="k">while </span>executing com.android.build.gradle.tasks.ProcessLibraryManifest<span class="nv">$ProcessLibWorkAction</span>
</span><span class="line"><span class="o">&gt;</span> Setting the namespace via the package attribute <span class="k">in </span>the <span class="nb">source </span>AndroidManifest.xml is no longer supported.
</span><span class="line">  Recommendation: remove <span class="nv">package</span><span class="o">=</span><span class="s2">"com.proyecto26.inappbrowser"</span> from the <span class="nb">source </span>AndroidManifest.xml.</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>或者类似错误：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">Namespace not specified. Please specify a namespace <span class="k">in </span>the module<span class="s1">'s build.gradle file like so:
</span><span class="line">
</span><span class="line">android {
</span><span class="line">    namespace '</span>com.example.namespace<span class="s1">'
</span><span class="line">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<h2 id="原因分析">原因分析</h2>

<p>Android Gradle Plugin 8.0+ 不再支持在 <code class="language-plaintext highlighter-rouge">AndroidManifest.xml</code> 中通过 <code class="language-plaintext highlighter-rouge">package</code> 属性设置 namespace，要求在 <code class="language-plaintext highlighter-rouge">build.gradle</code> 中显式声明。升级 targetSDK 至 35 需要使用 Gradle 8.0+，但很多第三方库（如 <code class="language-plaintext highlighter-rouge">react-native-inappbrowser</code>、<code class="language-plaintext highlighter-rouge">appcenter-analytics</code> 等）尚未更新配置，导致构建失败。</p>

<hr />

<h2 id="解决方案">解决方案</h2>

<p>在项目根目录的 <code class="language-plaintext highlighter-rouge">android/build.gradle</code> 文件中添加以下代码：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
</pre></td><td class="code"><pre><code class="groovy"><span class="line"><span class="n">allprojects</span> <span class="o">{</span>
</span><span class="line">    <span class="n">repositories</span> <span class="o">{</span>
</span><span class="line">        <span class="n">google</span><span class="o">()</span>
</span><span class="line">        <span class="n">mavenCentral</span><span class="o">()</span>
</span><span class="line">        
</span><span class="line">        <span class="c1">// 如果使用 Detox 测试框架，添加此配置</span>
</span><span class="line">        <span class="n">maven</span> <span class="o">{</span>
</span><span class="line">            <span class="n">url</span><span class="o">(</span><span class="s2">"$rootDir/../node_modules/detox/Detox-android"</span><span class="o">)</span>
</span><span class="line">        <span class="o">}</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line">    
</span><span class="line">    <span class="n">subprojects</span> <span class="o">{</span>
</span><span class="line">        <span class="n">afterEvaluate</span> <span class="o">{</span> <span class="n">project</span> <span class="o">-&gt;</span>
</span><span class="line">            <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">hasProperty</span><span class="o">(</span><span class="s1">'android'</span><span class="o">))</span> <span class="o">{</span>
</span><span class="line">                <span class="n">project</span><span class="o">.</span><span class="na">android</span> <span class="o">{</span>
</span><span class="line">                    <span class="c1">// 自动设置 namespace</span>
</span><span class="line">                    <span class="k">if</span> <span class="o">(</span><span class="n">namespace</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">namespace</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
</span><span class="line">                        <span class="kt">def</span> <span class="n">defaultNamespace</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">group</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="s1">'.'</span><span class="o">,</span> <span class="s1">'_'</span><span class="o">)</span>
</span><span class="line">                        <span class="n">namespace</span> <span class="o">=</span> <span class="n">defaultNamespace</span>
</span><span class="line">                    <span class="o">}</span>
</span><span class="line">
</span><span class="line">                    <span class="c1">// 启用 buildConfig</span>
</span><span class="line">                    <span class="n">buildFeatures</span> <span class="o">{</span>
</span><span class="line">                        <span class="n">buildConfig</span> <span class="o">=</span> <span class="kc">true</span>
</span><span class="line">                    <span class="o">}</span>
</span><span class="line">                <span class="o">}</span>
</span><span class="line">
</span><span class="line">                <span class="c1">// 自动修复 namespace 和清理 AndroidManifest.xml</span>
</span><span class="line">                <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="s2">"fixManifestsAndNamespace"</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">                    <span class="n">doLast</span> <span class="o">{</span>
</span><span class="line">                        <span class="c1">// 1. 从 AndroidManifest.xml 提取 package 并添加到 build.gradle</span>
</span><span class="line">                        <span class="kt">def</span> <span class="n">buildGradleFile</span> <span class="o">=</span> <span class="n">file</span><span class="o">(</span><span class="s2">"${project.projectDir}/build.gradle"</span><span class="o">)</span>
</span><span class="line">                        <span class="k">if</span> <span class="o">(</span><span class="n">buildGradleFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class="line">                            <span class="kt">def</span> <span class="n">buildGradleContent</span> <span class="o">=</span> <span class="n">buildGradleFile</span><span class="o">.</span><span class="na">getText</span><span class="o">(</span><span class="s1">'UTF-8'</span><span class="o">)</span>
</span><span class="line">                            <span class="kt">def</span> <span class="n">manifestFile</span> <span class="o">=</span> <span class="n">file</span><span class="o">(</span><span class="s2">"${project.projectDir}/src/main/AndroidManifest.xml"</span><span class="o">)</span>
</span><span class="line">                            <span class="k">if</span> <span class="o">(</span><span class="n">manifestFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class="line">                                <span class="kt">def</span> <span class="n">manifestContent</span> <span class="o">=</span> <span class="n">manifestFile</span><span class="o">.</span><span class="na">getText</span><span class="o">(</span><span class="s1">'UTF-8'</span><span class="o">)</span>
</span><span class="line">                                <span class="kt">def</span> <span class="n">packageName</span> <span class="o">=</span> <span class="n">manifestContent</span><span class="o">.</span><span class="na">find</span><span class="o">(</span><span class="s">/package="([^"]+)"/</span><span class="o">)</span> <span class="o">{</span> <span class="n">match</span><span class="o">,</span> <span class="n">p</span> <span class="o">-&gt;</span> <span class="n">p</span> <span class="o">}</span>
</span><span class="line">                                <span class="k">if</span> <span class="o">(</span><span class="n">packageName</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">buildGradleContent</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s2">"namespace"</span><span class="o">))</span> <span class="o">{</span>
</span><span class="line">                                    <span class="n">println</span> <span class="s2">"Setting namespace in ${buildGradleFile}"</span>
</span><span class="line">                                    <span class="n">buildGradleContent</span> <span class="o">=</span> <span class="n">buildGradleContent</span><span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span>
</span><span class="line">                                        <span class="s">/android\s*\{/</span><span class="o">,</span> <span class="s2">"android {\n    namespace '${packageName}'"</span>
</span><span class="line">                                    <span class="o">)</span>
</span><span class="line">                                    <span class="n">buildGradleFile</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">buildGradleContent</span><span class="o">,</span> <span class="s1">'UTF-8'</span><span class="o">)</span>
</span><span class="line">                                <span class="o">}</span>
</span><span class="line">                            <span class="o">}</span>
</span><span class="line">                        <span class="o">}</span>
</span><span class="line">
</span><span class="line">                        <span class="c1">// 2. 移除 AndroidManifest.xml 中的 package 属性</span>
</span><span class="line">                        <span class="kt">def</span> <span class="n">manifests</span> <span class="o">=</span> <span class="n">fileTree</span><span class="o">(</span><span class="nl">dir:</span> <span class="n">project</span><span class="o">.</span><span class="na">projectDir</span><span class="o">,</span> <span class="nl">includes:</span> <span class="o">[</span><span class="s1">'**/AndroidManifest.xml'</span><span class="o">])</span>
</span><span class="line">                        <span class="n">manifests</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span> <span class="n">File</span> <span class="n">manifestFile</span> <span class="o">-&gt;</span>
</span><span class="line">                            <span class="kt">def</span> <span class="n">manifestContent</span> <span class="o">=</span> <span class="n">manifestFile</span><span class="o">.</span><span class="na">getText</span><span class="o">(</span><span class="s1">'UTF-8'</span><span class="o">)</span>
</span><span class="line">                            <span class="k">if</span> <span class="o">(</span><span class="n">manifestContent</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">'package='</span><span class="o">))</span> <span class="o">{</span>
</span><span class="line">                                <span class="n">println</span> <span class="s2">"Removing package attribute from ${manifestFile}"</span>
</span><span class="line">                                <span class="n">manifestContent</span> <span class="o">=</span> <span class="n">manifestContent</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">/package="[^"]*"/</span><span class="o">,</span> <span class="s1">''</span><span class="o">)</span>
</span><span class="line">                                <span class="n">manifestFile</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">manifestContent</span><span class="o">,</span> <span class="s1">'UTF-8'</span><span class="o">)</span>
</span><span class="line">                            <span class="o">}</span>
</span><span class="line">                        <span class="o">}</span>
</span><span class="line">                    <span class="o">}</span>
</span><span class="line">                <span class="o">}</span>
</span><span class="line">
</span><span class="line">                <span class="c1">// 在构建前自动执行修复</span>
</span><span class="line">                <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">matching</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s2">"preBuild"</span><span class="o">)</span> <span class="o">}.</span><span class="na">all</span> <span class="o">{</span>
</span><span class="line">                    <span class="n">dependsOn</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">named</span><span class="o">(</span><span class="s2">"fixManifestsAndNamespace"</span><span class="o">)</span>
</span><span class="line">                <span class="o">}</span>
</span><span class="line">            <span class="o">}</span>
</span><span class="line">        <span class="o">}</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line"><span class="o">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<h2 id="说明">说明</h2>

<h3 id="工作原理">工作原理</h3>

<p>此方案包含三个层次的处理：</p>

<ol>
  <li><strong>自动设置 namespace</strong>：如果子项目未配置 namespace，自动使用 <code class="language-plaintext highlighter-rouge">project.group</code> 并将点号替换为下划线作为 namespace</li>
  <li><strong>启用 buildConfig</strong>：自动为所有子项目启用 <code class="language-plaintext highlighter-rouge">buildConfig</code> 特性</li>
  <li><strong>自动迁移配置</strong>：
    <ul>
      <li>从 <code class="language-plaintext highlighter-rouge">AndroidManifest.xml</code> 中提取 <code class="language-plaintext highlighter-rouge">package</code> 属性</li>
      <li>将其写入对应的 <code class="language-plaintext highlighter-rouge">build.gradle</code> 作为 <code class="language-plaintext highlighter-rouge">namespace</code></li>
      <li>移除 <code class="language-plaintext highlighter-rouge">AndroidManifest.xml</code> 中的 <code class="language-plaintext highlighter-rouge">package</code> 属性</li>
    </ul>
  </li>
</ol>

<p>这个 task 在每次构建前（<code class="language-plaintext highlighter-rouge">preBuild</code>）自动执行，确保所有第三方库都符合 Gradle 8.0+ 的要求。</p>

<h3 id="适用场景">适用场景</h3>

<ul>
  <li>React Native 项目升级 targetSDK 35</li>
  <li>Flutter 项目升级 targetSDK 35</li>
  <li>使用 Detox 测试框架的项目</li>
  <li>原生 Android 项目使用旧版第三方库</li>
  <li>任何遇到 “namespace not specified” 或 “package attribute not supported” 错误的场景</li>
</ul>

<h3 id="注意事项">注意事项</h3>

<ul>
  <li>此方案会<strong>自动修改</strong>第三方库的 <code class="language-plaintext highlighter-rouge">build.gradle</code> 和 <code class="language-plaintext highlighter-rouge">AndroidManifest.xml</code> 文件</li>
  <li>修改仅在 <code class="language-plaintext highlighter-rouge">node_modules</code> 中生效，不影响源码仓库</li>
  <li>建议在 CI/CD 中首次构建后检查修改是否正确</li>
  <li>如果某些库已经声明了 namespace，不会被覆盖</li>
</ul>

<hr />

<h2 id="验证">验证</h2>

<p>执行以下命令重新构建项目：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="nb">cd </span>android
</span><span class="line">./gradlew clean
</span><span class="line">./gradlew assembleDebug</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>或在 React Native 项目中：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">npx react-native run-android</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>构建过程中会看到类似输出：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">Setting namespace <span class="k">in</span> /path/to/project/android/react-native-inappbrowser/build.gradle
</span><span class="line">Removing package attribute from /path/to/project/android/react-native-inappbrowser/src/main/AndroidManifest.xml</span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<h2 id="与简化方案对比">与简化方案对比</h2>

<p>如果只需要为缺少 namespace 的库自动设置默认值，可以使用简化版：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="groovy"><span class="line"><span class="n">subprojects</span> <span class="o">{</span>
</span><span class="line">    <span class="n">afterEvaluate</span> <span class="o">{</span> <span class="n">project</span> <span class="o">-&gt;</span>
</span><span class="line">        <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">hasProperty</span><span class="o">(</span><span class="s1">'android'</span><span class="o">))</span> <span class="o">{</span>
</span><span class="line">            <span class="n">project</span><span class="o">.</span><span class="na">android</span> <span class="o">{</span>
</span><span class="line">                <span class="k">if</span> <span class="o">(</span><span class="n">namespace</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">namespace</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
</span><span class="line">                    <span class="n">namespace</span> <span class="n">project</span><span class="o">.</span><span class="na">group</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="s1">'.'</span><span class="o">,</span> <span class="s1">'_'</span><span class="o">)</span>
</span><span class="line">                <span class="o">}</span>
</span><span class="line">            <span class="o">}</span>
</span><span class="line">        <span class="o">}</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line"><span class="o">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>简化方案不会修改任何文件，仅在内存中设置 namespace，但可能无法解决所有第三方库的问题。</p>

<hr />

<h2 id="参考">参考</h2>

<ul>
  <li><a href="https://github.com/proyecto26/react-native-inappbrowser/issues/451">GitHub Issue #451</a></li>
  <li><a href="https://stackoverflow.com/questions/76108428">Stack Overflow - namespace not specified</a></li>
  <li><a href="https://wix.github.io/Detox/docs/introduction/project-setup">Detox Project Setup</a></li>
</ul>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决 Android Studio 关闭后终端 flutter run 进程自动结束的问题]]></title>
    <link href="https://droidyue.com/blog/2025/09/28/android-studio-guan-bi-shi-bu-zi-dong-tui-chu-flutter-run-deng-jin-cheng-de-jie-jue-fang-an/"/>
    <updated>2025-09-28T08:56:00+08:00</updated>
    <id>https://droidyue.com/blog/2025/09/28/android-studio-guan-bi-shi-bu-zi-dong-tui-chu-flutter-run-deng-jin-cheng-de-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<p>在 Flutter 开发过程中，很多开发者遇到一个困扰的问题：当使用终端运行 <code class="language-plaintext highlighter-rouge">flutter run</code> 命令进行开发时，一旦关闭 Android Studio 或 IntelliJ IDEA，终端中的 <code class="language-plaintext highlighter-rouge">flutter run</code> 进程就会自动结束，导致应用停止运行。本文将详细分析这个问题的原因并提供解决方案。</p>

<!--more-->

<h2 id="问题现象">问题现象</h2>

<h3 id="典型场景">典型场景</h3>
<ol>
  <li>在终端中执行 <code class="language-plaintext highlighter-rouge">flutter run</code> 启动 Flutter 应用</li>
  <li>同时打开 Android Studio 进行代码编辑</li>
  <li>关闭 Android Studio 或 IntelliJ IDEA</li>
  <li>终端中的 <code class="language-plaintext highlighter-rouge">flutter run</code> 进程自动结束，应用停止运行</li>
</ol>

<h3 id="影响范围">影响范围</h3>
<ul>
  <li>通过终端启动的 <code class="language-plaintext highlighter-rouge">flutter run</code> 进程</li>
  <li>相关的热重载功能失效</li>
  <li>调试连接中断</li>
  <li>需要重新启动应用才能继续开发</li>
</ul>

<h2 id="问题原因分析">问题原因分析</h2>

<h3 id="根本原因">根本原因</h3>

<p>当 Android Studio 启动时，它会自动管理 ADB（Android Debug Bridge）服务器的生命周期。默认情况下，IDE 会：</p>

<ol>
  <li><strong>启动自己的 ADB 服务器实例</strong></li>
  <li><strong>接管现有的调试连接</strong></li>
  <li><strong>在退出时终止所有相关的调试进程</strong></li>
</ol>

<p>这种设计导致即使是通过终端独立启动的 <code class="language-plaintext highlighter-rouge">flutter run</code> 进程，也会因为 ADB 服务器的关闭而被迫结束。</p>

<h3 id="进程依赖关系">进程依赖关系</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">终端 flutter run → ADB 连接 → Android Studio 管理的 ADB 服务器</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当 Android Studio 关闭时，它管理的 ADB 服务器也会关闭，进而导致所有依赖该 ADB 连接的进程（包括终端的 <code class="language-plaintext highlighter-rouge">flutter run</code>）都被终止。</p>

<h2 id="解决方案">解决方案</h2>

<h3 id="配置外部-adb-服务器管理">配置外部 ADB 服务器管理</h3>

<p>最有效的解决方案是让 Android Studio 使用外部手动管理的 ADB 服务器，而不是自己管理一个实例：</p>

<h4 id="配置步骤">配置步骤</h4>

<ol>
  <li>打开 Android Studio 设置（Preferences/Settings）</li>
  <li>导航到 <code class="language-plaintext highlighter-rouge">Build, Execution, Deployment</code> → <code class="language-plaintext highlighter-rouge">Debugger</code></li>
  <li>找到 <code class="language-plaintext highlighter-rouge">Android Debug Bridge (adb)</code> 部分</li>
  <li>在 <code class="language-plaintext highlighter-rouge">Adb Server Lifecycle Management</code> 中选择 <code class="language-plaintext highlighter-rouge">Use existing manually managed server</code></li>
  <li>设置 <code class="language-plaintext highlighter-rouge">Existing ADB server port</code> 为 <code class="language-plaintext highlighter-rouge">5037</code>（默认端口）</li>
</ol>

<p><img src="https://asset.droidyue.com/image/25_h2/android_studido_adb.png" alt="android studio adb config" /></p>

<h4 id="关键配置说明">关键配置说明</h4>

<ul>
  <li><strong>Use existing manually managed server</strong>: 告诉 Android Studio 不要自己管理 ADB 服务器，而是使用外部已存在的服务器</li>
  <li><strong>Existing ADB server port</strong>: 指定外部 ADB 服务器的端口（通常为 5037）</li>
</ul>

<p>这样配置后，Android Studio 不会在启动时接管 ADB 服务器，也不会在关闭时终止它，从而保证终端运行的进程不受影响。</p>

<h2 id="验证配置是否生效">验证配置是否生效</h2>

<p>配置完成后，可以通过以下步骤验证：</p>

<ol>
  <li>在终端启动 <code class="language-plaintext highlighter-rouge">flutter run</code></li>
  <li>打开 Android Studio</li>
  <li>关闭 Android Studio</li>
  <li>检查终端中的 <code class="language-plaintext highlighter-rouge">flutter run</code> 是否依然运行</li>
</ol>

<p>如果 <code class="language-plaintext highlighter-rouge">flutter run</code> 进程没有被终止，说明配置成功。</p>

<h2 id="总结">总结</h2>

<p>通过配置 Android Studio 使用外部手动管理的 ADB 服务器，可以有效解决 IDE 关闭后终端 <code class="language-plaintext highlighter-rouge">flutter run</code> 进程自动结束的问题。这种方法的优势在于：</p>

<ol>
  <li><strong>进程独立性</strong>：终端和 IDE 的调试进程相互独立</li>
  <li><strong>开发效率</strong>：无需频繁重启应用</li>
  <li><strong>资源优化</strong>：避免不必要的进程重启</li>
  <li><strong>稳定性</strong>：减少因 IDE 操作导致的调试中断</li>
</ol>

<p>推荐所有 Flutter 开发者采用这种配置方式，特别是那些习惯在终端中运行 <code class="language-plaintext highlighter-rouge">flutter run</code> 的开发者。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 grep 查找关键字并显示上下文行]]></title>
    <link href="https://droidyue.com/blog/2025/06/24/use-grep-with-context/"/>
    <updated>2025-06-24T10:30:00+08:00</updated>
    <id>https://droidyue.com/blog/2025/06/24/use-grep-with-context</id>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>

<p>排查日志时，常需要定位关键字并带上一两行上下文确认语义。<code class="language-plaintext highlighter-rouge">grep</code> 内建的上下文选项可以直接满足需求，不必再手动 <code class="language-plaintext highlighter-rouge">sed -n '19,21p'</code>。</p>

<!--more-->

<h2 id="快速示例">快速示例</h2>

<p>假设想在 <code class="language-plaintext highlighter-rouge">app.log</code> 中找出包含 <code class="language-plaintext highlighter-rouge">Fatal error</code> 的行，并且同时看到上一行与下一行：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="nb">grep</span> <span class="nt">-n</span> <span class="nt">-C</span> 1 <span class="s2">"Fatal error"</span> app.log</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">-n</code> 会显示行号，便于定位。</li>
  <li><code class="language-plaintext highlighter-rouge">-C 1</code> 等价于 <code class="language-plaintext highlighter-rouge">--context=1</code>，表示向前向后各多带 1 行。想多看几行时调整数字即可。</li>
</ul>

<p>输出中，命中的行以冒号分隔行号与内容，上下文行则以短横线 <code class="language-plaintext highlighter-rouge">-</code> 连接，快速区分重点。</p>

<h2 id="控制上下文范围">控制上下文范围</h2>

<p><code class="language-plaintext highlighter-rouge">grep</code> 提供三个粒度化参数：</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">-C &lt;N&gt;</code>：两侧各 N 行，是最常用的形式。</li>
  <li><code class="language-plaintext highlighter-rouge">-B &lt;N&gt;</code>：只带前 N 行（Before）。</li>
  <li><code class="language-plaintext highlighter-rouge">-A &lt;N&gt;</code>：只带后 N 行（After）。</li>
</ul>

<p>例如只关心关键字后面的调用栈，可使用：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="nb">grep</span> <span class="nt">-n</span> <span class="nt">-A</span> 4 <span class="s2">"NullPointerException"</span> stacktrace.txt</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>再配合 <code class="language-plaintext highlighter-rouge">-m 1</code>（匹配一次后退出）可以缩短复杂日志的搜索时间。</p>

<h2 id="与常见参数组合">与常见参数组合</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">-i</code>：忽略大小写，处理大小写不一致的告警信息很方便。</li>
  <li><code class="language-plaintext highlighter-rouge">-E</code>：启用扩展正则，可直接写 <code class="language-plaintext highlighter-rouge">grep -E "(WARN|ERROR)"</code>。</li>
  <li><code class="language-plaintext highlighter-rouge">--color=auto</code>：高亮命中关键字，在终端阅读更直观。</li>
</ul>

<p>将这些参数组合成 Shell 函数，后续排查直接调用。例如在 <code class="language-plaintext highlighter-rouge">~/.bashrc</code> 中定义：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">gctx<span class="o">()</span> <span class="o">{</span>
</span><span class="line">  <span class="nb">local </span><span class="nv">keyword</span><span class="o">=</span><span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="nv">file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span> <span class="nv">lines</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">3</span><span class="k">:-</span><span class="nv">1</span><span class="k">}</span><span class="s2">"</span>
</span><span class="line">  <span class="nb">grep</span> <span class="nt">-n</span> <span class="nt">--color</span><span class="o">=</span>always <span class="nt">-C</span> <span class="s2">"</span><span class="nv">$lines</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$keyword</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$file</span><span class="s2">"</span>
</span><span class="line"><span class="o">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行 <code class="language-plaintext highlighter-rouge">gctx "timeout" service.log 2</code>，即可得到行号、关键字高亮、上下文行的结果。</p>

<h2 id="小结">小结</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">-C/-A/-B</code> 是获取上下文的核心选项，记住数字表示行数即可。</li>
  <li>搭配 <code class="language-plaintext highlighter-rouge">-n</code>、<code class="language-plaintext highlighter-rouge">--color</code>、<code class="language-plaintext highlighter-rouge">-m</code> 等参数可以提升排查效率。</li>
  <li>如果命中结果过多，将命令与 <code class="language-plaintext highlighter-rouge">less -R</code> 或 <code class="language-plaintext highlighter-rouge">fzf</code> 管道组合，能够在终端中进行二次筛选，让排查体验更顺滑。</li>
</ul>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 开发中的三个常见构建错误及解决方案]]></title>
    <link href="https://droidyue.com/blog/2025/06/23/fix-three-build-error-in-android/"/>
    <updated>2025-06-23T08:33:00+08:00</updated>
    <id>https://droidyue.com/blog/2025/06/23/fix-three-build-error-in-android</id>
    <content type="html"><![CDATA[<p>最近在 Android 项目开发中遇到了几个构建错误，以下是解决方案，供遇到同样问题的开发者参考。</p>

<h2 id="1-meta-inf-文件冲突">1. META-INF 文件冲突</h2>

<h3 id="错误信息">错误信息</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">FAILURE: Build failed with an exception.
</span><span class="line"><span class="k">*</span> What went wrong:
</span><span class="line">Execution failed <span class="k">for </span>task <span class="s1">':app:mergeDebugJavaResource'</span><span class="nb">.</span>
</span><span class="line"><span class="o">&gt;</span> A failure occurred <span class="k">while </span>executing com.android.build.gradle.internal.tasks.MergeJavaResWorkAction
</span><span class="line">   <span class="o">&gt;</span> 2 files found with path <span class="s1">'META-INF/versions/9/OSGI-INF/MANIFEST.MF'</span> from inputs:</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<h3 id="解决方案">解决方案</h3>
<p>在 <code class="language-plaintext highlighter-rouge">app/build.gradle</code> 中添加以下配置：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">android <span class="o">{</span>
</span><span class="line">    packagingOptions <span class="o">{</span>
</span><span class="line">        resources <span class="o">{</span>
</span><span class="line">            excludes +<span class="o">=</span> <span class="s2">"META-INF/versions/9/OSGI-INF/MANIFEST.MF"</span>
</span><span class="line">        <span class="o">}</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line"><span class="o">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="说明">说明</h3>
<p>此错误通常由多个依赖包含相同的 META-INF 文件引起，通过 <code class="language-plaintext highlighter-rouge">excludes</code> 排除重复文件即可解决。</p>

<hr />

<h2 id="2-tensorflow-lite-库冲突">2. TensorFlow Lite 库冲突</h2>

<h3 id="错误信息-1">错误信息</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">Caused by: java.lang.RuntimeException: Duplicate class org.tensorflow.lite.DataType found <span class="k">in
</span><span class="line"></span>modules jetified-litert-api-1.0.1-runtime <span class="o">(</span>com.google.ai.edge.litert:litert-api:1.0.1<span class="o">)</span> and
</span><span class="line">jetified-tensorflow-lite-api-2.12.0-runtime <span class="o">(</span>org.tensorflow:tensorflow-lite-api:2.12.0<span class="o">)</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="解决方案-1">解决方案</h3>
<p>在 <code class="language-plaintext highlighter-rouge">app/build.gradle</code> 中添加依赖替换规则：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">configurations.all <span class="o">{</span>
</span><span class="line">    resolutionStrategy.dependencySubstitution <span class="o">{</span>
</span><span class="line">        substitute module<span class="o">(</span><span class="s2">"org.tensorflow:tensorflow-lite"</span><span class="o">)</span> with module<span class="o">(</span><span class="s2">"com.google.ai.edge.litert:litert:1.0.1"</span><span class="o">)</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line"><span class="o">}</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="说明-1">说明</h3>
<p>Google 将 TensorFlow Lite 迁移到新包名 <code class="language-plaintext highlighter-rouge">com.google.ai.edge.litert</code>，若项目同时包含新旧包名，会导致类冲突。通过依赖替换强制使用新包解决。</p>

<hr />

<h2 id="3-jetifier-与-bouncycastle-兼容性问题">3. Jetifier 与 BouncyCastle 兼容性问题</h2>

<h3 id="错误信息-2">错误信息</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">Caused by: java.lang.RuntimeException: Failed to transform
</span><span class="line"><span class="s1">'/Users/xxxxx/.gradle/caches/modules-2/files-2.1/org.bouncycastle/bcprov-jdk18on/1.78/619aafb92dc0b4c6c
</span><span class="line">c4cf86c487ca48ee2d67a8e/bcprov-jdk18on-1.78.jar'</span> using Jetifier. 
</span><span class="line">Reason: IllegalArgumentException, message: Unsupported class file major version 65.</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="解决方案-2">解决方案</h3>
<p>在项目根目录的 <code class="language-plaintext highlighter-rouge">android/gradle.properties</code> 文件中添加：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">android.jetifier.ignorelist<span class="o">=</span>bcprov-jdk18on-1.78.jar,bcutil-jdk18on-1.78.jar</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="说明-2">说明</h3>
<p>BouncyCastle 1.78 版本使用 Java 21 编译（class file major version 65），而 Jetifier 不支持此版本字节码。将相关 jar 包加入 Jetifier 忽略列表可避免转换错误。</p>

<hr />

<h2 id="总结">总结</h2>
<p>以上三个问题是 Android 构建中常见的依赖冲突问题，解决思路包括：</p>
<ul>
  <li>排除重复文件</li>
  <li>替换冲突依赖</li>
  <li>跳过不兼容的处理</li>
</ul>

<p>遇到类似问题时，仔细分析错误信息，通常能找到相应解决方案。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 flock 解决 Git `unable to read tree` 问题]]></title>
    <link href="https://droidyue.com/blog/2025/06/15/use-flock-to-resolve-git-concurrent-operation-issues/"/>
    <updated>2025-06-15T08:49:00+08:00</updated>
    <id>https://droidyue.com/blog/2025/06/15/use-flock-to-resolve-git-concurrent-operation-issues</id>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>

<p>在 CI/CD 环境下，团队常遇到以下错误：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">fatal: unable to read tree &lt;SHA&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这通常是多个进程或脚本并发操作同一个 Git 仓库，导致元数据损坏或锁冲突。Git 并非为高并发本地操作设计，因此需要解决并发问题。</p>

<!--more-->

<h2 id="问题复现">问题复现</h2>

<p>在自动化脚本中，例如：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">git fetch origin
</span><span class="line">git checkout some-branch</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果多个任务同时执行，可能导致锁冲突或元数据损坏。</p>

<h2 id="解决思路">解决思路</h2>

<p>通过加锁机制，让所有 Git 操作串行执行。<code class="language-plaintext highlighter-rouge">flock</code> 是一个简单高效的工具，专为这种场景设计。</p>

<h2 id="flock-安装">flock 安装</h2>

<h3 id="linux">Linux</h3>

<p>大多数 Linux 发行版自带 <code class="language-plaintext highlighter-rouge">flock</code>（属于 <code class="language-plaintext highlighter-rouge">util-linux</code> 套件）。如果没有，可按以下方式安装：</p>

<ul>
  <li><strong>Debian/Ubuntu</strong>:</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="nb">sudo </span>apt-get update
</span><span class="line"><span class="nb">sudo </span>apt-get <span class="nb">install </span>util-linux</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><strong>CentOS/RHEL</strong>:</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="nb">sudo </span>yum <span class="nb">install </span>util-linux</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><strong>Arch</strong>:</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="nb">sudo </span>pacman <span class="nt">-S</span> util-linux</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安装后即可使用 <code class="language-plaintext highlighter-rouge">flock</code> 命令。</p>

<h3 id="macos">macOS</h3>

<p>macOS 默认不包含 <code class="language-plaintext highlighter-rouge">flock</code>，但可通过 Homebrew 安装兼容版本：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">brew <span class="nb">install </span>flock</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安装的是 Ben Noordhuis 的 <code class="language-plaintext highlighter-rouge">flock</code>，语法与 Linux 版本基本一致。</p>

<p><strong>提示</strong>：在 CI 服务（如 GitHub Actions）中，可在步骤中提前安装 <code class="language-plaintext highlighter-rouge">flock</code>。</p>

<h2 id="flock-用法">flock 用法</h2>

<p><code class="language-plaintext highlighter-rouge">flock</code> 用于在 shell 脚本中对文件加锁：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">flock &lt;lockfile&gt; &lt;<span class="nb">command</span><span class="o">&gt;</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>建议将锁文件放在 <code class="language-plaintext highlighter-rouge">.git</code> 目录下，避免污染业务代码目录。</p>

<h2 id="实战例子">实战例子</h2>

<p>假设有一个 <code class="language-plaintext highlighter-rouge">deploy.sh</code> 脚本：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="c">#!/bin/bash</span>
</span><span class="line">git fetch origin
</span><span class="line">git checkout some-branch
</span><span class="line"><span class="c"># ...more commands...</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>加锁后修改为：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="c">#!/bin/bash</span>
</span><span class="line"><span class="nv">LOCK_FILE</span><span class="o">=</span><span class="s2">"/path/to/your/repo/.git/deploy.lock"</span>
</span><span class="line">
</span><span class="line">flock <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$LOCK_FILE</span><span class="s2">"</span> bash <span class="o">&lt;&lt;</span><span class="sh">'</span><span class="no">EOF</span><span class="sh">'
</span><span class="line">git fetch origin
</span><span class="line">git checkout some-branch
</span><span class="line"># ...more commands...
</span><span class="line">EOF</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>或者直接锁定整个脚本：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">flock <span class="nt">-n</span> /path/to/your/repo/.git/deploy.lock ./deploy.sh</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">-n</code>：表示拿不到锁时立即退出（可选）。</li>
  <li>建议将锁文件放在 <code class="language-plaintext highlighter-rouge">.git</code> 目录下。</li>
</ul>

<h2 id="总结">总结</h2>

<ul>
  <li>避免并发操作同一个 Git 仓库！</li>
  <li>使用 <code class="language-plaintext highlighter-rouge">flock</code> 使 Git 操作串行，防止元数据损坏。</li>
  <li>Linux 下直接使用，macOS 通过 Homebrew 安装 <code class="language-plaintext highlighter-rouge">flock</code>。</li>
  <li>锁粒度可适当放宽，确保安全优先。</li>
  <li>本地自动化操作 Git 时，<code class="language-plaintext highlighter-rouge">flock</code> 是必备工具，简单高效！</li>
</ul>

<p>如有问题，请在评论区讨论。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Could not create task ':generateDebugRFile' 问题小记]]></title>
    <link href="https://droidyue.com/blog/2024/11/03/could-not-create-task-generatedebugrfile-wen-ti-xiao-ji/"/>
    <updated>2024-11-03T00:49:00+08:00</updated>
    <id>https://droidyue.com/blog/2024/11/03/could-not-create-task-generatedebugrfile-wen-ti-xiao-ji</id>
    <content type="html"><![CDATA[<p>前段时间，处理一个比较旧的 flutter plugin，涉及到 Android 的部分，一顿修改后，发现无法 gradle sync 成功。 报错如下，</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="nc">Could</span> <span class="n">not</span> <span class="n">create</span> <span class="n">task</span> <span class="err">'</span><span class="o">:</span><span class="n">generateDebugRFile</span><span class="err">'</span><span class="o">.</span>
</span><span class="line"><span class="nc">Cannot</span> <span class="n">use</span> <span class="nd">@TaskAction</span> <span class="n">annotation</span> <span class="n">on</span> <span class="n">method</span> <span class="nc">IncrementalTask</span><span class="o">.</span><span class="na">taskAction</span><span class="n">$gradle_core</span><span class="o">()</span> <span class="n">because</span> <span class="kd">interface</span> <span class="nc">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">api</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">incremental</span><span class="o">.</span><span class="na">IncrementalTaskInputs</span> <span class="n">is</span> <span class="n">not</span> <span class="n">a</span> <span class="n">valid</span> <span class="n">parameter</span> <span class="n">to</span> <span class="n">an</span> <span class="n">action</span> <span class="n">method</span><span class="o">.</span>
</span><span class="line">
</span><span class="line"><span class="o">*</span> <span class="nl">Try:</span>
</span><span class="line"><span class="o">&gt;</span> <span class="nc">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">debug</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">more</span> <span class="n">log</span> <span class="n">output</span><span class="o">.</span>
</span><span class="line"><span class="o">&gt;</span> <span class="nc">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">scan</span> <span class="n">to</span> <span class="n">get</span> <span class="n">full</span> <span class="n">insights</span><span class="o">.</span>
</span><span class="line">
</span><span class="line"><span class="o">*</span> <span class="nc">Exception</span> <span class="nl">is:</span>
</span><span class="line"><span class="n">com</span><span class="o">.</span><span class="na">intellij</span><span class="o">.</span><span class="na">openapi</span><span class="o">.</span><span class="na">externalSystem</span><span class="o">.</span><span class="na">model</span><span class="o">.</span><span class="na">ExternalSystemException</span><span class="o">:</span> <span class="nc">Could</span> <span class="n">not</span> <span class="n">create</span> <span class="n">task</span> <span class="err">'</span><span class="o">:</span><span class="n">generateDebugRFile</span><span class="err">'</span><span class="o">.</span>
</span><span class="line"><span class="nc">Cannot</span> <span class="n">use</span> <span class="nd">@TaskAction</span> <span class="n">annotation</span> <span class="n">on</span> <span class="n">method</span> <span class="nc">IncrementalTask</span><span class="o">.</span><span class="na">taskAction</span><span class="n">$gradle_core</span><span class="o">()</span> <span class="n">because</span> <span class="kd">interface</span> <span class="nc">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">api</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">incremental</span><span class="o">.</span><span class="na">IncrementalTaskInputs</span> <span class="n">is</span> <span class="n">not</span> <span class="n">a</span> <span class="n">valid</span> <span class="n">parameter</span> <span class="n">to</span> <span class="n">an</span> <span class="n">action</span> <span class="n">method</span><span class="o">.</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<p>根据分析上面的错误信息，判定与 gradle 有关，和修改的 kotlin 代码无关。</p>

<p>经过一些简短尝试，最终确定是 gradle 版本不匹配的问题（主要由这一句推断 because interface org.gradle.api.tasks.incremental.IncrementalTaskInputs is not a valid parameter to an action method.）。</p>

<h2 id="原因与解法">原因与解法</h2>
<ul>
  <li>原因为 Android Gradle Plugin 与 gradle 不匹配。</li>
  <li>可以修改 gradle plugin 版本，也可以修改 gradle 版本。</li>
</ul>

<h3 id="修改-agp-版本">修改 AGP 版本</h3>
<p>classpath ‘com.android.tools.build:gradle:7.1.2’    // The Android Gradle plugin.</p>

<h3 id="修改-gradle-版本">修改 gradle 版本</h3>
<p>修改gradle/wrapper/gradle-wrapper.properties</p>

<p>distributionUrl=https://services.gradle.org/distributions/gradle-8.0-all.zip</p>

<p>修改成（或者对应的gradle 版本） 
distributionUrl=https://services.gradle.org/distributions/gradle-7.4-all.zip</p>

<h3 id="如何确定-agp-与-gradle-对应关系">如何确定 AGP 与 gradle 对应关系</h3>
<p>查询，请访问 这里 https://developer.android.com/build/releases/gradle-plugin?#updating-gradle</p>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 模拟器实现 hosts 修改]]></title>
    <link href="https://droidyue.com/blog/2023/03/12/how-to-modify-android-emulator-hosts/"/>
    <updated>2023-03-12T20:50:00+08:00</updated>
    <id>https://droidyue.com/blog/2023/03/12/how-to-modify-android-emulator-hosts</id>
    <content type="html"><![CDATA[<p>有时候我们需要使用 Android 模拟器来 绑定一下 hosts 来实现功能的开发与验证，刚好最近遇到了这样的需求，处理完成，简单记录一下。</p>

<!--more-->

<h2 id="替换m1-实现针对-苹果-m1-芯片才需要处理">替换m1 实现（针对 苹果 M1 芯片才需要处理）</h2>
<p>下载这个文件 https://github.com/google/android-emulator-m1-preview/releases/download/0.2/emulator-darwin-aarch64-0.2-engine-only.zip</p>

<p>解压，然后将 <code class="language-plaintext highlighter-rouge">emulator</code> 和 <code class="language-plaintext highlighter-rouge">emulator-check</code> 替换掉这里面的文件 <code class="language-plaintext highlighter-rouge">~/Library/Android/sdk/tools/</code> （原有的可以备份为 xxx_backup）</p>

<h2 id="查看-avd_id">查看 avd_id</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">~/Library/Android/sdk/tools/emulator <span class="nt">-list-avds</span>
</span><span class="line">Pixel6ProAPI33
</span><span class="line">Pixel_3a_API_33_arm64-v8a
</span><span class="line">Pixel_6_API_22
</span><span class="line">Pixel_6_API_28
</span><span class="line">Pixel_6_Pro_API_23
</span><span class="line">Pixel_6_Pro_API_30_X86</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="启动-avd可写入状态">启动 avd，可写入状态</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">~/Library/Android/sdk/tools/emulator <span class="nt">-avd</span> Pixel_3a_API_33_arm64-v8a  <span class="nt">-writable-system</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="新起终端tab-执行">新起终端tab 执行</h2>
<ol>
  <li>adb root</li>
  <li>adb remount</li>
  <li>adb push your_hosts_on_mac /etc/hosts</li>
</ol>

<h2 id="验证ping">验证ping</h2>
<p>假设上面的 hosts 我们新增了 <code class="language-plaintext highlighter-rouge">127.0.0.1	baidu.com</code></p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">adb shell
</span><span class="line">
</span><span class="line">ping baidu.com
</span><span class="line">PING baidu.com <span class="o">(</span>127.0.0.1<span class="o">)</span> 56<span class="o">(</span>84<span class="o">)</span> bytes of data.
</span><span class="line">64 bytes from baidu.com <span class="o">(</span>127.0.0.1<span class="o">)</span>: <span class="nv">icmp_seq</span><span class="o">=</span>1 <span class="nv">ttl</span><span class="o">=</span>64 <span class="nb">time</span><span class="o">=</span>1.55 ms
</span><span class="line">64 bytes from baidu.com <span class="o">(</span>127.0.0.1<span class="o">)</span>: <span class="nv">icmp_seq</span><span class="o">=</span>2 <span class="nv">ttl</span><span class="o">=</span>64 <span class="nb">time</span><span class="o">=</span>0.180 ms
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>注意： hosts 修改建议在 mac 上进行处理，然后使用<code class="language-plaintext highlighter-rouge">adb push your_hosts_on_mac /etc/hosts</code> 替换手机内的hosts。手机内置的 vi 很弱，可能无法编辑。</p>

<p>以上。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vs Code 快速实现 重写 方法]]></title>
    <link href="https://droidyue.com/blog/2023/02/12/how-to-override-methods-in-vscode/"/>
    <updated>2023-02-12T20:20:00+08:00</updated>
    <id>https://droidyue.com/blog/2023/02/12/how-to-override-methods-in-vscode</id>
    <content type="html"><![CDATA[<p>作为一个从 Android Studio/IntelliJ 切到 VS code 的开发者，一开始会遇到各种不适应的情况。 比如快捷键不一样，使用习惯不一样等。</p>

<p>这里将简单记录一下 个人遇到的一些痛点，比如如何重写方法。</p>

<!--more-->

<p>在 Android Studio/ IntelliJ 中，使用起来很简单，比如弹出这个菜单，选择 <code class="language-plaintext highlighter-rouge">Override Methods</code> 即可，实现重写 <code class="language-plaintext highlighter-rouge">initState</code> 方法</p>

<p><img src="https://asset.droidyue.com/image/2023/h1/as_intellij_override_methods.png" alt="https://asset.droidyue.com/image/2023/h1/as_intellij_override_methods.png" /></p>

<p>但是切到 Vs Code 后，发现找不到快捷键，后来经过一些摸索，还是找到了 如何快速实现方法重写的方法。</p>

<p>如下图，只需要输入待重写的方法的首字母，即可弹出提示。</p>

<p><img src="https://asset.droidyue.com/image/2023/h1/vscode_override_method.png" alt="https://asset.droidyue.com/image/2023/h1/vscode_override_method.png" /></p>

<p>VS Code 的方式显得会更加的简单。（后来才发现同样的方式 在 Android Studio/Intellij 也支持，Orz）</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Merge(Pull) Request 推荐的标签列表]]></title>
    <link href="https://droidyue.com/blog/2022/11/27/recommended-lables-merge-requests-or-pull-requests/"/>
    <updated>2022-11-27T21:35:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/11/27/recommended-lables-merge-requests-or-pull-requests</id>
    <content type="html"><![CDATA[<h2 id="一个merge-request-的-阶段">一个Merge Request 的 阶段</h2>
<ol>
  <li>代码添加或修改,需要进行review</li>
  <li>代码review结束,需要修改</li>
  <li>重复步骤1和步骤2,直到达到可以合并的标准</li>
</ol>

<!--more-->

<h2 id="角色">角色</h2>
<ul>
  <li>MR submitter 负责提交Merge Request,并针对review做修改</li>
  <li>MR reviewer  负责review Merge Request,提出MR中存在的问题,该角色可以对应多个人</li>
  <li>MR dispatcher 负责分发MR,修改或增加MR reviewer</li>
  <li>MR terminator  最终负责MR结果走向的人,比如合并或者关闭</li>
</ul>

<h3 id="注意">注意</h3>
<ul>
  <li>上述角色至少需要两个人</li>
  <li>因权限问题, MR reviewer 可能无权限合并该MR</li>
</ul>

<h2 id="有哪些标签">有哪些标签</h2>
<h3 id="mrneeds-reviewmr需要review">MR:Needs Review(MR:需要Review)</h3>

<ul>
  <li>当MR创建或者进行了更新,需要人员Review时,MR submitter 设置该标签</li>
  <li>如果MR对应的内容不需要跟版,不需要现在合并的,不要增加该Lable</li>
  <li>如果一个MR,当前的label不包含MR:Needs Review,MR reviewer 则不会review</li>
</ul>

<h3 id="mrreviewed-with-commentsmr需要修改">MR:Reviewed With Comments(MR:需要修改)</h3>
<ul>
  <li>MR reviewer 进行了review,并提出了一些评论来记录发现的问题和疑问</li>
  <li>MR reviewer 移除 MR:Needs Review 并添加标签 MR:Reviewed With Comments</li>
  <li>MR submitter 根据提出的问题和疑问进行修改或回答,当修改完毕后,移除标签 MR:Reviewed With Comments,并设置MR:Needs Review</li>
</ul>

<h3 id="good-to-merge可以合并">Good to Merge(可以合并)</h3>
<ul>
  <li>经过上面的来回操作,在某一点,MR达到了一个可以合并的时候,这时候需要移除前面的标签,设置成Good to Merge</li>
  <li>设置这个标签,需要由MR reviewer 操作,而不是MR submitter</li>
  <li>设置完这个标签后,MR不需要再更新</li>
  <li>因MR reviewer不一定有merge权限,这一标签还是有必要的</li>
</ul>

<h3 id="do-not-merge请勿合并">Do Not Merge(请勿合并)</h3>
<ul>
  <li>禁止合并标签,该MR可以被 review,但是不要合并进来.</li>
  <li>适用于未来的需求,目前尚不需要加入到主分支</li>
  <li>辅助标签,更加明确表明不需要合并当前MR</li>
</ul>

<h3 id="待验收">待验收</h3>
<ul>
  <li>该功能没有开始进行验收(测试,UI,UE,产品,数据等)</li>
  <li>如果当前MR包含待验收,通常不会被合并</li>
</ul>

<h3 id="验收中">验收中</h3>
<ul>
  <li>该功能正在处于验收中(测试,UI,UE,产品,数据等)</li>
  <li>如果当前MR包含该标签,通常不会被合并</li>
</ul>

<h3 id="验收通过">验收通过</h3>
<ul>
  <li>该功能已经通过验收(测试,UI,UE,产品,数据等)</li>
  <li>如果当前MR包含验收通过,可以进行合并</li>
</ul>

<h3 id="bugfix">BugFix</h3>
<ul>
  <li>仅用于修复线上版本的崩溃提交时,使用</li>
</ul>

<h3 id="可能不上线">可能不上线</h3>
<ul>
  <li>有些MR已经完成,但不确定什么版本引入,需要增加该标签</li>
</ul>

<h3 id="技术需求">技术需求</h3>
<ul>
  <li>非产品迭代需求
    <h2 id="references">References</h2>
  </li>
  <li>https://engineering.invisionapp.com/post/pr-labels/</li>
</ul>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中国特惠！多平台广告屏蔽专家 AdGuard 买断仅需 119 元起]]></title>
    <link href="https://droidyue.com/blog/2022/11/27/adguard-no-more-ads-mac-windows-ios-android/"/>
    <updated>2022-11-27T21:23:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/11/27/adguard-no-more-ads-mac-windows-ios-android</id>
    <content type="html"><![CDATA[<p>网络垃圾广告令人深恶痛绝，它不仅浪费流量、拖慢设备性能，还存在诸多安全隐患！所以很多用户选用 <strong>AdGuard</strong> 来对付这种「数字牛皮癣」。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/adguard/1.png" alt="image alt" /></p>

<p>点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/31?cid=wncr9wz5">专属优惠链接</a>，前往数码荔枝下单 AdGuard 终生版最低仅需 <strong>119</strong> 元，新注册用户再享受立减 <strong>5</strong> 元优惠！</p>

<!--more-->

<h2 id="全方位广告拦截">全方位广告拦截</h2>

<p>为了应对无孔不入的垃圾广告，大家也许已经尝试过不少工具。</p>

<p>目前大多数的广告拦截工具仅支持<strong>电脑网页端</strong>，同时因为技术问题，往往需要逐个浏览器单独配置，最后效果还很一般 (比如面对反屏蔽脚本时无能为力)。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/adguard/2.png" alt="image alt" /></p>

<p>AdGuard 不仅内置防反屏蔽功能，同时支持 Win、Mac、安卓、iOS 四大主流系统，而且一经启用，无须额外配置即可在系统内生效！</p>

<p>AdGuard 还可以通过屏蔽垃圾信息，净化网页和软件，让页面更快完成载入，有效节省带宽流量和系统性能。</p>

<p>以视频播放前的贴片广告为例，这类可恶的广告，短则几十秒，长则数分钟！非常浪费时间。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/adguard/3.gif" alt="image alt" /></p>

<p>在安装 AdGuard 并启动后，用户再通过浏览器浏览视频，就能享受如同 B 站一般，无广告直接播放的畅快体验 (屏蔽功能不支持国内部分网站和 App)。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/adguard/4.gif" alt="image alt" /></p>

<p>以搜索同一个常见疾病为例，在没有拦截广告时，搜索结果通常会<strong>置顶多条广告信息</strong>。在开启拦截后，搜索结果会清爽得多。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/adguard/5.png" alt="image alt" /></p>

<p>赶快点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/31?cid=wncr9wz5">专属优惠链接</a>购买 AdGuard 畅享无广告的清爽体验，终生版仅需 <strong>119</strong> 元起！</p>

<h2 id="隐私与保护">隐私与保护</h2>

<p>无论是大人还是小孩，如今每天接触互联网的时间越来越多。怎样保护个人隐私，怎样让孩子时刻远离危险网站，正困扰着无数人。</p>

<p>除了过滤广告，AdGuard 还提供了「隐形模式」等功能，可以帮助用户远离成千上万的在线跟踪器，保护用户的数据免受网络分析：</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/adguard/6.png" alt="image alt" /></p>

<p>它能通过隐藏搜索记录、User-Agent 以及阻止网站通过 Cookie、IP 地址等信息追踪到你，实现对个人信息的有效保护。</p>

<p>AdGuard 还内置了 DNS 保护、危险网站警告、家长控制等功能来为用户保驾护航。当用户即将进入<strong>钓鱼、欺诈或恶意网站</strong>时，AdGuard 会向用户发出警告。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/adguard/7.png" alt="image alt" /></p>

<p>利用家长控制功能，简单操作就能建立<strong>黑白名单</strong>，设定允许和禁止访问的网站，配合阻止下载可执行文件的功能，切实避免小朋友接触到有害的网站 / 文件。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/adguard/8.png" alt="image alt" /></p>

<h2 id="实用扩展功能">实用扩展功能</h2>

<p>AdGuard 一大特色在于它提供了强大的<strong>可扩展性</strong>，通过快速迭代且持续不断的「进化」来切实保护你的网络安全：</p>

<ul>
  <li>AdGuard 助手：网页悬浮球帮你管理过滤选项；</li>
  <li>弹窗拦截器：拦截烦人的网页弹窗广告；</li>
  <li>Web of Trust：检测网页的信誉度来判断是否安全；</li>
  <li>AdGuard Extra：应对常规广告拦截规则无效的复杂情况……</li>
</ul>

<p><img src="https://asset.droidyue.com/image/lizhi_io/adguard/9.png" alt="image alt" /></p>

<p>AdGuard 是一款少见的，能同时在广告拦截和网络安全上有着亮眼表现的工具，它在扩展功能上的持续开发更显示出了十足的诚意。</p>

<p>如果你需要一款支持多系统 + 全局广告拦截 + 个人隐私保护 + 儿童安全浏览 + 丰富扩展功能的工具，可以选择的大概只有 AdGuard 了！</p>

<p>它是超级聪明的广告屏蔽专家，更是值得信赖的安全防护墙！</p>

<p>马上点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/31?cid=wncr9wz5">专属优惠链接</a>，AdGuard 终生版最低仅需 <strong>119</strong> 元！新注册用户再享受立减 <strong>5</strong> 元优惠，心动不如行动，马上入手吧！</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 FVM 解决 flutter 3 无法添加 uploader 问题]]></title>
    <link href="https://droidyue.com/blog/2022/11/20/use-fvm-to-add-unpub-uploaders/"/>
    <updated>2022-11-20T21:41:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/11/20/use-fvm-to-add-unpub-uploaders</id>
    <content type="html"><![CDATA[<p>Flutter 3 之后，移除了 添加 uploader 的功能，这使得一些使用unpub 的用户很是苦恼，所以想要继续使用命令添加 uploader， 需要切回 flutter 2 才可以。</p>

<p>这里简单介绍一个很便捷的方式来处理上面的问题，就是使用 fvm 来指定 flutter 2 来执行 uploader 添加。</p>

<!--more-->

<h2 id="安装-fvm">安装 FVM</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">brew tap leoafarias/fvm
</span><span class="line">brew install fvm</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>注： 如果没有安装homebrew， 需要安装一下。</p>

<h2 id="使用">使用</h2>

<p>如下内容保存为脚本 <code class="language-plaintext highlighter-rouge">addUnpubUploader.sh</code></p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">#!/bin/bash
</span><span class="line">fvm spawn 2.10.3 packages pub uploader  add $1 --verbose</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行脚本</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">bash addUnpubUploader.sh aaa@gmail.com </span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="referrence">Referrence</h2>
<ul>
  <li>https://fvm.app/</li>
</ul>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AAPT2 aapt2-7.2.2-7984345-osx Daemon #5: Idle daemon unexpectedly exit. This should not happen 问题解决]]></title>
    <link href="https://droidyue.com/blog/2022/11/14/aapt2-aapt2-7-dot-2-2-7984345-osx-daemon-number-5-idle-daemon-unexpectedly-exit-this-should-not-happen/"/>
    <updated>2022-11-14T21:28:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/11/14/aapt2-aapt2-7-dot-2-2-7984345-osx-daemon-number-5-idle-daemon-unexpectedly-exit-this-should-not-happen</id>
    <content type="html"><![CDATA[<p>CI 构建机，一直有概率出现构建失败的情况，查看了日志，得到了这样的相关错误信息</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">AAPT2 aapt2-7.2.2-7984345-osx Daemon <span class="c">#7: Idle daemon unexpectedly exit. This should not happen.</span>
</span><span class="line">15:32:49 <span class="o">[</span>        <span class="o">]</span> AAPT2 aapt2-7.2.2-7984345-osx Daemon <span class="c">#8: Idle daemon unexpectedly exit. This should not happen.</span>
</span><span class="line">15:32:49 <span class="o">[</span>        <span class="o">]</span> AAPT2 aapt2-7.2.2-7984345-osx Daemon <span class="c">#0: shutdown</span>
</span><span class="line">15:32:49 <span class="o">[</span>  +98 ms] AAPT2 aapt2-7.2.2-7984345-osx Daemon <span class="c">#6: Idle daemon unexpectedly exit. This should not happen.</span>
</span><span class="line">15:32:49 <span class="o">[</span>        <span class="o">]</span> AAPT2 aapt2-7.2.2-7984345-osx Daemon <span class="c">#4: Idle daemon unexpectedly exit. This should not happen.</span>
</span><span class="line">15:32:49 <span class="o">[</span>        <span class="o">]</span> AAPT2 aapt2-7.2.2-7984345-osx Daemon <span class="c">#3: Idle daemon unexpectedly exit. This should not happen.</span>
</span><span class="line">15:32:49 <span class="o">[</span>        <span class="o">]</span> AAPT2 aapt2-7.2.2-7984345-osx Daemon <span class="c">#5: Idle daemon unexpectedly exit. This should not happen.</span>
</span><span class="line">15:32:49 <span class="o">[</span>        <span class="o">]</span> AAPT2 aapt2-7.2.2-7984345-osx Daemon <span class="c">#1: Idle daemon unexpectedly exit. This should not happen.</span>
</span><span class="line">15:32:49 <span class="o">[</span> +499 ms] The message received from the daemon indicates that the daemon has disappeared.</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<h2 id="解决方法">解决方法</h2>
<ul>
  <li>看日志感觉是 Gradle 守护进程的问题</li>
  <li>想要既保持 Gralde 守护进程，又要解决这个问题，需要更多的时间</li>
  <li>比较简单的方式就是 禁用 Gradle 守护进程。</li>
</ul>

<h3 id="命令参数传递">命令参数传递</h3>
<ul>
  <li>适用于能够直接使用<code class="language-plaintext highlighter-rouge">gradlew</code></li>
  <li>也适用于不想全局应用配置的情况</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">./gradlew <span class="nt">--no-daemon</span> assembleXXX</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="gradleproperties">gradle.properties</h3>
<ul>
  <li>适用于 无法直接配置 <code class="language-plaintext highlighter-rouge">--no-daemon</code> 的情况，比如 flutter 执行 Android 构建。</li>
  <li>适用于全局配置</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="c">## 修改这个文件 ~/.gradle/gradle.properties 如果没有，直接创建即可</span>
</span><span class="line">org.gradle.daemon<span class="o">=</span><span class="nb">false</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>注意： 这里配置完成，最好执行一下<code class="language-plaintext highlighter-rouge">./gradlew --stop</code> 确保不适用已有的守护进程。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git clone 使用代理，实现百倍加速]]></title>
    <link href="https://droidyue.com/blog/2022/10/26/speed-up-git-clone-via-proxy/"/>
    <updated>2022-10-26T08:51:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/10/26/speed-up-git-clone-via-proxy</id>
    <content type="html"><![CDATA[<p>有时候我们对 github 的仓库进行 clone 的时候，会发现很慢，甚至是龟速，很不够效率。好在有一个简单且快捷的方法来倍速提升clone 效率。</p>

<p>我们通过检索 git 的帮助文档发现有这样的描述</p>

<blockquote>
  <p>If you just want to use proxy on a specified repository, don’t need on other repositories. The preferable way is the -c, –config &lt;key=value&gt; option when you git clone a repository. e.g.</p>
</blockquote>

<!--more-->

<h2 id="实践起来">实践起来</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">git clone https://github.com/flutter/flutter.git <span class="nt">--config</span> <span class="s2">"http.proxy=192.168.1.6:1611"</span></span></code></pre></td></tr></table></div></figure></notextile></div>

<p>上面的例子</p>

<ul>
  <li>通过 <code class="language-plaintext highlighter-rouge">--config "http.proxy=192.168.1.6:1611"</code> 设置代理</li>
  <li>其中 <code class="language-plaintext highlighter-rouge">192.168.1.6:1611</code> 是代理的地址，需要自己搭建或者可用的</li>
</ul>

<p>上面的配置好，再次执行，基本上可以得到百倍的提效。</p>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter 处理 Error Setter not found AsciiChar 问题]]></title>
    <link href="https://droidyue.com/blog/2022/10/11/flutter-error-member-not-found-asciichar/"/>
    <updated>2022-10-11T07:35:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/10/11/flutter-error-member-not-found-asciichar</id>
    <content type="html"><![CDATA[<p>当我们进行了 flutter 升级后，有时候运行程序会发现无法编译，出现下面这样的错误</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>   +2 ms] ../../../../.pub-cache/hosted/pub.flutter-io.cn/cached_network_image-3.2.0/lib/src/image_provider/multi_image_stream_completer.dart:152:22: Warning: Operand of null-aware operation <span class="s1">'?.'</span> has
</span><span class="line"><span class="nb">type</span> <span class="s1">'SchedulerBinding'</span> which excludes null.
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>  - <span class="s1">'SchedulerBinding'</span> is from <span class="s1">'package:flutter/src/scheduler/binding.dart'</span> <span class="o">(</span><span class="s1">'../../../../code/flutter_3/packages/flutter/lib/src/scheduler/binding.dart'</span><span class="o">)</span><span class="nb">.</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>     SchedulerBinding.instance?.scheduleFrameCallback<span class="o">(</span>_handleAppFrame<span class="o">)</span><span class="p">;</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>                      ^
</span><span class="line"><span class="o">[</span> +402 ms] <span class="o">[</span> +414 ms] ../../../../.pub-cache/hosted/pub.flutter-io.cn/win32-2.3.1/lib/src/structs.g.dart:554:31: Error: Member not found: <span class="s1">'UnicodeChar'</span><span class="nb">.</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>   int get UnicodeChar <span class="o">=&gt;</span> Char.UnicodeChar<span class="p">;</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>                               ^^^^^^^^^^^
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span> ../../../../.pub-cache/hosted/pub.flutter-io.cn/win32-2.3.1/lib/src/structs.g.dart:555:38: Error: Setter not found: <span class="s1">'UnicodeChar'</span><span class="nb">.</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>   <span class="nb">set </span>UnicodeChar<span class="o">(</span>int value<span class="o">)</span> <span class="o">=&gt;</span> Char.UnicodeChar <span class="o">=</span> value<span class="p">;</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>                                      ^^^^^^^^^^^
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span> ../../../../.pub-cache/hosted/pub.flutter-io.cn/win32-2.3.1/lib/src/structs.g.dart:557:29: Error: Member not found: <span class="s1">'AsciiChar'</span><span class="nb">.</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>   int get AsciiChar <span class="o">=&gt;</span> Char.AsciiChar<span class="p">;</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>                             ^^^^^^^^^
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span> ../../../../.pub-cache/hosted/pub.flutter-io.cn/win32-2.3.1/lib/src/structs.g.dart:558:36: Error: Setter not found: <span class="s1">'AsciiChar'</span><span class="nb">.</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>   <span class="nb">set </span>AsciiChar<span class="o">(</span>int value<span class="o">)</span> <span class="o">=&gt;</span> Char.AsciiChar <span class="o">=</span> value<span class="p">;</span>
</span><span class="line"><span class="o">[</span>        <span class="o">]</span> <span class="o">[</span>        <span class="o">]</span>                                    ^^^^^^^^^
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!--more-->

<p>对于这种问题，解决起来也比较简单，执行</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">flutter pub upgrade</span></code></pre></td></tr></table></div></figure></notextile></div>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iSlide 插件买两年送 180 天，每月不到 6 元钱]]></title>
    <link href="https://droidyue.com/blog/2022/10/11/to-write-better-ppt-use-islide/"/>
    <updated>2022-10-11T07:13:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/10/11/to-write-better-ppt-use-islide</id>
    <content type="html"><![CDATA[<p>是不是每次在制作 PPT 时，都丝毫没有头绪？各种模板东拼西凑没有章法？你和 PPT 高手之间，其实就只差一个 iSlide。</p>

<p><strong>iSlide</strong> 是一款口碑优秀的 PPT 插件，海量在线资源库，超 30 万专业模板、素材一键插入 PPT，更有一键排版等 38 种辅助功能，真正实现「让 PPT 设计简单起来」。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/1.png?v=111" alt="https://asset.droidyue.com/image/lizhi_io/islide/1.png" /></p>

<p>​iSlide 目前正在限时优惠中，前往数码荔枝<strong>买两年送 180 天，买一年送 90 天</strong>，每月不到 <strong>6 元</strong>钱，新用户首单还能<strong>立减 5 元</strong>，非常值的价格别错过！</p>

<p>赶快点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/41?cid=wncr9wz5">专属优惠链接</a>收下这款人见人爱的 PPT 神器吧！订阅时长可叠加，趁现在便宜快买买买~</p>

<!--more-->

<h2 id="8-大资源库轻松找素材">8 大资源库，轻松找素材</h2>

<p>iSlide 内置 300,000+ PPT 模板，来自专业 PPT 模板设计团队，有原创正版保障，快速检索一键插入 PPT 文档。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/2.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/2.png" /></p>

<p>8 大资源库为你所用，丰富的各类图标 / 图片 / 插图，可在原位置直接编辑替换，做 PPT 告别四处找素材，一个插件整合你要用的所有资源，轻松高效制作精美 PPT！</p>

<h2 id="智能图表实现数据可视化">智能图表实现数据可视化</h2>

<p>iSlide 智能图表改变传统图表的单一样式，拥有当下流行视觉化元素和风格，样式新颖更具设计感。</p>

<p>无需耗费大量时间精力，各种参数化调节，iSlide 让图表制作更简单直观，通俗易懂。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/3.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/3.png" /></p>

<p><strong>买两年送 180 天，买一年送 90 天，时长可无限叠加</strong>，长期需要的用户可多续费几年，每月不到 6 块钱，赶快<a href="https://store.lizhi.io/site/products/id/41?cid=wncr9wz5">点击购买</a>吧！</p>

<h2 id="智能对齐排版专治强迫症">智能对齐排版，专治强迫症</h2>

<p>iSlide 为大家提供了丰富的设计工具，涵盖对齐、大小调整、参考线布局、内容选择、矢量、剪贴板、吸附、旋转多种常用操作。告别徒手拖动排版，一键完成各个区域对齐超方便，让幻灯片排版更规范简单。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/4.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/4.png" /></p>

<p>无论是创建新文档，还是修改旧文档，都能帮你从繁琐的传统编辑中解脱，提升设计效率，呈现专业。</p>

<h2 id="更细致的色彩优化">更细致的色彩优化</h2>

<p>iSlide 将全球知名公司的色彩搭配方案共享上传，可以在「色彩库」中浏览并一键应用于当前的 PPT 文档，即便不懂设计，也能呈现专业。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/5.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/5.png" /></p>

<h2 id="更多辅助功能">更多辅助功能</h2>

<p>自己做的 PPT，其实是东一页西一页复制来的？iSlide「一键优化」功能非常适合你，只需轻点一下就能统一 PPT 字体 / 段落。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/6.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/6.png" /></p>

<p>还有图形矩阵 / 环形布局、图片统一裁剪、补间动画、PPT 瘦身压缩等多项功能，让你的 PPT 设计更简单。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/7.gif" alt="https://asset.droidyue.com/image/lizhi_io/islide/7.gif" /></p>

<p>现在点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/41?cid=wncr9wz5">专属优惠链接</a>购买 iSlide，<strong>买两年送 180 天，买一年送 90 天</strong>，每月不到 <strong>6 元</strong>钱，助你变身幻灯片高手！前往数码荔枝购买的新用户，首单<strong>立减 5 元</strong>！</p>

<hr />

<p>只有一个 iSlide 插件，还缺少 Office 中的 PowerPoint 软件？前往数码荔枝找拼车，官方牵头安全享受 Office 365 订阅，Excel、PowerPoint、Word 三件套安排上，还有 1TB OneDrive 放心用，<a href="https://store.lizhi.io/site/products/id/335?cid=wncr9wz5">点击立即上车</a>！</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复 Flutter 项目中 xxx.kt: (19, 8): Redeclaration: xxxManager]]></title>
    <link href="https://droidyue.com/blog/2022/10/04/fix-flutter-redeclaration-xxx-kotlin-error/"/>
    <updated>2022-10-04T21:21:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/10/04/fix-flutter-redeclaration-xxx-kotlin-error</id>
    <content type="html"><![CDATA[<p>在我们日常构建 Android app 包时，多少会遇到这样的问题</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.3/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (19, 8): Redeclaration: xxxManager
</span><span class="line">[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.3/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (79, 12): Redeclaration: gogogoResult
</span><span class="line">[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.3/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (82, 12): Redeclaration: gogogoListResult
</span><span class="line">[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (21, 8): Redeclaration: xxxManager
</span><span class="line">[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (94, 12): Redeclaration: gogogoResult
</span><span class="line">[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (97, 12): Redeclaration: gogogoListResult</span></code></pre></td></tr></table></div></figure></notextile></div>
<!--more-->

<h2 id="问题的原因">问题的原因</h2>
<ul>
  <li>因为 Kotlin 增量编译的bug。当你关闭增量编译时，该问题不会出现。</li>
</ul>

<h2 id="常用的解决办法">常用的解决办法</h2>
<ul>
  <li>flutter clean</li>
  <li>但是这个方法可能会比较重，因为它会清理掉一些多余的缓存，影响构建速度</li>
</ul>

<h2 id="更加轻量的解决办法">更加轻量的解决办法</h2>
<ul>
  <li>该方法只删除对应的pub 缓存，不删除其他的内容。</li>
</ul>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line"><span class="c">#!/bin/bash</span>
</span><span class="line">find ~/.pub-cache/hosted  <span class="nt">-name</span> <span class="s2">"</span><span class="nv">$1</span><span class="s2">-*"</span> <span class="nt">-type</span> d <span class="nt">-maxdepth</span> 2 | xargs <span class="nb">rm</span> <span class="nt">-rfv</span></span></code></pre></td></tr></table></div></figure></notextile></div>
<p>保存上述命令为脚本。</p>

<p>比如我们出问题的 pub 名称为 gogogo 我们只需要清除它的版本缓存就可以了。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="shell"><span class="line">
</span><span class="line">removePubCache.sh gogogo
</span><span class="line">/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/LICENSE
</span><span class="line">/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/test/gogogo_test.dart
</span><span class="line">/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/test
</span><span class="line">/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/CHANGELOG.md
</span><span class="line">/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/example/test/widget_test.dart
</span><span class="line">/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/example/test</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后执行一下<code class="language-plaintext highlighter-rouge"> flutter pub get --verbose</code>即可（需要）。</p>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 平台知名视频下载工具 Downie 4 买断仅需 79 元]]></title>
    <link href="https://droidyue.com/blog/2022/09/18/mac-video-download-tool-downie/"/>
    <updated>2022-09-18T21:31:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/09/18/mac-video-download-tool-downie</id>
    <content type="html"><![CDATA[<p>Downie 4 是一款 Mac 上备受好评的视频下载利器，支持 Youtube、B 站、优酷、爱奇艺、腾讯视频 等 1000+ 国内外视频流媒体网站。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE1.png" /></p>

<p>点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/280?cid=wncr9wz5">专属优惠链接</a>，下单 Downie 4 到手价只需 <strong>79</strong> 元，新注册用户再享立减 <strong>5</strong> 元优惠！</p>

<hr />

<h2 id="支持-1000-视频网站">支持 1000+ 视频网站</h2>

<p>从网站扒视频，最烦恼的就是工具不万能。部分站点轻松下载，另外的网站却不可用，大大拖慢效率……</p>

<p>在 Downie 4 下，这个问题几乎不存在。软件支持超过 1000 个视频站点，从 YouTube、TED、Vimeo，到爱奇艺、优酷、Bilibili、网易云音乐……基本上只要你用过的网站，它都能下载。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE2.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE2.png" /></p>

<!--more-->

<h2 id="多种方式高速下载">多种方式高速下载</h2>

<p>用 Downie 下载视频很简单，软件支持多种下载方式。无需充会员也不用排队，速度毫不含糊。 Downie 4 的下载速度对比上一版提升了 6 倍之多。</p>

<h3 id="拖拽链接下载">拖拽链接下载</h3>

<p>拖拽视频页面链接至 Dock 中或者菜单栏的 Downie 图标上，软件会自动创建下载任务。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE3.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE3.png" /></p>

<h3 id="粘贴链接下载">粘贴链接下载</h3>

<p>复制视频网页链接，在软件中粘贴即可自动解析网站，开启视频下载。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE4.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE4.png" /></p>

<h3 id="浏览器插件下载">浏览器插件下载</h3>

<p>打开视频页面，点击 Downie 的浏览器插件图标，就可以一键在软件内创建视频下载任务。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE5.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE5.png" /></p>

<h3 id="关键字搜索下载">关键字搜索下载</h3>

<p>直接使用 Downie 的搜索功能，查找关键词有关的视频进行下载。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE6.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE6.png" /></p>

<h2 id="自定义下载功能">自定义下载功能</h2>

<p>除了简单的视频下载功能，Downie 还能够自定义下载选项，无论是下载 MP4 格式的视频，或者只需要视频的背景声音，软件都能实现。同时用户可自定义后期处理脚本，对下载的视频进行个性化处理。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE7.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE7.png" /></p>

<p>Downie 4 对于不支持的网站还可以手动提取视频内容，完成下载后会保存设置偏好，便于下次使用。同时 Downie 4 支持在菜单栏中直接控制，操作更加简单易用。</p>

<p>Downie 4 带来众多出色功能，点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/280?cid=wncr9wz5">专属优惠链接</a>，仅需 <strong>79</strong> 元，新注册用户再享立减 <strong>5</strong> 元优惠！</p>

<hr />

<h2 id="downie-下载视频的后处理">Downie 下载视频的后处理</h2>

<p>收藏达人，希望用统一的编码来保存 Downie 下载的内容？</p>

<p>创作达人，希望将 Downie 下载的视频转换为更适合剪辑软件处理的编码？</p>

<p>电影达人，希望将 Downie 下载的软件转成更适合移动设备的编码在旅途上观看？</p>

<p>试试与 Downie 同样优秀的 Permute 吧！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE8.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE8.png" /></p>

<p>Permute 和 Downie 出自同一家开发商，它是一款图片音视频格式转换软件，只需简单设置就能无缝对接 Downie，将 Downie 下载的分段视频合并为长视频。常用操作与 Downie 一样简单，拖拽倒入素材，一键即可转换。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE9.jpg" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE9.jpg" /></p>

<p>点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/62?cid=wncr9wz5">专属优惠链接</a>仅需 <strong>69</strong> 元即可带 Permute 回家。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[技术小黑屋]]></title>
  <link href="https://droidyue.com/atom.xml" rel="self"/>
  <link href="https://droidyue.com/"/>
  <updated>2022-10-11T07:22:24+08:00</updated>
  <id>https://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iSlide 插件买两年送 180 天，每月不到 6 元钱]]></title>
    <link href="https://droidyue.com/blog/2022/10/11/to-write-better-ppt-use-islide/"/>
    <updated>2022-10-11T07:13:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/10/11/to-write-better-ppt-use-islide</id>
    <content type="html"><![CDATA[<p>是不是每次在制作 PPT 时，都丝毫没有头绪？各种模板东拼西凑没有章法？你和 PPT 高手之间，其实就只差一个 iSlide。</p>

<p><strong>iSlide</strong> 是一款口碑优秀的 PPT 插件，海量在线资源库，超 30 万专业模板、素材一键插入 PPT，更有一键排版等 38 种辅助功能，真正实现「让 PPT 设计简单起来」。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/1.png?v=111" alt="https://asset.droidyue.com/image/lizhi_io/islide/1.png" /></p>

<p>​iSlide 目前正在限时优惠中，前往数码荔枝<strong>买两年送 180 天，买一年送 90 天</strong>，每月不到 <strong>6 元</strong>钱，新用户首单还能<strong>立减 5 元</strong>，非常值的价格别错过！</p>

<p>赶快点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/41?cid=wncr9wz5">专属优惠链接</a>收下这款人见人爱的 PPT 神器吧！订阅时长可叠加，趁现在便宜快买买买~</p>

<!--more-->


<h2>8 大资源库，轻松找素材</h2>

<p>iSlide 内置 300,000+ PPT 模板，来自专业 PPT 模板设计团队，有原创正版保障，快速检索一键插入 PPT 文档。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/2.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/2.png" /></p>

<p>8 大资源库为你所用，丰富的各类图标 / 图片 / 插图，可在原位置直接编辑替换，做 PPT 告别四处找素材，一个插件整合你要用的所有资源，轻松高效制作精美 PPT！</p>

<h2>智能图表实现数据可视化</h2>

<p>iSlide 智能图表改变传统图表的单一样式，拥有当下流行视觉化元素和风格，样式新颖更具设计感。</p>

<p>无需耗费大量时间精力，各种参数化调节，iSlide 让图表制作更简单直观，通俗易懂。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/3.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/3.png" /></p>

<p><strong>买两年送 180 天，买一年送 90 天，时长可无限叠加</strong>，长期需要的用户可多续费几年，每月不到 6 块钱，赶快<a href="https://store.lizhi.io/site/products/id/41?cid=wncr9wz5">点击购买</a>吧！</p>

<h2>智能对齐排版，专治强迫症</h2>

<p>iSlide 为大家提供了丰富的设计工具，涵盖对齐、大小调整、参考线布局、内容选择、矢量、剪贴板、吸附、旋转多种常用操作。告别徒手拖动排版，一键完成各个区域对齐超方便，让幻灯片排版更规范简单。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/4.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/4.png" /></p>

<p>无论是创建新文档，还是修改旧文档，都能帮你从繁琐的传统编辑中解脱，提升设计效率，呈现专业。</p>

<h2>更细致的色彩优化</h2>

<p>iSlide 将全球知名公司的色彩搭配方案共享上传，可以在「色彩库」中浏览并一键应用于当前的 PPT 文档，即便不懂设计，也能呈现专业。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/5.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/5.png" /></p>

<h2>更多辅助功能</h2>

<p>自己做的 PPT，其实是东一页西一页复制来的？iSlide「一键优化」功能非常适合你，只需轻点一下就能统一 PPT 字体 / 段落。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/6.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/6.png" /></p>

<p>还有图形矩阵 / 环形布局、图片统一裁剪、补间动画、PPT 瘦身压缩等多项功能，让你的 PPT 设计更简单。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/7.gif" alt="https://asset.droidyue.com/image/lizhi_io/islide/7.gif" /></p>

<p>现在点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/41?cid=wncr9wz5">专属优惠链接</a>购买 iSlide，<strong>买两年送 180 天，买一年送 90 天</strong>，每月不到 <strong>6 元</strong>钱，助你变身幻灯片高手！前往数码荔枝购买的新用户，首单<strong>立减 5 元</strong>！</p>

<hr />

<p>只有一个 iSlide 插件，还缺少 Office 中的 PowerPoint 软件？前往数码荔枝找拼车，官方牵头安全享受 Office 365 订阅，Excel、PowerPoint、Word 三件套安排上，还有 1TB OneDrive 放心用，<a href="https://store.lizhi.io/site/products/id/335?cid=wncr9wz5">点击立即上车</a>！</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复 Flutter 项目中 xxx.kt: (19, 8): Redeclaration: xxxManager]]></title>
    <link href="https://droidyue.com/blog/2022/10/04/fix-flutter-redeclaration-xxx-kotlin-error/"/>
    <updated>2022-10-04T21:21:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/10/04/fix-flutter-redeclaration-xxx-kotlin-error</id>
    <content type="html"><![CDATA[<p>在我们日常构建 Android app 包时，多少会遇到这样的问题</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.3/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (19, 8): Redeclaration: xxxManager
</span><span class='line'>[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.3/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (79, 12): Redeclaration: gogogoResult
</span><span class='line'>[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.3/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (82, 12): Redeclaration: gogogoListResult
</span><span class='line'>[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (21, 8): Redeclaration: xxxManager
</span><span class='line'>[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (94, 12): Redeclaration: gogogoResult
</span><span class='line'>[        ] e: /Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/android/src/main/kotlin/com/example/gogogo/xxxManager.kt: (97, 12): Redeclaration: gogogoListResult</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h2>问题的原因</h2>

<ul>
<li>因为 Kotlin 增量编译的bug。当你关闭增量编译时，该问题不会出现。</li>
</ul>


<h2>常用的解决办法</h2>

<ul>
<li>flutter clean</li>
<li>但是这个方法可能会比较重，因为它会清理掉一些多余的缓存，影响构建速度</li>
</ul>


<h2>更加轻量的解决办法</h2>

<ul>
<li>该方法只删除对应的pub 缓存，不删除其他的内容。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>find ~/.pub-cache/hosted  -name <span class="s2">&quot;$1-*&quot;</span> -type d -maxdepth 2 | xargs rm -rfv
</span></code></pre></td></tr></table></div></figure>


<p>保存上述命令为脚本。</p>

<p>比如我们出问题的 pub 名称为 gogogo 我们只需要清除它的版本缓存就可以了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>removePubCache.sh gogogo
</span><span class='line'>/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/LICENSE
</span><span class='line'>/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/test/gogogo_test.dart
</span><span class='line'>/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/test
</span><span class='line'>/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/CHANGELOG.md
</span><span class='line'>/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/example/test/widget_test.dart
</span><span class='line'>/Users/xxxxxxxxx/.pub-cache/hosted/unpub.xxxxx.com/gogogo-1.0.4/example/test
</span></code></pre></td></tr></table></div></figure>


<p>然后执行一下<code>flutter pub get --verbose</code>即可（需要）。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 平台知名视频下载工具 Downie 4 买断仅需 79 元]]></title>
    <link href="https://droidyue.com/blog/2022/09/18/mac-video-download-tool-downie/"/>
    <updated>2022-09-18T21:31:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/09/18/mac-video-download-tool-downie</id>
    <content type="html"><![CDATA[<p>Downie 4 是一款 Mac 上备受好评的视频下载利器，支持 Youtube、B 站、优酷、爱奇艺、腾讯视频 等 1000+ 国内外视频流媒体网站。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE1.png" /></p>

<p>点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/280?cid=wncr9wz5">专属优惠链接</a>，下单 Downie 4 到手价只需 <strong>79</strong> 元，新注册用户再享立减 <strong>5</strong> 元优惠！</p>

<hr />

<h2>支持 1000+ 视频网站</h2>

<p>从网站扒视频，最烦恼的就是工具不万能。部分站点轻松下载，另外的网站却不可用，大大拖慢效率……</p>

<p>在 Downie 4 下，这个问题几乎不存在。软件支持超过 1000 个视频站点，从 YouTube、TED、Vimeo，到爱奇艺、优酷、Bilibili、网易云音乐……基本上只要你用过的网站，它都能下载。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE2.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE2.png" /></p>

<!--more-->


<h2>多种方式高速下载</h2>

<p>用 Downie 下载视频很简单，软件支持多种下载方式。无需充会员也不用排队，速度毫不含糊。 Downie 4 的下载速度对比上一版提升了 6 倍之多。</p>

<h3>拖拽链接下载</h3>

<p>拖拽视频页面链接至 Dock 中或者菜单栏的 Downie 图标上，软件会自动创建下载任务。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE3.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE3.png" /></p>

<h3>粘贴链接下载</h3>

<p>复制视频网页链接，在软件中粘贴即可自动解析网站，开启视频下载。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE4.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE4.png" /></p>

<h3>浏览器插件下载</h3>

<p>打开视频页面，点击 Downie 的浏览器插件图标，就可以一键在软件内创建视频下载任务。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE5.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE5.png" /></p>

<h3>关键字搜索下载</h3>

<p>直接使用 Downie 的搜索功能，查找关键词有关的视频进行下载。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE6.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE6.png" /></p>

<h2>自定义下载功能</h2>

<p>除了简单的视频下载功能，Downie 还能够自定义下载选项，无论是下载 MP4 格式的视频，或者只需要视频的背景声音，软件都能实现。同时用户可自定义后期处理脚本，对下载的视频进行个性化处理。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE7.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE7.png" /></p>

<p>Downie 4 对于不支持的网站还可以手动提取视频内容，完成下载后会保存设置偏好，便于下次使用。同时 Downie 4 支持在菜单栏中直接控制，操作更加简单易用。</p>

<p>Downie 4 带来众多出色功能，点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/280?cid=wncr9wz5">专属优惠链接</a>，仅需 <strong>79</strong> 元，新注册用户再享立减 <strong>5</strong> 元优惠！</p>

<hr />

<h2>Downie 下载视频的后处理</h2>

<p>收藏达人，希望用统一的编码来保存 Downie 下载的内容？</p>

<p>创作达人，希望将 Downie 下载的视频转换为更适合剪辑软件处理的编码？</p>

<p>电影达人，希望将 Downie 下载的软件转成更适合移动设备的编码在旅途上观看？</p>

<p>试试与 Downie 同样优秀的 Permute 吧！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE8.png" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE8.png" /></p>

<p>Permute 和 Downie 出自同一家开发商，它是一款图片音视频格式转换软件，只需简单设置就能无缝对接 Downie，将 Downie 下载的分段视频合并为长视频。常用操作与 Downie 一样简单，拖拽倒入素材，一键即可转换。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE9.jpg" alt="https://asset.droidyue.com/image/lizhi_io/downie/%E5%9B%BE9.jpg" /></p>

<p>点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/62?cid=wncr9wz5">专属优惠链接</a>仅需 <strong>69</strong> 元即可带 Permute 回家。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Some runtime JAR files in the classpath have an incompatible version Kotlin 问题解决]]></title>
    <link href="https://droidyue.com/blog/2022/09/18/android-some-runtime-jar-files-in-the-classpath-have-an-incompatible-version-kotlin/"/>
    <updated>2022-09-18T21:17:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/09/18/android-some-runtime-jar-files-in-the-classpath-have-an-incompatible-version-kotlin</id>
    <content type="html"><![CDATA[<p>在 Android 工程中，随着依赖包的引入，也会出现 多个 Kotlin 版本的问题，比如会有下面这样的警告信息</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> ] &gt; Task :app:lintVitalAnalyzeRelease
</span><span class='line'>[        ] w: Runtime JAR files in the classpath should have the same version. These files were found in the classpath:
</span><span class='line'>[        ]     /Users/xxxxxxxxx/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk8/1.6.10/e80fe6ac3c3573a80305f5ec43f86b829e8ab53d/kotlin-stdlib-jdk8-1.6.10.jar (version 1.6)
</span><span class='line'>[        ]     /Users/xxxxxxxxx/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk7/1.7.10/1ef73fee66f45d52c67e2aca12fd945dbe0659bf/kotlin-stdlib-jdk7-1.7.10.jar (version 1.7)
</span><span class='line'>[        ]     /Users/xxxxxxxxx/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/1.7.10/d2abf9e77736acc4450dc4a3f707fa2c10f5099d/kotlin-stdlib-1.7.10.jar (version 1.7)
</span><span class='line'>[        ]     /Users/xxxxxxxxx/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-common/1.7.10/bac80c520d0a9e3f3673bc2658c6ed02ef45a76a/kotlin-stdlib-common-1.7.10.jar (version 1.7)
</span><span class='line'>[        ] w: Some runtime JAR files in the classpath have an incompatible version. Consider removing them from the classpath
</span><span class='line'>[  +98 ms] timber.lint.TimberIssueRegistry in /Users/xxxxxxxxx/.gradle/caches/transforms-3/d91983d38205de71b5c5d645c8d4eb47/transformed/jetified-timber-4.7.1/jars/lint.jar does not specify a vendor; see
</span><span class='line'>IssueRegistry#vendor
</span><span class='line'>[  +96 ms] e:
</span><span class='line'>/Users/xxxxxxxxx/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk7/1.7.10/1ef73fee66f45d52c67e2aca12fd945dbe0659bf/kotlin-stdlib-jdk7-1.7.10.jar!/META-INF/kotlin-stdlib-jdk7.kotlin_modul
</span><span class='line'>e: Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.7.1, expected version is 1.5.1.
</span><span class='line'>[        ] e:
</span><span class='line'>/Users/xxxxxxxxx/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/1.7.10/d2abf9e77736acc4450dc4a3f707fa2c10f5099d/kotlin-stdlib-1.7.10.jar!/META-INF/kotlin-stdlib.kotlin_module: Module was
</span><span class='line'>compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.7.1, expected version is 1.5.1.
</span><span class='line'>[        ] e:
</span><span class='line'>/Users/xxxxxxxxx/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-common/1.7.10/bac80c520d0a9e3f3673bc2658c6ed02ef45a76a/kotlin-stdlib-common-1.7.10.jar!/META-INF/kotlin-stdlib-common.kotlin
</span><span class='line'>_module: Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.7.1, expected version is 1.5.1.</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>解决起来很简单，强制指定依赖为统一的版本即可。</p>

<p>在 build.gradle(app下) 增加这些配置即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">configurations</span><span class="o">.</span><span class="na">all</span> <span class="o">{</span>
</span><span class='line'>   <span class="n">resolutionStrategy</span><span class="o">.</span><span class="na">force</span> <span class="s2">&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version&quot;</span>
</span><span class='line'>   <span class="n">resolutionStrategy</span><span class="o">.</span><span class="na">force</span> <span class="s2">&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version&quot;</span>
</span><span class='line'>   <span class="n">resolutionStrategy</span><span class="o">.</span><span class="na">force</span> <span class="s2">&quot;org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version&quot;</span>
</span><span class='line'>   <span class="n">resolutionStrategy</span><span class="o">.</span><span class="na">force</span> <span class="s2">&quot;org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter 3 迁移后编译 warnings 一键修复]]></title>
    <link href="https://droidyue.com/blog/2022/09/12/fix-flutter-3-warnings-quickly/"/>
    <updated>2022-09-12T22:15:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/09/12/fix-flutter-3-warnings-quickly</id>
    <content type="html"><![CDATA[<p>当我们的 app 支持 flutter 3 后，无论是编译速度，还是运行效率，方方面面会有很大的提升。但是在我们编译的时候，会有类似下面的这些警告。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>../../../your_pub/lib/src/framework.dart:275:26: Warning: Operand of null-aware operation <span class="s1">&#39;!&#39;</span> has <span class="nb">type</span> <span class="s1">&#39;SchedulerBinding&#39;</span> which excludes null.
</span><span class='line'><span class="o">[</span>        <span class="o">]</span>  - <span class="s1">&#39;SchedulerBinding&#39;</span> is from <span class="s1">&#39;package:flutter/src/scheduler/binding.dart&#39;</span> <span class="o">(</span><span class="s1">&#39;../../../code/flutter_3/packages/flutter/lib/src/scheduler/binding.dart&#39;</span><span class="o">)</span>.
</span><span class='line'><span class="o">[</span>        <span class="o">]</span>     <span class="k">if</span> <span class="o">(</span>SchedulerBinding.instance!.schedulerPhase <span class="o">==</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的警告虽然不会影响应用的编译，但是长久来看，还是需要解决的。</p>

<!--more-->


<h2>原因为何</h2>

<p>原因是从 flutter 3 开始, <code>SchedulerBinding.instance</code>返回的是一个 非 null 实例，当我们使用<code>SchedulerBinding.instance!.schedulerPhase</code> 会得到这样的警告<code>Warning: Operand of null-aware operation '!' has type 'SchedulerBinding' which excludes null.
</code></p>

<h2>如何解决</h2>

<p>解决起来很简单，按照下面的处理，将<code>!</code>去掉即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>SchedulerBinding.instance.schedulerPhase
</span></code></pre></td></tr></table></div></figure>


<h2>都有哪些场景</h2>

<p>flutter3 开始，下面这些都会有编译警告问题</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>SchedulerBinding.instance!.xxx
</span><span class='line'>SchedulerBinding.instance?.xxx
</span><span class='line'>
</span><span class='line'>WidgetsBinding.instance!.xxxx
</span><span class='line'>WidgetsBinding.instance?.xxxx
</span><span class='line'>
</span><span class='line'>PaintingBinding.instance?.xxx
</span><span class='line'>PaintingBinding.instance!.xxx
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>RendererBinding.instance!.xxx
</span><span class='line'>RendererBinding.instance?.xxxx
</span><span class='line'>
</span><span class='line'>GestureBinding.instance!.xxx
</span><span class='line'>GestureBinding.instance?.xxx
</span></code></pre></td></tr></table></div></figure>


<h2>一键解决</h2>

<p>那这么多内容需要解决，有没有一键处理的办法呢？</p>

<p>如果你接触过 终端脚本，答案是肯定的。我们可以使用下面的shell 脚本处理。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/usr/bin/env bash</span>
</span><span class='line'>
</span><span class='line'><span class="k">function </span>sedReplaceFile<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/SchedulerBinding.instance!/SchedulerBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/SchedulerBinding.instance?/SchedulerBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/WidgetsBinding.instance!/WidgetsBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/WidgetsBinding.instance?/WidgetsBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/PaintingBinding.instance?/PaintingBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/PaintingBinding.instance!/PaintingBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/RendererBinding.instance!/RendererBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/RendererBinding.instance?/RendererBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/GestureBinding.instance!/GestureBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  sed -i <span class="s2">&quot;&quot;</span> -e <span class="s2">&quot;s/GestureBinding.instance?/GestureBinding.instance/g&quot;</span> <span class="nv">$1</span>
</span><span class='line'>  
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">export</span> -f sedReplaceFile
</span><span class='line'>find . -name <span class="s2">&quot;*.dart&quot;</span>  | xargs -I <span class="o">{}</span> bash -c <span class="s1">&#39;sedReplaceFile {}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>执行</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>your_project
</span><span class='line'>f3_fix.sh
</span></code></pre></td></tr></table></div></figure>


<h2>注</h2>

<ul>
<li>上面的脚本仅在 mac 系统验证， Linux 可能需要自行做简易修改。</li>
<li>如果是 三方pub 包含警告问题，可以选择对应适配 flutter 3 的版本升级即可。</li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[正版软件优惠，近期新品软件推荐]]></title>
    <link href="https://droidyue.com/blog/2022/09/12/lizhi-new-product-2022-09/"/>
    <updated>2022-09-12T22:01:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/09/12/lizhi-new-product-2022-09</id>
    <content type="html"><![CDATA[<p>不管是手机还是电脑，出色的硬件是好用的基础。而其中的软件工具，也是提高效率、减轻负担的好东西。</p>

<p>免费的软件工具众多，当然付费工具也不少。大家可能会觉得正版软件很贵，但国内软件代理商的价格其实很实惠。</p>

<p>本次为大家介绍，优秀代理商「数码荔枝」近期上架的多款软件工具。分别是多平台抠图工具：<strong>傲软抠图</strong>，以及无需剪辑的在线视频制作工具：<strong>右糖</strong>。</p>

<p>点击我们的<a href="https://store.lizhi.io/site/search_list?order_by=2&amp;word=&amp;coupon_uuid=0&amp;category_id=-1&amp;cid=wncr9wz5">专属链接</a>，直接购买即为优惠价格。</p>

<hr />

<!--more-->


<h2><strong>傲软抠图</strong> <strong>[Win/Mac/iOS/Android]</strong></h2>

<p><strong>傲软抠图</strong>是一款适用于多平台的抠图工具，支持 AI 智能<strong>一键抠图</strong>，内置算法针对人物、物品等实现自动抠图，效果精细、清晰干净。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE1.png" /></p>

<p>傲软抠图使用非常简单，只需打开软件，选择照片，就能自动完成抠图，速度快效果好。提供手动优化，可任意保留或擦除抠图区域，支持裁剪、移动等操作。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE2.gif" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE2.gif" /></p>

<p>支持人像物品背景去除 / 更换，内含海量素材，可快速<strong>更换背景</strong>画面，打造精美照片，无论是用于人像后期还是产品图制作都合适。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE3.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE3.png" /></p>

<p>可制作各类<strong>证件照</strong>，支持一键修改背景颜色、照片尺寸、文件大小，证件照换底色再也不用去照相馆啦~</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE4.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE4.png" /></p>

<p>支持批量抠图 / 图片清晰处理，并提供制作图章、图片去水印功能，帮助用户高效处理照片。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE5.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE5.png" /></p>

<p>一个账号即可通用 Win / Mac / 安卓 / iOS 平台，方便随时抠图。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE6.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE6.png" /></p>

<p>傲软抠图提供免费试用，试用效果满意，可<a href="https://store.lizhi.io/site/products/id/579?cid=wncr9wz5">点击专属链接</a>购买抠图使用张数，仅需 <strong>20.3</strong> 元起。兑换后不会过期，无时间限制。</p>

<h2>右糖 [Web]</h2>

<p><strong>右糖</strong>是一个基于云端的在线视频制作工具，手机电脑皆可使用。<strong>无需视频剪辑技巧</strong>，直接选用模板上传素材，一键就可以制作充满设计感的动画视频、电子回忆相册。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE7.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE7.png" /></p>

<p>网站含婚礼、教育、商业宣传等 <strong>800+ 优质模板</strong>，各类风格场景持续更新。选择模板 > 上传素材 > 一键制作，只需三步，五分钟就能生成电子相册。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE8.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE8.png" /></p>

<p>内置丰富的画面库可供选择编辑，类型多样，制作动画视频一键应用成片超方便。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE9.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE9.png" /></p>

<p>制作视频不知如何搭配 BGM？这里有海量流行音乐曲库，让你的视频更「声」动。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE10.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE10.png" /></p>

<p>也无需为文案发愁，文案库为你准备了各类精彩好句，无惧灵感枯竭。可为画面添加字幕、Logo，进行裁剪旋转、排序、切换比例等操作。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE11.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE11.png" /></p>

<p>素材作品在云端渲染并存储，不怕硬件性能不给力，手机电脑皆可操作，随时随地观看与分享。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE12.png" alt="https://asset.droidyue.com/image/lizhi_io/collect_sep/%E5%9B%BE12.png" /></p>

<p>支持免费预览动画或相册效果，满意后会员可解锁 720P / 1080P 画质下载。</p>

<p>右糖会员版提供三个可购版本，一月版、季度版及一年版可选。其中一年版可制作 300 个视频，每个视频<strong>不到 1.5 元</strong>，<a href="https://store.lizhi.io/site/products/id/580?cid=wncr9wz5">点击链接</a>获取，大家可按需选购。</p>

<p>数码荔枝代理了众多优秀工具，它们也会不定期上架新的软件产品，大家可以持续关注。<a href="https://store.lizhi.io?cid=wncr9wz5">点击了解更多正版软件</a></p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于仓库的批量处理脚本，效率提升 500%]]></title>
    <link href="https://droidyue.com/blog/2022/09/04/speed-up-about-cloning-git-repos-and-updating-them/"/>
    <updated>2022-09-04T21:57:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/09/04/speed-up-about-cloning-git-repos-and-updating-them</id>
    <content type="html"><![CDATA[<p>很多时候，我们会遇到这样的场景</p>

<ul>
<li>换了新电脑，需要挨个 clone gitlab repos？</li>
<li>无法确定哪个 repo 包含了 maven.aliyun.com 这个设置？</li>
<li>能否批量更新 本地的 repos？</li>
</ul>


<p>如果你有上述的疑问或者情况，你可以尝试本文中的一些批量处理 repos 的方法</p>

<!--more-->


<h2>批量 clone</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby cloneRepos.rb code-git-xxxxxx ../projects/
</span></code></pre></td></tr></table></div></figure>


<p>其中 cloneRepos.rb 脚本内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;httparty&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;json&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">cloneRepos</span><span class="p">(</span><span class="n">repoUrlApi</span><span class="p">)</span>
</span><span class='line'>    <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;PRIVATE-TOKEN&#39;</span><span class="p">:</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">response</span> <span class="o">=</span> <span class="no">HTTParty</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">repoUrlApi</span><span class="p">,</span> <span class="ss">headers</span><span class="p">:</span> <span class="n">headers</span><span class="p">)</span>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">body</span><span class="p">);</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">data</span><span class="o">.</span><span class="n">length</span><span class="p">()</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">name</span> <span class="o">=</span> <span class="n">e</span><span class="o">[</span><span class="s1">&#39;name&#39;</span><span class="o">]</span>
</span><span class='line'>        <span class="n">gitUrl</span> <span class="o">=</span> <span class="n">e</span><span class="o">[</span><span class="s1">&#39;ssh_url_to_repo&#39;</span><span class="o">]</span>
</span><span class='line'>        <span class="nb">system</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2"> &amp;&amp; git clone  </span><span class="si">#{</span><span class="n">gitUrl</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="nb">name</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">cloneRepos</span><span class="p">(</span><span class="s1">&#39;https://code.hahaha.io/api/v4/projects?per_page=100&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">cloneRepos</span><span class="p">(</span><span class="s1">&#39;https://code.hahaha.io/api/v4/projects?per_page=100&amp;page=2&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>参数解释</h3>

<ul>
<li>code-git-xxxxxx 从 gitlab 获取的token，根据下图指示获取</li>
</ul>


<p><img src="https://asset.droidyue.com/image/2022/h2/QQ20220904-220957%402x.png" alt="https://asset.droidyue.com/image/2022/h2/QQ20220904-220957%402x.png" /></p>

<ul>
<li>../projects 存放的目录</li>
</ul>


<h3>注意</h3>

<p>这个脚本目前只能处理 前200个 repos，如果有需要，可以自行修改代码处理。
批量工程检索</p>

<h2>快速查找</h2>

<p>比如我们想要搜索 maven.aliyun.com</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>projects gradleSearch.sh maven.aliyun.com
</span><span class='line'>
</span><span class='line'>./xxxx/example/android/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>
</span><span class='line'>./xxxxx/example/android/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>
</span><span class='line'>./xxxx/android/build.gradle:22:            url <span class="s1">&#39;https://maven.aliyun.com/repository/public/&#39;</span>
</span><span class='line'>
</span><span class='line'>./xxxx/example/android/build.gradle:6:        maven <span class="o">{</span>url <span class="s1">&#39;https://maven.aliyun.com/repository/google&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中 gradleSearch.sh 的内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always -r <span class="s2">&quot;$1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>批量更新</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>updateRepo.sh
</span></code></pre></td></tr></table></div></figure>


<p>它的内容是这样的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="k">for </span>dir in */; <span class="k">do</span>
</span><span class='line'><span class="k">    </span><span class="nb">echo</span> <span class="s2">&quot;$dir&quot;</span>
</span><span class='line'>    <span class="nv">realpath</span><span class="o">=</span><span class="sb">`</span>realpath <span class="nv">$dir</span><span class="sb">`</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="nv">$realpath</span>
</span><span class='line'>    <span class="nb">cd</span> <span class="nv">$realpath</span>
</span><span class='line'>    git checkout master
</span><span class='line'>    git pull origin master
</span><span class='line'>    <span class="nb">cd</span> -
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<h3>注意</h3>

<ul>
<li>如果当前repo 有未提交修改，则无法更新。</li>
</ul>


<p>通过上面的几个脚本，我们可以轻松实现效率提升。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JetBrains 系列即将涨价，抓紧最后的好价入手！]]></title>
    <link href="https://droidyue.com/blog/2022/09/04/jetbrains-big-sale/"/>
    <updated>2022-09-04T21:40:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/09/04/jetbrains-big-sale</id>
    <content type="html"><![CDATA[<p>对于开发者来讲，每天都要和各种编程 IDE 和开发工具打交道。想必一定听说过 <strong>JetBrains</strong> 公司，或旗下的产品：<strong>IntelliJ IDEA</strong>、<strong>PyCharm</strong>、<strong>WebStorm</strong> 等。</p>

<p>不久前，JetBrains 发布公告，他们即将上调系列产品的订阅价格！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE1.png" /></p>

<p>涨价风暴将席卷旗下一众产品，包括：IDE、.NET 工具和 All Products Pack。</p>

<!--more-->


<p>此次价格调整将于 <strong>2022 年 10 月 1 日</strong> 生效，届时订阅价格将上涨 <strong>10%~20%</strong>，以下是部分个人版的涨价情况：</p>

<p>ReSharper：￥869 > ￥939
WebStorm：￥399 > ￥469
All Products Pack：￥1679 > ￥1949
GoLand、CLion、RubyMine&hellip;&hellip;：￥599 > ￥669</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE2.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE2.png" /></p>

<p>JetBrains 这些产品对于开发者来讲可是刚需呀！知名代理商「数码荔枝」目前价格还未调整，大伙记得趁涨价前赶紧囤一波订阅，别等到涨价了才后悔错过优惠，现在就是入手的最佳时机！</p>

<p><a href="https://store.lizhi.io/site/search_list?order_by=2&amp;word=&amp;coupon_uuid=0&amp;category_id=35&amp;cid=wncr9wz5">点击专属链接</a>优惠订阅 / 续费 JetBrains 系列软件</p>

<p>囤货的朋友还得注意一下，个人订阅允许最多至三年，企业订阅最多至两年！</p>

<h2>优秀、专业且强大</h2>

<p>工欲善其事，必先利其器。对于开发者来说，出色的编程技能固然重要，但要让敲代码变成轻松愉悦的享受，自然得备上一款能提升开发效率的好工具。</p>

<p>自带代码辅助功能的 JetBrains 系列软件，非常值得各位开发者拥有。</p>

<p>包含 IntelliJ IDEA、PyCharm、WebStorm、AppCode、CLion、DataGrip、GoLand、PhpStorm、RubyMine 等。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE3.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE3.png" /></p>

<p>各位使用 Java、PHP、Python 还是 Swift 开发语言的朋友，都能找到合适的开发工具。</p>

<p>JetBrains 具备优秀的智能编码辅助和代码重构能力，强大、稳定的调试器帮助开发者节省更多调试时间。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE4.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE4.png" /></p>

<p>提供了包括提交、冲突解决、分支切换和分支对比在内的源码管理功能，帮助实现源代码高效版本控制。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE5.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE5.png" /></p>

<p>集成 Docker、版本控制、反编译器等众多开发工具，丰富的插件生态系统，让开发者可以根据自己的特定需求定制 IDE。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE6.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE6.png" /></p>

<p>优秀、专业且强大的工具，开发者和团队必备。现在续费还能获得额外折扣，不要错过！<a href="https://store.lizhi.io/site/search_list?order_by=2&amp;word=&amp;coupon_uuid=0&amp;category_id=35&amp;cid=wncr9wz5">点击专属链接</a>优惠入手 JetBrains 系列软件</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE7.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE7.png" /></p>

<h2>All Products Pack 更划算</h2>

<p>而对于全栈开发者来说，JetBrains 的全套编码工具更是开发时的不二之选。集合 IntelliJ IDEA、PyCharm、GoLand 等十余个 IDE，多个 .NET 开发工具以及分析器。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE8.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE8.png" /></p>

<p>实力与优惠兼得的 JetBrains 编程开发工具集，涨价后 <strong>1949 元</strong>，现在还能以 <strong>1679 元</strong>的限时特价入手，立省几百！<a href="https://store.lizhi.io/site/products/id/416?cid=wncr9wz5">点击专属链接</a>优惠订阅 All Products Pack</p>

<h2>产品汉化出色</h2>

<p>JetBrains 系列产品现已完成汉化，无需另外下载软件安装，大部分软件内直接安装语言插件，就可以显示简体中文界面。</p>

<p>中文操作界面，新手更好入门！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE9.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE9.png" /></p>

<h2>铂金代理 品质售后无忧</h2>

<p>购买专业软件不仅要选对代理商，还得看靠谱的售后服务。</p>

<p>数码荔枝拥有开发商 JetBrains 的铂金代理资格。所销售的正版软件品质可靠，值得开发者信赖！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE10.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE10.png" /></p>

<p>除了可靠的授权，它们店铺的客服同样专业，可以为用户解决众多软件上的使用问题。在这购买 JetBrains 系列软件，使用自然没有后顾之忧。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE11.png" alt="https://asset.droidyue.com/image/lizhi_io/jetbrains/%E5%9B%BE11.png" /></p>

<p>对于软件激活与授权安装的问题，它们的客服会提供专业售后服务。更多软件使用问题还可在官方平台提交工单，获得开发商的专业支持。</p>

<p>JetBrains 系列产品的优秀有目共睹，除了官网，开发者现在又多了「数码荔枝」这样专业靠谱的购买渠道。</p>

<p>快趁涨价前带走这些工具，高效助力你的开发！<a href="https://store.lizhi.io/site/search_list?order_by=2&amp;word=&amp;coupon_uuid=0&amp;category_id=35&amp;cid=wncr9wz5">点击链接</a>马上订阅 / 续费 JetBrains 系列软件</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[unpub 发布原子化处理]]></title>
    <link href="https://droidyue.com/blog/2022/08/16/multiple-step-into-one-for-unpub-publish/"/>
    <updated>2022-08-16T07:43:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/08/16/multiple-step-into-one-for-unpub-publish</id>
    <content type="html"><![CDATA[<p>目前 unpub 作为我们重要的 pub 私有服务托管着 众多的 pubs。在日常的开发过程中，我们也会对pub 做出了一些约束。比如</p>

<ul>
<li>只允许在 master 或者 release/* 分支发布</li>
<li>不符合上述条件的分支不允许发布。</li>
</ul>


<p>今天我们讨论的问题重点，非上述的问题，而是发布 unpub 的原子性。</p>

<!--more-->


<h2>非原子化的两步</h2>

<p>在讨论原子性之前，我们需要明确有两个步骤。</p>

<ul>
<li>我们需要执行 <code>flutter packages pub publish --server=https://pub.aaa.com/ --verbose</code> 进行发布</li>
<li>在发布unpub 前后，我们需要将代码推送到远端 gitlab 服务器</li>
</ul>


<h2>非原子化的问题</h2>

<p>那么如果我们忘记了，最后一步的推送工作，带来的问题可能会很严重</p>

<ul>
<li>某份代码 A 未被推送，后面的更改再发布 unpub 导致 代码 A 的功能 丢失</li>
<li>后续发现丢失后，找回代码A 很可能无法 确定 当时的代码修改内容（可能包含其他修改，人的记忆里不总是可靠）</li>
<li>找回后，往往需要投入一定的测试资源验证较为稳妥。</li>
</ul>


<p>所以，将上面两部合成一步，来作为一个原子操作，显得尤为重要。</p>

<h2>一个脚本原子化</h2>

<p>这里有一个简单，却极为实用的方式，就是这个代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git push origin <span class="s2">&quot;$(git symbolic-ref -q HEAD 2&gt;/dev/null | cut -d&#39;/&#39; -f 3)&quot;</span>
</span><span class='line'>flutter packages pub publish --server<span class="o">=</span>https://pub.aaa.com/ --verbose
</span></code></pre></td></tr></table></div></figure>


<p>下载到本地后，设置文件可执行(加入环境变量)，然后当再次发布 unpub 时 这样处理即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>unpubUpload.sh
</span></code></pre></td></tr></table></div></figure>



<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux/Mac 终端代理设置，取消与排除名单]]></title>
    <link href="https://droidyue.com/blog/2022/08/09/proxy-setting-in-terminal/"/>
    <updated>2022-08-09T08:33:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/08/09/proxy-setting-in-terminal</id>
    <content type="html"><![CDATA[<p>在一个不友好的网络环境中，有些开发资源（依赖）无法被直接下载安装，这时候我们需要使用代理。</p>

<p>如果是经常使用终端的情况，终端关于代理的内容必不可少。</p>

<!--more-->


<h2>设置 http 代理</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ export http_proxy=http://server-ip:port/
</span><span class='line'>$ export http_proxy=http://127.0.0.1:3128/
</span><span class='line'>$ export http_proxy=http://proxy-server.mycorp.com:3128/
</span><span class='line'>$ export http_proxy=socks5://PROXYHOST:PROXYPORT
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h2>设置 https 代理</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ export https_proxy=https://server-ip:port/
</span><span class='line'>$ export https_proxy=https://127.0.0.1:3128/
</span><span class='line'>$ export https_proxy=https://proxy-server.mycorp.com:3128/
</span><span class='line'>$ export https_proxy=socks5://PROXYHOST:PROXYPORT
</span></code></pre></td></tr></table></div></figure>


<h2>取消设置代理</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>unset http_proxy
</span><span class='line'>
</span><span class='line'>unset https_proxy
</span></code></pre></td></tr></table></div></figure>


<h2>设置代理排除名单</h2>

<p>有时候，我们需要开启代理，但是有些域名不走代理，比如</p>

<ul>
<li>内部的网络，使用代理会出现错误</li>
<li>国内网络，使用代理后会变慢</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>export NO_PROXY=droidyue.com,127.0.0.1
</span></code></pre></td></tr></table></div></figure>


<p>上述 设置代理，设置代理排除名单，也可以放到 .bashrc 或 .zshrc 自动持久化处理。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 flutter attach 实现代码与应用进程关联]]></title>
    <link href="https://droidyue.com/blog/2022/07/31/flutter-attach-process/"/>
    <updated>2022-07-31T17:04:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/07/31/flutter-attach-process</id>
    <content type="html"><![CDATA[<p>当我们使用 flutter run 调试 App 时，假如数据线接触不良或者断开，当我们想要继续调试的时候，可能就需要再次执行 <code>flutter run</code>。</p>

<p>但其实，还有一个命令叫做 flutter attach. 它可以实现如下的功能</p>

<ul>
<li>attach 到一个现在运行的 app</li>
<li>支持指定设备 id 进行 attach</li>
<li>支持指定端口进行 attach</li>
<li>支持设置超时时间</li>
<li>支持传递 key-value 键值对设置</li>
</ul>


<!--more-->


<p>使用起来也很简单</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>flutter attach
</span></code></pre></td></tr></table></div></figure>


<h2>多设备可用时</h2>

<p>首先使用 <code>flutter devices</code> 查看目标设备 id</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> flutter devices
</span><span class='line'>2 connected devices:
</span><span class='line'>
</span><span class='line'>SM G9730 <span class="o">(</span>mobile<span class="o">)</span> • RA2TQ6PN • android-arm64  • Android 11 <span class="o">(</span>API 30<span class="o">)</span>
</span><span class='line'>Chrome <span class="o">(</span>web<span class="o">)</span>      • chrome      • web-javascript • Google Chrome 100.0.4896.60
</span></code></pre></td></tr></table></div></figure>


<p>然后执行设备id 执行即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>flutter attach -d RA2TQ6PN --verbose
</span></code></pre></td></tr></table></div></figure>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter 处理 Overlay 返回事件]]></title>
    <link href="https://droidyue.com/blog/2022/07/17/handle-back-button-click-with-overlay-in-flutter/"/>
    <updated>2022-07-17T21:46:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/07/17/handle-back-button-click-with-overlay-in-flutter</id>
    <content type="html"><![CDATA[<p>在 Flutter 中，我们可以使用 OverlayEntry 实现一个位于顶层的遮罩层。</p>

<p><img src="https://asset.droidyue.com/image/2022/h2/WX20220717-214434%402x.png?v=111" alt="https://asset.droidyue.com/image/2022/h2/WX20220717-214434%402x.png?v=111" /></p>

<!--more-->


<p>比如上面的 Overlay 示例效果，可以通过 这段代码来实现</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="kt">void</span> <span class="n">_showOverlay</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">,</span> <span class="p">{</span><span class="n">required</span> <span class="kt">String</span> <span class="n">text</span><span class="p">})</span> <span class="n">async</span> <span class="p">{</span>
</span><span class='line'> <span class="n">OverlayState</span><span class="o">?</span> <span class="n">overlayState</span> <span class="o">=</span> <span class="n">Overlay</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">);</span>
</span><span class='line'> <span class="n">OverlayEntry</span> <span class="n">overlayEntry</span><span class="p">;</span>
</span><span class='line'> <span class="n">overlayEntry</span> <span class="o">=</span> <span class="n">OverlayEntry</span><span class="p">(</span><span class="nl">builder:</span> <span class="p">(</span><span class="n">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">Positioned</span><span class="p">(</span>
</span><span class='line'>     <span class="nl">left:</span> <span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="m">0.1</span><span class="p">,</span>
</span><span class='line'>     <span class="nl">top:</span> <span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">*</span> <span class="m">0.80</span><span class="p">,</span>
</span><span class='line'>     <span class="nl">child:</span> <span class="n">ClipRRect</span><span class="p">(</span>
</span><span class='line'>       <span class="nl">borderRadius:</span> <span class="n">BorderRadius</span><span class="p">.</span><span class="n">circular</span><span class="p">(</span><span class="m">10</span><span class="p">),</span>
</span><span class='line'>       <span class="nl">child:</span> <span class="n">Material</span><span class="p">(</span>
</span><span class='line'>         <span class="nl">child:</span> <span class="n">Container</span><span class="p">(</span>
</span><span class='line'>           <span class="nl">alignment:</span> <span class="n">Alignment</span><span class="p">.</span><span class="n">center</span><span class="p">,</span>
</span><span class='line'>           <span class="nl">color:</span> <span class="n">Colors</span><span class="p">.</span><span class="n">yellowAccent</span><span class="p">,</span>
</span><span class='line'>           <span class="nl">padding:</span>
</span><span class='line'>           <span class="n">EdgeInsets</span><span class="p">.</span><span class="n">all</span><span class="p">(</span><span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">*</span> <span class="m">0.02</span><span class="p">),</span>
</span><span class='line'>           <span class="nl">width:</span> <span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="m">0.8</span><span class="p">,</span>
</span><span class='line'>           <span class="nl">height:</span> <span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">*</span> <span class="m">0.06</span><span class="p">,</span>
</span><span class='line'>           <span class="nl">child:</span> <span class="n">Text</span><span class="p">(</span>
</span><span class='line'>             <span class="n">text</span><span class="p">,</span>
</span><span class='line'>             <span class="nl">style:</span> <span class="kd">const</span> <span class="n">TextStyle</span><span class="p">(</span><span class="nl">color:</span> <span class="n">Colors</span><span class="p">.</span><span class="n">black</span><span class="p">),</span>
</span><span class='line'>           <span class="p">),</span>
</span><span class='line'>         <span class="p">),</span>
</span><span class='line'>       <span class="p">),</span>
</span><span class='line'>     <span class="p">),</span>
</span><span class='line'>   <span class="p">);</span>
</span><span class='line'> <span class="p">});</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// inserting overlay entry</span>
</span><span class='line'> <span class="n">overlayState</span><span class="o">!</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">overlayEntry</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>看起来一切都很正常，但是如果我们点击一下系统的返回按键，我们看到的结果是</p>

<ul>
<li>Overlay 并没有优先消失</li>
<li>而是当前的底层界面会退出了。</li>
</ul>


<h2>WillPopScope 管用么</h2>

<p>经过验证，WillPopScope 其实也无法拦截 Overlay 的返回事件。因为所处层级不同。</p>

<h2>那怎么办</h2>

<p>可以借助系统的 <code>SystemChannels.navigation</code> 来实现，在 popRoute 层面去做拦截。</p>

<p>这里有一个库可以解决</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>dependencies:
</span><span class='line'> flutter:
</span><span class='line'>   sdk: flutter
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> back_button_interceptor: 5.0.2
</span></code></pre></td></tr></table></div></figure>


<p>注意：如果你的 Flutter 适配到了 Flutter 3.0，可以使用最新的back_button_interceptor(6.0.0)，否则使用上面的5.0.2版本。</p>

<h2>导入包</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="n">import</span> <span class="s1">&#39;package:back_button_interceptor/back_button_interceptor.dart&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>接入拦截代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="kt">void</span> <span class="n">_showOverlay</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">,</span> <span class="p">{</span><span class="n">required</span> <span class="kt">String</span> <span class="n">text</span><span class="p">})</span> <span class="n">async</span> <span class="p">{</span>
</span><span class='line'> <span class="n">OverlayState</span><span class="o">?</span> <span class="n">overlayState</span> <span class="o">=</span> <span class="n">Overlay</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">);</span>
</span><span class='line'> <span class="n">OverlayEntry</span> <span class="n">overlayEntry</span><span class="p">;</span>
</span><span class='line'> <span class="n">overlayEntry</span> <span class="o">=</span> <span class="n">OverlayEntry</span><span class="p">(</span><span class="nl">builder:</span> <span class="p">(</span><span class="n">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">Positioned</span><span class="p">(</span>
</span><span class='line'>    <span class="err">……</span> <span class="n">some</span> <span class="n">code</span> <span class="n">omitted</span> <span class="p">.</span>
</span><span class='line'> <span class="p">});</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// inserting overlay entry</span>
</span><span class='line'> <span class="n">overlayState</span><span class="o">!</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">overlayEntry</span><span class="p">);</span>
</span><span class='line'> <span class="n">BackButtonInterceptor</span><span class="p">.</span><span class="n">add</span><span class="p">((</span><span class="kt">bool</span> <span class="n">stopDefaultButtonEvent</span><span class="p">,</span> <span class="n">RouteInfo</span> <span class="n">info</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">overlayEntry</span><span class="p">.</span><span class="n">remove</span><span class="p">();</span>
</span><span class='line'>   <span class="n">BackButtonInterceptor</span><span class="p">.</span><span class="n">removeByName</span><span class="p">(</span><span class="s1">&#39;my_back_button&#39;</span><span class="p">);</span>
</span><span class='line'>   <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'> <span class="p">},</span> <span class="nl">name:</span> <span class="s1">&#39;my_back_button&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中</p>

<ul>
<li>BackButtonInterceptor.add 用来添加一个拦截器，通常还是需要增加一个 name 用作后续的移除做标识</li>
<li>当拦截之后，我们需要添加<code>overlayEntry.remove();</code>用作移除OverlayEntry。 添加 <code>BackButtonInterceptor.removeByName('my_back_button');</code> 移除当前的拦截器， <code>return true;</code> 表明拦截器处理了该事件。</li>
</ul>


<h2>内部核心代码逻辑实现</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="c1">/// 添加逻辑</span>
</span><span class='line'><span class="kd">static</span> <span class="kt">void</span> <span class="n">add</span><span class="p">(</span>
</span><span class='line'> <span class="n">InterceptorFunction</span> <span class="kt">int</span><span class="n">erceptorFunction</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'> <span class="kt">bool</span> <span class="n">ifNotYetIntercepted</span> <span class="o">=</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'> <span class="kt">int</span><span class="o">?</span> <span class="n">zIndex</span><span class="p">,</span>
</span><span class='line'> <span class="kt">String</span><span class="o">?</span> <span class="n">name</span><span class="p">,</span>
</span><span class='line'> <span class="n">BuildContext</span><span class="o">?</span> <span class="n">context</span><span class="p">,</span>
</span><span class='line'><span class="p">})</span> <span class="p">{</span>
</span><span class='line'> <span class="n">_interceptors</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span>
</span><span class='line'>     <span class="m">0</span><span class="p">,</span>
</span><span class='line'>     <span class="n">_FunctionWithZIndex</span><span class="p">(</span>
</span><span class='line'>       <span class="kt">int</span><span class="n">erceptorFunction</span><span class="p">,</span>
</span><span class='line'>       <span class="n">ifNotYetIntercepted</span><span class="p">,</span>
</span><span class='line'>       <span class="n">zIndex</span><span class="p">,</span>
</span><span class='line'>       <span class="n">name</span><span class="p">,</span>
</span><span class='line'>       <span class="n">context</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">?</span> <span class="kc">null</span> <span class="o">:</span> <span class="n">getCurrentNavigatorRoute</span><span class="p">(</span><span class="n">context</span><span class="p">),</span>
</span><span class='line'>     <span class="p">));</span>
</span><span class='line'> <span class="n">stableSort</span><span class="p">(</span><span class="n">_interceptors</span><span class="p">);</span>
</span><span class='line'> <span class="n">SystemChannels</span><span class="p">.</span><span class="n">navigation</span><span class="p">.</span><span class="n">setMethodCallHandler</span><span class="p">(</span><span class="n">_handleNavigationInvocation</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// hook 回掉逻辑</span>
</span><span class='line'><span class="kd">static</span> <span class="n">Future</span><span class="o">&lt;</span><span class="n">dynamic</span><span class="o">&gt;</span> <span class="n">_handleNavigationInvocation</span><span class="p">(</span><span class="n">MethodCall</span> <span class="n">methodCall</span><span class="p">)</span> <span class="n">async</span> <span class="p">{</span>
</span><span class='line'> <span class="c1">// POP.</span>
</span><span class='line'> <span class="k">if</span> <span class="p">(</span><span class="n">methodCall</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;popRoute&#39;</span><span class="p">)</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">popRoute</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// PUSH.</span>
</span><span class='line'> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">methodCall</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;pushRoute&#39;</span><span class="p">)</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">_pushRoute</span><span class="p">(</span><span class="n">methodCall</span><span class="p">.</span><span class="n">arguments</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// OTHER.</span>
</span><span class='line'> <span class="k">else</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">Future</span><span class="o">&lt;</span><span class="n">dynamic</span><span class="o">&gt;</span><span class="p">.</span><span class="n">value</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// 弹出拦截逻辑</span>
</span><span class='line'>
</span><span class='line'><span class="kd">static</span> <span class="n">Future</span> <span class="n">popRoute</span><span class="p">()</span> <span class="n">async</span> <span class="p">{</span>
</span><span class='line'> <span class="kt">bool</span> <span class="n">stopDefaultButtonEvent</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="n">results</span><span class="p">.</span><span class="n">clear</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'> <span class="n">List</span><span class="o">&lt;</span><span class="n">_FunctionWithZIndex</span><span class="o">&gt;</span> <span class="kt">int</span><span class="n">erceptors</span> <span class="o">=</span> <span class="n">List</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">_interceptors</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="n">i</span> <span class="o">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="kt">int</span><span class="n">erceptors</span><span class="p">.</span><span class="n">length</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="kt">bool</span><span class="o">?</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>     <span class="kd">var</span> <span class="kt">int</span><span class="n">erceptor</span> <span class="o">=</span> <span class="kt">int</span><span class="n">erceptors</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>     <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="kt">int</span><span class="n">erceptor</span><span class="p">.</span><span class="n">ifNotYetIntercepted</span> <span class="o">||</span> <span class="o">!</span><span class="n">stopDefaultButtonEvent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="n">FutureOr</span><span class="o">&lt;</span><span class="kt">bool</span><span class="o">&gt;</span> <span class="n">_result</span> <span class="o">=</span> <span class="kt">int</span><span class="n">erceptor</span><span class="p">.</span><span class="kt">int</span><span class="n">erceptionFunction</span><span class="p">(</span>
</span><span class='line'>         <span class="n">stopDefaultButtonEvent</span><span class="p">,</span>
</span><span class='line'>         <span class="n">RouteInfo</span><span class="p">(</span><span class="nl">routeWhenAdded:</span> <span class="kt">int</span><span class="n">erceptor</span><span class="p">.</span><span class="n">routeWhenAdded</span><span class="p">),</span>
</span><span class='line'>       <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>       <span class="k">if</span> <span class="p">(</span><span class="n">_result</span> <span class="k">is</span> <span class="kt">bool</span><span class="p">)</span>
</span><span class='line'>         <span class="n">result</span> <span class="o">=</span> <span class="n">_result</span><span class="p">;</span>
</span><span class='line'>       <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">_result</span> <span class="k">is</span> <span class="n">Future</span><span class="o">&lt;</span><span class="kt">bool</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'>         <span class="n">result</span> <span class="o">=</span> <span class="n">await</span> <span class="n">_result</span><span class="p">;</span>
</span><span class='line'>       <span class="k">else</span>
</span><span class='line'>         <span class="k">throw</span> <span class="n">AssertionError</span><span class="p">(</span><span class="n">_result</span><span class="p">.</span><span class="n">runtimeType</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>       <span class="n">results</span><span class="p">.</span><span class="n">results</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">InterceptorResult</span><span class="p">(</span><span class="kt">int</span><span class="n">erceptor</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="n">result</span><span class="p">));</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="n">errorProcessing</span><span class="p">(</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">if</span> <span class="p">(</span><span class="n">result</span> <span class="o">==</span> <span class="kc">true</span><span class="p">)</span> <span class="n">stopDefaultButtonEvent</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="k">if</span> <span class="p">(</span><span class="n">stopDefaultButtonEvent</span><span class="p">)</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">Future</span><span class="o">&lt;</span><span class="n">dynamic</span><span class="o">&gt;</span><span class="p">.</span><span class="n">value</span><span class="p">();</span>
</span><span class='line'> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">results</span><span class="p">.</span><span class="n">ifDefaultButtonEventWasFired</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">handlePopRouteFunction</span><span class="p">();</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>完整的示例代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="n">import</span> <span class="s1">&#39;package:flutter/material.dart&#39;</span><span class="p">;</span>
</span><span class='line'><span class="n">import</span> <span class="s1">&#39;package:back_button_interceptor/back_button_interceptor.dart&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'> <span class="n">runApp</span><span class="p">(</span><span class="kd">const</span> <span class="n">MyApp</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">MyApp</span> <span class="kd">extends</span> <span class="n">StatelessWidget</span> <span class="p">{</span>
</span><span class='line'> <span class="kd">const</span> <span class="n">MyApp</span><span class="p">({</span><span class="n">Key</span><span class="o">?</span> <span class="n">key</span><span class="p">})</span> <span class="o">:</span> <span class="k">super</span><span class="p">(</span><span class="nl">key:</span> <span class="n">key</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// This widget is the root of your application.</span>
</span><span class='line'> <span class="err">@</span><span class="n">override</span>
</span><span class='line'> <span class="n">Widget</span> <span class="n">build</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">MaterialApp</span><span class="p">(</span>
</span><span class='line'>     <span class="nl">title:</span> <span class="s1">&#39;Flutter Demo&#39;</span><span class="p">,</span>
</span><span class='line'>     <span class="nl">theme:</span> <span class="n">ThemeData</span><span class="p">(</span>
</span><span class='line'>       <span class="c1">// This is the theme of your application.</span>
</span><span class='line'>       <span class="c1">//</span>
</span><span class='line'>       <span class="c1">// Try running your application with &quot;flutter run&quot;. You&#39;ll see the</span>
</span><span class='line'>       <span class="c1">// application has a blue toolbar. Then, without quitting the app, try</span>
</span><span class='line'>       <span class="c1">// changing the primarySwatch below to Colors.green and then invoke</span>
</span><span class='line'>       <span class="c1">// &quot;hot reload&quot; (press &quot;r&quot; in the console where you ran &quot;flutter run&quot;,</span>
</span><span class='line'>       <span class="c1">// or simply save your changes to &quot;hot reload&quot; in a Flutter IDE).</span>
</span><span class='line'>       <span class="c1">// Notice that the counter didn&#39;t reset back to zero; the application</span>
</span><span class='line'>       <span class="c1">// is not restarted.</span>
</span><span class='line'>       <span class="nl">primarySwatch:</span> <span class="n">Colors</span><span class="p">.</span><span class="n">blue</span><span class="p">,</span>
</span><span class='line'>     <span class="p">),</span>
</span><span class='line'>     <span class="nl">home:</span> <span class="kd">const</span> <span class="n">MyHomePage</span><span class="p">(</span><span class="nl">title:</span> <span class="s1">&#39;Flutter Demo Home Page&#39;</span><span class="p">),</span>
</span><span class='line'>   <span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">MyHomePage</span> <span class="kd">extends</span> <span class="n">StatefulWidget</span> <span class="p">{</span>
</span><span class='line'> <span class="kd">const</span> <span class="n">MyHomePage</span><span class="p">({</span><span class="n">Key</span><span class="o">?</span> <span class="n">key</span><span class="p">,</span> <span class="n">required</span> <span class="k">this</span><span class="p">.</span><span class="n">title</span><span class="p">})</span> <span class="o">:</span> <span class="k">super</span><span class="p">(</span><span class="nl">key:</span> <span class="n">key</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// This widget is the home page of your application. It is stateful, meaning</span>
</span><span class='line'> <span class="c1">// that it has a State object (defined below) that contains fields that affect</span>
</span><span class='line'> <span class="c1">// how it looks.</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// This class is the configuration for the state. It holds the values (in this</span>
</span><span class='line'> <span class="c1">// case the title) provided by the parent (in this case the App widget) and</span>
</span><span class='line'> <span class="c1">// used by the build method of the State. Fields in a Widget subclass are</span>
</span><span class='line'> <span class="c1">// always marked &quot;final&quot;.</span>
</span><span class='line'>
</span><span class='line'> <span class="kd">final</span> <span class="kt">String</span> <span class="n">title</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="err">@</span><span class="n">override</span>
</span><span class='line'> <span class="n">State</span><span class="o">&lt;</span><span class="n">MyHomePage</span><span class="o">&gt;</span> <span class="n">createState</span><span class="p">()</span> <span class="o">=&gt;</span> <span class="n">_MyHomePageState</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">_MyHomePageState</span> <span class="kd">extends</span> <span class="n">State</span><span class="o">&lt;</span><span class="n">MyHomePage</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">_counter</span> <span class="o">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="kt">void</span> <span class="n">_incrementCounter</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">setState</span><span class="p">(()</span> <span class="p">{</span>
</span><span class='line'>     <span class="c1">// This call to setState tells the Flutter framework that something has</span>
</span><span class='line'>     <span class="c1">// changed in this State, which causes it to rerun the build method below</span>
</span><span class='line'>     <span class="c1">// so that the display can reflect the updated values. If we changed</span>
</span><span class='line'>     <span class="c1">// _counter without calling setState(), then the build method would not be</span>
</span><span class='line'>     <span class="c1">// called again, and so nothing would appear to happen.</span>
</span><span class='line'>     <span class="n">_counter</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>   <span class="p">});</span>
</span><span class='line'>   <span class="n">_showOverlay</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="nl">text:</span> <span class="s1">&#39;overlay&#39;</span><span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="kt">void</span> <span class="n">_showOverlay</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">,</span> <span class="p">{</span><span class="n">required</span> <span class="kt">String</span> <span class="n">text</span><span class="p">})</span> <span class="n">async</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">OverlayState</span><span class="o">?</span> <span class="n">overlayState</span> <span class="o">=</span> <span class="n">Overlay</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">);</span>
</span><span class='line'>   <span class="n">OverlayEntry</span> <span class="n">overlayEntry</span><span class="p">;</span>
</span><span class='line'>   <span class="n">overlayEntry</span> <span class="o">=</span> <span class="n">OverlayEntry</span><span class="p">(</span><span class="nl">builder:</span> <span class="p">(</span><span class="n">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">Positioned</span><span class="p">(</span>
</span><span class='line'>       <span class="nl">left:</span> <span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="m">0.1</span><span class="p">,</span>
</span><span class='line'>       <span class="nl">top:</span> <span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">*</span> <span class="m">0.80</span><span class="p">,</span>
</span><span class='line'>       <span class="nl">child:</span> <span class="n">ClipRRect</span><span class="p">(</span>
</span><span class='line'>         <span class="nl">borderRadius:</span> <span class="n">BorderRadius</span><span class="p">.</span><span class="n">circular</span><span class="p">(</span><span class="m">10</span><span class="p">),</span>
</span><span class='line'>         <span class="nl">child:</span> <span class="n">Material</span><span class="p">(</span>
</span><span class='line'>           <span class="nl">child:</span> <span class="n">Container</span><span class="p">(</span>
</span><span class='line'>             <span class="nl">alignment:</span> <span class="n">Alignment</span><span class="p">.</span><span class="n">center</span><span class="p">,</span>
</span><span class='line'>             <span class="nl">color:</span> <span class="n">Colors</span><span class="p">.</span><span class="n">yellowAccent</span><span class="p">,</span>
</span><span class='line'>             <span class="nl">padding:</span>
</span><span class='line'>             <span class="n">EdgeInsets</span><span class="p">.</span><span class="n">all</span><span class="p">(</span><span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">*</span> <span class="m">0.02</span><span class="p">),</span>
</span><span class='line'>             <span class="nl">width:</span> <span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="m">0.8</span><span class="p">,</span>
</span><span class='line'>             <span class="nl">height:</span> <span class="n">MediaQuery</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">*</span> <span class="m">0.06</span><span class="p">,</span>
</span><span class='line'>             <span class="nl">child:</span> <span class="n">Text</span><span class="p">(</span>
</span><span class='line'>               <span class="n">text</span><span class="p">,</span>
</span><span class='line'>               <span class="nl">style:</span> <span class="kd">const</span> <span class="n">TextStyle</span><span class="p">(</span><span class="nl">color:</span> <span class="n">Colors</span><span class="p">.</span><span class="n">black</span><span class="p">),</span>
</span><span class='line'>             <span class="p">),</span>
</span><span class='line'>           <span class="p">),</span>
</span><span class='line'>         <span class="p">),</span>
</span><span class='line'>       <span class="p">),</span>
</span><span class='line'>     <span class="p">);</span>
</span><span class='line'>   <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>   <span class="c1">// inserting overlay entry</span>
</span><span class='line'>   <span class="n">overlayState</span><span class="o">!</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">overlayEntry</span><span class="p">);</span>
</span><span class='line'>   <span class="n">BackButtonInterceptor</span><span class="p">.</span><span class="n">add</span><span class="p">((</span><span class="kt">bool</span> <span class="n">stopDefaultButtonEvent</span><span class="p">,</span> <span class="n">RouteInfo</span> <span class="n">info</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="n">overlayEntry</span><span class="p">.</span><span class="n">remove</span><span class="p">();</span>
</span><span class='line'>     <span class="n">BackButtonInterceptor</span><span class="p">.</span><span class="n">removeByName</span><span class="p">(</span><span class="s1">&#39;my_back_button&#39;</span><span class="p">);</span>
</span><span class='line'>     <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>   <span class="p">},</span> <span class="nl">name:</span> <span class="s1">&#39;my_back_button&#39;</span><span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="err">@</span><span class="n">override</span>
</span><span class='line'> <span class="n">Widget</span> <span class="n">build</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="c1">// This method is rerun every time setState is called, for instance as done</span>
</span><span class='line'>   <span class="c1">// by the _incrementCounter method above.</span>
</span><span class='line'>   <span class="c1">//</span>
</span><span class='line'>   <span class="c1">// The Flutter framework has been optimized to make rerunning build methods</span>
</span><span class='line'>   <span class="c1">// fast, so that you can just rebuild anything that needs updating rather</span>
</span><span class='line'>   <span class="c1">// than having to individually change instances of widgets.</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">Scaffold</span><span class="p">(</span>
</span><span class='line'>     <span class="nl">appBar:</span> <span class="n">AppBar</span><span class="p">(</span>
</span><span class='line'>       <span class="c1">// Here we take the value from the MyHomePage object that was created by</span>
</span><span class='line'>       <span class="c1">// the App.build method, and use it to set our appbar title.</span>
</span><span class='line'>       <span class="nl">title:</span> <span class="n">Text</span><span class="p">(</span><span class="n">widget</span><span class="p">.</span><span class="n">title</span><span class="p">),</span>
</span><span class='line'>     <span class="p">),</span>
</span><span class='line'>     <span class="nl">body:</span> <span class="n">Center</span><span class="p">(</span>
</span><span class='line'>       <span class="c1">// Center is a layout widget. It takes a single child and positions it</span>
</span><span class='line'>       <span class="c1">// in the middle of the parent.</span>
</span><span class='line'>       <span class="nl">child:</span> <span class="n">Column</span><span class="p">(</span>
</span><span class='line'>         <span class="c1">// Column is also a layout widget. It takes a list of children and</span>
</span><span class='line'>         <span class="c1">// arranges them vertically. By default, it sizes itself to fit its</span>
</span><span class='line'>         <span class="c1">// children horizontally, and tries to be as tall as its parent.</span>
</span><span class='line'>         <span class="c1">//</span>
</span><span class='line'>         <span class="c1">// Invoke &quot;debug painting&quot; (press &quot;p&quot; in the console, choose the</span>
</span><span class='line'>         <span class="c1">// &quot;Toggle Debug Paint&quot; action from the Flutter Inspector in Android</span>
</span><span class='line'>         <span class="c1">// Studio, or the &quot;Toggle Debug Paint&quot; command in Visual Studio Code)</span>
</span><span class='line'>         <span class="c1">// to see the wireframe for each widget.</span>
</span><span class='line'>         <span class="c1">//</span>
</span><span class='line'>         <span class="c1">// Column has various properties to control how it sizes itself and</span>
</span><span class='line'>         <span class="c1">// how it positions its children. Here we use mainAxisAlignment to</span>
</span><span class='line'>         <span class="c1">// center the children vertically; the main axis here is the vertical</span>
</span><span class='line'>         <span class="c1">// axis because Columns are vertical (the cross axis would be</span>
</span><span class='line'>         <span class="c1">// horizontal).</span>
</span><span class='line'>         <span class="nl">mainAxisAlignment:</span> <span class="n">MainAxisAlignment</span><span class="p">.</span><span class="n">center</span><span class="p">,</span>
</span><span class='line'>         <span class="nl">children:</span> <span class="o">&lt;</span><span class="n">Widget</span><span class="o">&gt;</span><span class="p">[</span>
</span><span class='line'>           <span class="kd">const</span> <span class="n">Text</span><span class="p">(</span>
</span><span class='line'>             <span class="s1">&#39;You have pushed the button this many times:&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="p">),</span>
</span><span class='line'>           <span class="n">Text</span><span class="p">(</span>
</span><span class='line'>             <span class="s1">&#39;</span><span class="si">$</span><span class="n">_counter</span><span class="s1">&#39;</span><span class="p">,</span>
</span><span class='line'>             <span class="nl">style:</span> <span class="n">Theme</span><span class="p">.</span><span class="n">of</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">textTheme</span><span class="p">.</span><span class="n">headline4</span><span class="p">,</span>
</span><span class='line'>           <span class="p">),</span>
</span><span class='line'>         <span class="p">],</span>
</span><span class='line'>       <span class="p">),</span>
</span><span class='line'>     <span class="p">),</span>
</span><span class='line'>     <span class="nl">floatingActionButton:</span> <span class="n">FloatingActionButton</span><span class="p">(</span>
</span><span class='line'>       <span class="nl">onPressed:</span> <span class="n">_incrementCounter</span><span class="p">,</span>
</span><span class='line'>       <span class="nl">tooltip:</span> <span class="s1">&#39;Increment&#39;</span><span class="p">,</span>
</span><span class='line'>       <span class="nl">child:</span> <span class="kd">const</span> <span class="n">Icon</span><span class="p">(</span><span class="n">Icons</span><span class="p">.</span><span class="n">add</span><span class="p">),</span>
</span><span class='line'>     <span class="p">),</span> <span class="c1">// This trailing comma makes auto-formatting nicer for build methods.</span>
</span><span class='line'>   <span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nexus Repo 503 错误解决]]></title>
    <link href="https://droidyue.com/blog/2022/07/12/nexus-503-issues/"/>
    <updated>2022-07-12T08:40:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/07/12/nexus-503-issues</id>
    <content type="html"><![CDATA[<p>最近访问Nexus Repo 曝出了下面的503 问题</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">http:</span><span class="c1">//your_server:8081/nexus/content/repositories/xxxx/module/3.0.0/module-3.0.0.pom. Return code is: 503, ReasonPhrase:Service Unavailable. -&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>尝试重新启动 Nexus Repo 服务也没有解决。</p>

<!--more-->


<p>后来定位到问题是代理相关设置导致。具体修改</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">https</span><span class="o">.</span><span class="na">proxyPort</span><span class="o">=</span><span class="mi">1080</span>
</span><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">proxyHost</span><span class="o">=</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span>
</span><span class='line'><span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">jvmargs</span><span class="o">=-</span><span class="n">Xmx10240m</span> <span class="o">-</span><span class="n">XX</span><span class="err">\</span><span class="o">:</span><span class="n">MaxPermSize</span><span class="err">\</span><span class="o">=</span><span class="mi">4096</span><span class="n">m</span> <span class="o">-</span><span class="n">XX</span><span class="err">\</span><span class="o">:+</span><span class="n">HeapDumpOnOutOfMemoryError</span> <span class="o">-</span><span class="n">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="err">\</span><span class="o">=</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span>
</span><span class='line'><span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">daemon</span><span class="o">=</span><span class="kc">true</span>
</span><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">https</span><span class="o">.</span><span class="na">proxyHost</span><span class="o">=</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span>
</span><span class='line'><span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">parallel</span><span class="o">=</span><span class="kc">true</span>
</span><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">proxyPort</span><span class="o">=</span><span class="mi">1080</span>
</span></code></pre></td></tr></table></div></figure>


<p>把上面设计到代理的内容删除即可。即删除下面内容</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">https</span><span class="o">.</span><span class="na">proxyPort</span><span class="o">=</span><span class="mi">1080</span>
</span><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">proxyHost</span><span class="o">=</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span>
</span><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">https</span><span class="o">.</span><span class="na">proxyHost</span><span class="o">=</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span>
</span><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">proxyPort</span><span class="o">=</span><span class="mi">1080</span>
</span></code></pre></td></tr></table></div></figure>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter webview 处理回退历史]]></title>
    <link href="https://droidyue.com/blog/2022/07/12/flutter-webview-handle-self-goback-first/"/>
    <updated>2022-07-12T08:31:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/07/12/flutter-webview-handle-self-goback-first</id>
    <content type="html"><![CDATA[<p>在 App 开发中，我们总会遇到使用 WebView 的情况， 比如 我们打开了 网页A，然后点击 A 中的链接跳转到 B。如果这个时候，我们按一下系统的返回键，预期的应该是 返回A，而不是推到一个 Native 页面。</p>

<!--more-->


<p>但事实就是，如果你没有经过特殊处理，那么很有可能就不是预期的效果(B &ndash;> A)。不过还在我们只需要简单修改代码，就能解决。</p>

<p>再次明确一下，我们的预期</p>

<ul>
<li>如果 webview 有可以回退的历史，当系统返回按键点击后，进行 webview 历史回退</li>
<li>否则执行 系统回退，返回上一个 native界面</li>
</ul>


<h2>用到的核心代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="n">WebViewController</span><span class="o">?</span> <span class="n">_webviewController</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">WillPopScope</span><span class="p">(</span>
</span><span class='line'>  <span class="nl">onWillPop:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="n">_exitApp</span><span class="p">(</span><span class="n">context</span><span class="p">),</span>
</span><span class='line'>  <span class="nl">child:</span> <span class="n">xxx</span><span class="p">,</span>   
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Future</span><span class="o">&lt;</span><span class="kt">bool</span><span class="o">&gt;</span> <span class="n">_exitApp</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="n">async</span> <span class="p">{</span>
</span><span class='line'> <span class="k">if</span> <span class="p">(</span><span class="n">await</span> <span class="n">_webviewController</span><span class="o">!</span><span class="p">.</span><span class="n">canGoBack</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">print</span><span class="p">(</span><span class="s2">&quot;onwill goback&quot;</span><span class="p">);</span>
</span><span class='line'>   <span class="n">_webviewController</span><span class="o">!</span><span class="p">.</span><span class="n">goBack</span><span class="p">();</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">Future</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
</span><span class='line'> <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">debugPrint</span><span class="p">(</span><span class="s2">&quot;_exit will not go back&quot;</span><span class="p">);</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">Future</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>WebViewController 实例 controllerGlobal 是用来判断检测并执行 webview 历史回退。</li>
<li>使用 WillPopScope 用来监听 系统的返回键调用，并进行执行系统返回还是 回退 WebView 历史</li>
<li>这里利用 controllerGlobal!.canGoBack 来判断是否可以回退 webview 历史</li>
<li>如果需要执行 webview 回退历史，调用 controllerGlobal!.goBack()， 否则响应系统回退</li>
</ul>


<h2>完整的实例代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="n">import</span> <span class="s1">&#39;dart:async&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">import</span> <span class="s1">&#39;package:flutter/material.dart&#39;</span><span class="p">;</span>
</span><span class='line'><span class="n">import</span> <span class="s1">&#39;package:webview_flutter/webview_flutter.dart&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">main</span><span class="p">()</span> <span class="o">=&gt;</span> <span class="n">runApp</span><span class="p">(</span><span class="n">MaterialApp</span><span class="p">(</span><span class="nl">home:</span> <span class="n">WebViewExample</span><span class="p">()));</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">WebViewExample</span> <span class="kd">extends</span> <span class="n">StatefulWidget</span> <span class="p">{</span>
</span><span class='line'> <span class="err">@</span><span class="n">override</span>
</span><span class='line'> <span class="n">_WebViewExampleState</span> <span class="n">createState</span><span class="p">()</span> <span class="o">=&gt;</span> <span class="n">_WebViewExampleState</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">_WebViewExampleState</span> <span class="kd">extends</span> <span class="n">State</span><span class="o">&lt;</span><span class="n">WebViewExample</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'> <span class="n">WebViewController</span><span class="o">?</span> <span class="n">_webviewController</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="n">Future</span><span class="o">&lt;</span><span class="kt">bool</span><span class="o">&gt;</span> <span class="n">_exitApp</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="n">async</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">if</span> <span class="p">(</span><span class="n">await</span> <span class="n">_webviewController</span><span class="o">!</span><span class="p">.</span><span class="n">canGoBack</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>     <span class="n">print</span><span class="p">(</span><span class="s2">&quot;onwill goback&quot;</span><span class="p">);</span>
</span><span class='line'>     <span class="n">_webviewController</span><span class="o">!</span><span class="p">.</span><span class="n">goBack</span><span class="p">();</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">Future</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
</span><span class='line'>   <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>     <span class="n">debugPrint</span><span class="p">(</span><span class="s2">&quot;_exit will not go back&quot;</span><span class="p">);</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">Future</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="err">@</span><span class="n">override</span>
</span><span class='line'> <span class="n">Widget</span> <span class="n">build</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">WillPopScope</span><span class="p">(</span>
</span><span class='line'>     <span class="nl">onWillPop:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="n">_exitApp</span><span class="p">(</span><span class="n">context</span><span class="p">),</span>
</span><span class='line'>     <span class="nl">child:</span> <span class="n">Scaffold</span><span class="p">(</span>
</span><span class='line'>       <span class="nl">appBar:</span> <span class="n">AppBar</span><span class="p">(</span>
</span><span class='line'>         <span class="nl">title:</span> <span class="kd">const</span> <span class="n">Text</span><span class="p">(</span><span class="s1">&#39;Flutter WebView example&#39;</span><span class="p">),</span>
</span><span class='line'>         <span class="c1">// This drop down menu demonstrates that Flutter widgets can be shown over the web view.</span>
</span><span class='line'>       <span class="p">),</span>
</span><span class='line'>       <span class="c1">// We&#39;re using a Builder here so we have a context that is below the Scaffold</span>
</span><span class='line'>       <span class="c1">// to allow calling Scaffold.of(context) so we can show a snackbar.</span>
</span><span class='line'>       <span class="nl">body:</span> <span class="n">Builder</span><span class="p">(</span><span class="nl">builder:</span> <span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>         <span class="k">return</span> <span class="n">WebView</span><span class="p">(</span>
</span><span class='line'>           <span class="nl">initialUrl:</span> <span class="s1">&#39;http://droidyue.com&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="nl">javascriptMode:</span> <span class="n">JavascriptMode</span><span class="p">.</span><span class="n">unrestricted</span><span class="p">,</span>
</span><span class='line'>           <span class="nl">onWebViewCreated:</span> <span class="p">(</span><span class="n">WebViewController</span> <span class="n">webViewController</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>             <span class="n">_webviewController</span> <span class="o">=</span> <span class="n">webViewController</span><span class="p">;</span>
</span><span class='line'>           <span class="p">},</span>
</span><span class='line'>         <span class="p">);</span>
</span><span class='line'>       <span class="p">}),</span>
</span><span class='line'>     <span class="p">),</span>
</span><span class='line'>   <span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用上述代码后，就可以轻松实现 优先响应 WebView 历史回退。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 下解决 grep is directory 问题]]></title>
    <link href="https://droidyue.com/blog/2022/06/26/fix-grep-is-directory-issue-linux-mac/"/>
    <updated>2022-06-26T20:52:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/26/fix-grep-is-directory-issue-linux-mac</id>
    <content type="html"><![CDATA[<p>Grep 是一个很便捷有用的终端工具，它可以帮助我们快速过滤筛选出一些内容。通常配合 find 命令，可以实现更加强大的能力。</p>

<p>比如这个这样的组合，可以快速发现并定位到 哪个.gradle 文件包含 maven.aliyun.com 。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always <span class="s2">&quot;maven.aliyun.com&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是我们在执行的时候，总会遇到这样的错误提示输出。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grep: ./example/android/.gradle: Is a directory
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>之所以出现这个问题，原因是 <code>find . -name "*.gradle"</code> 匹配到了 .gradle 目录，而使用 grep 只是单纯扫描这个目录（非包含内部文件）没有任何意义。</p>

<p>还在解决方法有很多，可以轻松规避这个错误输出。</p>

<h2>方法一，递归查找该目录</h2>

<p>我们可以通过 <code>-r</code> 指令，递归目录内部的文件查找</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always -r <span class="s2">&quot;maven.aliyun.com&quot;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>方法二，跳过目录</h2>

<p>我们可以通过 <code>--directories=skip</code> 跳过对文件夹的查找</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always  <span class="s2">&quot;maven.aliyun.com&quot;</span> --directories<span class="o">=</span>skip
</span><span class='line'> find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always  <span class="s2">&quot;maven.aliyun.com&quot;</span> --directories<span class="o">=</span>skip
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>方案三，设置环境变量，跳过目录</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">GREP_OPTIONS</span><span class="o">=</span><span class="s2">&quot;--directories=skip&quot;</span>
</span><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always <span class="s2">&quot;maven.aliyun.com&quot;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>方案四， grep 输入源控制</h2>

<p>我们可以使用 find 的 <code>-type f</code> 来只查找文件类型，排除目录类型。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> -type f |  xargs grep -E -n --color<span class="o">=</span>always <span class="s2">&quot;maven.aliyun.com&quot;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的方法都可以解决这个问题，大家可以随意选择偏好的方案处理使用。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Waiting for another flutter command to release the startup lock 问题解决]]></title>
    <link href="https://droidyue.com/blog/2022/06/19/waiting-for-another-flutter-command-to-release-the-startup-lock/"/>
    <updated>2022-06-19T21:39:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/19/waiting-for-another-flutter-command-to-release-the-startup-lock</id>
    <content type="html"><![CDATA[<p>在 Flutter 开发过程中，我们有时候会遇到这个问题，提示下面的信息，然后就一直卡住了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Waiting <span class="k">for </span>another flutter <span class="nb">command </span>to release the startup lock
</span></code></pre></td></tr></table></div></figure>


<p>针对这个问题的解决办法也比较简单</p>

<!--more-->


<h2>方法一</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>killall -9 dart
</span></code></pre></td></tr></table></div></figure>


<h2>方法二</h2>

<ul>
<li>重新启动 IDE</li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[碎片知识整理速成绝招，思源笔记真的太强了！限时优惠还能叠券折上折]]></title>
    <link href="https://droidyue.com/blog/2022/06/17/siyuan-note-618-sale/"/>
    <updated>2022-06-17T07:54:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/17/siyuan-note-618-sale</id>
    <content type="html"><![CDATA[<p>现在的就业环境真的太卷了！可是谁又有办法逃避呢？</p>

<p>总想多利用业余时间多学习，但是对于学渣来讲，想要从零掌握一门就业技能，真的不！容！易！</p>

<p>最近半年来，用过很多的笔记软件，终于发现一款靠谱好用的——支持双向链接的<strong>思源笔记</strong>。</p>

<!--more-->


<p>原价 148 元，最近老朋友<a href="https://store.lizhi.io/site/products/id/548?cid=wncr9wz5">数码荔枝</a>有 618 优惠，前 512 名 9.5 折叠加满减优惠，到手 <strong>135.6 元</strong>。如果你是新用户，还能另外叠加新人券再省 5 元。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE1.png" /></p>

<p>思源笔记的功能巨多，但网上有海量的教程，不用担心不会用。接下来从「记」、「管」、「存」三个方面给大家分享下一些重点功能。</p>

<h2>记录碎片知识</h2>

<p>作为一款笔记软件，做好「记」自然是基础中的基础了。为此，思源笔记做了很多的努力。</p>

<h3>多平台支持</h3>

<p>思源笔记支持 Windows / macOS / Android / iOS 等多平台，随手抄起设备就能快速记录笔记、捕捉灵感想法。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE2.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE2.png" /></p>

<h3>丰富排版</h3>

<p>软件还支持丰富的内容格式，比如统计图表、流程图、脑图、代码公式甚至五线谱，并可直接插入音频和视频。</p>

<p>无论是学编程还是学吉他，都能大派用场。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE3.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE3.png" /></p>

<h3>操作优化</h3>

<p>产品面向国内用户，操作逻辑比其他产品更符合国人使用习惯。</p>

<p>比如无需切换到英文输入法，直接在中文输入法下键入「<strong>、</strong>」就能调出功能菜单，输入「【【」就能创建笔记链接。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE4.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE4.gif" /></p>

<h3>块式编辑</h3>

<p>像记事本、Word 之类的工具，在记录大量的碎片知识后，想要统一管理真的非常要命。</p>

<p>而思源笔记在「记」的第一步，就为后续的「管」打下了基础。它使用 <strong>Block 模式</strong>，记下来的内容会形成一个个内容块。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE5.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE5.gif" /></p>

<p>在写笔记时，无需烦恼内容之间的关系，因为后续可以进行批量整理。编辑过程中还能进入块中聚焦，专注于内容。</p>

<h2>管理知识体系</h2>

<p>说完了「记」，我们再来看看思源笔记为什么敢自称「下一代知识管理系统」。</p>

<p>思源笔记提供了三大杀招：双向链接、列表大纲、书签和标签，帮我们梳理知识逻辑，让零散知识构成体系。</p>

<h3>双向链接</h3>

<p>思源笔记提供了两种方式来实现零散知识的两两关联：<strong>创建链接</strong>和<strong>反向链接</strong> (统称：双向链接)。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE6.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE6.gif" /></p>

<p>比如：</p>

<p>在编辑 A 笔记的时候，提及到「TCP / IP 协议栈」这个东西，而在 B 笔记中某内容块已经详细了它。这时就可以创建，从 A 笔记到 B 笔记中指定内容块的链接。</p>

<p>以后阅读 A 笔记的时候，就能快速查看提及到的各种概念啦！类似百度百科里的词汇链接。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE7.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE7.png" /></p>

<p>正向链接和反向链接就是一对<strong>相对的概念</strong>：A 引用 B 的内容块，则为正向链接；B 的内容块被其他笔记引用了，就是反向链接。</p>

<p>思源笔记的「提及」功能，能帮助我们发现潜在知识的关系，并实现一键创建反向链接。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE8.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE8.gif" /></p>

<p>链接越来越多，思源笔记还能展示这些链接的关系图，帮你把握知识笔记内容的关联。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE9.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE9.png" /></p>

<h3>列表大纲</h3>

<p>思源笔记支持 Markdown 语法，特色的列表大纲功能，让所有标题都可以<strong>折叠 / 张开</strong>，实现内容与大纲的融合，帮助我们快速回顾知识点。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE10.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE10.gif" /></p>

<h3>书签和标签</h3>

<p>对于同类或有联系的大量知识，还可以通过<strong>打标签</strong>的方式进行关联 (创建标签，输入：# + 标签名)。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE11.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE11.gif" /></p>

<p>在日后复习时，还可以用「书签」来标记当前浏览位置，方便安排后续的复习计划。</p>

<p>如此强大的知识管理系统，立即下单不仅可以享有 <strong>9.5 折</strong> (限量 512 名) 的新品优惠，无需凑单还能享受满减优惠！<strong>135.6</strong> <strong>元</strong>到手非常优惠。<a href="https://store.lizhi.io/site/products/id/548?cid=wncr9wz5">点击购买>></a></p>

<h2>存储安全保障</h2>

<p>在把笔记「记」好、把知识「管」好之后，「存」信息的安全当然也是我们看重的。思源笔记支持完全离线使用和端到端同步加密，数据安全可放心！</p>

<h3>完全离线使用</h3>

<p>软件支持离线使用，可把数据完全存储在用户自己的设备上，我的数据我做主。</p>

<h3>端到端同步加密</h3>

<p>客户端进行账号登录需要进行两步验证，并且会接收到微信推送提醒。而数据同步、备份则采用端到端加密技术，并提供云端存储空间。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE12.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE12.png" /></p>

<h2>更丰富的功能</h2>

<p>体验到这里，思源笔记在双链知识管理、数据安全上面的表现已经让我个人觉得「值回票价」了！</p>

<p>但思源笔记的强大远不止于此，它还拥有能超越期待的特性：</p>

<h3>多人协同</h3>

<p>如果需要团队协助，部署服务器就能搭建私有的云端笔记，然后通过授权码控制访问权限，实现可靠的多人协助。</p>

<h3>扩展集市</h3>

<p>想要更多个性化功能，可以在集市中获取海量主题、模板、图标、挂件拓展。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE13.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE13.png" /></p>

<p>利用挂件，在笔记中调用 drawio 创建流程图。还可以切换五花八门的主题样式，让笔记更好看！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE14.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE14.png" /></p>

<p>集市中的模板和图标区，则提供更丰富的个性化元素，来帮助你创作出完美的笔记。夸张的讲，只有你还没想到，就没有思源笔记实现不了的。</p>

<p><strong>135.6 元</strong>限时特价的思源笔记，限前 512 名享受优惠，赶快购买不容错过！<a href="https://store.lizhi.io/site/products/id/548?cid=wncr9wz5">点击购买>></a></p>

<p>优惠或许还会有，但学习时间错过就不再了！马上下单，整理你的笔记去吧~</p>

<hr />

<p>618 活动期间，数码荔枝软件商店优惠产品相当多，像 Typora、Listary、Downie 等热门软件都有大额折扣优惠，不妨去<a href="https://store.lizhi.io/?cid=wncr9wz5">围观一下>></a></p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[限时买一年送半年，618 国民级思维导图工具 XMind 2022 来袭！]]></title>
    <link href="https://droidyue.com/blog/2022/06/17/xmind-big-sale-discount/"/>
    <updated>2022-06-17T07:21:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/17/xmind-big-sale-discount</id>
    <content type="html"><![CDATA[<p>提起思维导图，就不得不说 XMind，作为思维导图工具中的佼佼者，兼具丰富的导图模板、美观的配色方案、及多种创意工具。</p>

<p>无论是职场打工人、在校大学生，还是需要头脑风暴的创意工作者，掌握思维导图能帮你打破思路局限，养成结构思维。</p>

<p>XMind 2022 打磨的众多功能，都让理清思路、展现思维更上一层楼：</p>

<ul>
<li>模板、配色方案更智能；</li>
<li>演说模式更自由；</li>
<li>全新的贴纸、插画、手绘风格；</li>
<li>优化了众多细节体验……</li>
</ul>


<p>这次 618，数码荔枝迎来 XMind 2022 更新后的首次优惠大放送！</p>

<!--more-->


<p>购买一年订阅再送半年！叠加满减再减 15 元，到手仅需 304 元起，优惠截止至 6 月 21 日，现已进入倒计时，欲购从速！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE1.png" /></p>

<p>官方正版授权，安全有保障。快戳 [合作伙伴]<a href="https://store.lizhi.io/site/products/id/47?cid=wncr9wz5">专属优惠链接</a>前往购买！</p>

<h2>智能模板配色方案</h2>

<p>XMind 2022 带来了更多精心设计的模板，覆盖了思维导图的各种经典应用场景，支持鱼骨图、时间轴、树型表格等导图结构混用，让新朋友更快上手，老朋友常用常新。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE2.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE2.gif" /></p>

<p>配色方案变得更为智能，在更改主题颜色时自动适配文字颜色。丰富的颜色变化，巧妙的色彩配比，让好看变得毫不费力~</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE3.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE3.gif" /></p>

<p>升级后的彩虹分支功能也加入智能配色方案阵容，每种配色都有适配的彩虹分支，一键即可让整张图变得缤纷起来。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE4.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE4.png" /></p>

<h2>自定义导图风格</h2>

<p>XMind 2022 为思维导图加入了手绘模式，支持一键将齐整的线条和填充色变成手绘风格，显得更加活泼有趣。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE5.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE5.png" /></p>

<p>还新增了各式各样生动有趣的贴纸、插画，搭配不同的颜色、图标记号，增添视觉效果的同时能让人记住更多有效信息。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE6.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE6.png" /></p>

<p>除了肉眼可见的明显优化外，还支持插入 LaTeX 数学方程，优化导出画质、提升联系线调整和拖拽的体验等等。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE7.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE7.png" /></p>

<p>我们的老朋友数码荔枝 618 带来了限时特惠价，活动期间购买 XMind 2022 一年版仅需 319 元起，除此之外再加送价值 200 多元的半年订阅，更有满减活动，实惠到家！戳 [合作伙伴]<a href="https://store.lizhi.io/site/products/id/47?cid=wncr9wz5">专属优惠链接</a>立即购买！</p>

<h2>演说模式更自由</h2>

<p>演说模式是 XMind 2021 最具特色的功能，自动生成优雅的版式和转场动画，让你像幻灯片一样演示你的思维导图。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE8.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE8.gif" /></p>

<p>现在这个大家喜爱的功能迎来了新一轮的升级，支持演说模式预览，设置主题出场顺序和裁剪序列功能，更灵活控制演说内容。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE9.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE9.gif" /></p>

<p>内容编排上的自由度得到极大提升，支持括号式、要点式和歌词式三种幻灯片布局方式，将信息要点化，紧跟你的思路，清晰地展示你的想法。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE10.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE10.png" /></p>

<p>不管是课堂演说还是小组分享，进入演说模式让你高效呈现思维，突出要点，真正达到有效沟通。</p>

<h2>移动端同步升级</h2>

<p>XMind 移动端也同步升级了各种酷炫功能，iPhone / iPad / Android 各平台无缝衔接。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE11.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE11.png" /></p>

<p>支持一键更换样式、多选批量编辑、多种智能配色方案、手绘风格等功能，移动端绘图效率大幅提升！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE12.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE12.gif" /></p>

<p>618 活动来解锁专业版本，移动端也可畅享桌面版的全新体验，Markdown、SVG、PNG、PDF、Office 等各种格式无限导出分享。</p>

<p>活动仅持续至 21 号，限时买一年送半年，双重好礼更划算！<a href="https://store.lizhi.io/site/products/id/47?cid=wncr9wz5">活动时间有限，欲购从速 >></a></p>

<hr />

<p>正版软件数码荔枝 618 大促，40+ 爆款正版软件 6 折起，还有 6.18 元秒杀，每满 100 减 5 元等你参与！<a href="https://store.lizhi.io/site/search_list?order_by=2&amp;word=&amp;coupon_uuid=0&amp;category_id=80&amp;cid=wncr9wz5">马上前往折扣专区>></a></p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[谁动了我的奶酪，通过 git 找出内容变更历史]]></title>
    <link href="https://droidyue.com/blog/2022/06/13/a-little-git-log-case-can-do-big-help/"/>
    <updated>2022-06-13T06:19:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/13/a-little-git-log-case-can-do-big-help</id>
    <content type="html"><![CDATA[<p>在日常的开发过程中，一段代码内容被添加，删除都是稀疏平常的事情。这也就造成了我们日常开发工作中会遇到这样两个问题</p>

<ul>
<li>这个代码内容是谁添加的，是一直存在还是被修改过多次</li>
<li>有一段代码被删除了，是谁删除的呢</li>
</ul>


<!--more-->


<p>这里我们通过一个具体的例子来说明。</p>

<p>有一个 hosts.txt  文件，内容是</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import lib/a
</span><span class='line'>import lib/b</span></code></pre></td></tr></table></div></figure>


<p>现在我们遇到这样的一个情况</p>

<ul>
<li>最早的host.txt 中包含了 lib/c 的引入</li>
<li>但是在某一个版本 lib/c 被人移除掉了</li>
<li>我们想确定是谁，哪个提交删除了这个 lib/c</li>
</ul>


<p>我们可以使用这段脚本来实现，脚本很简单如下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 将下面的内容保存成 whoMovedMyCheese.sh 文件
</span><span class='line'>#!/bin/bash
</span><span class='line'>git log -S$1 $2
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>// 使用方法
</span><span class='line'>whoMovedMyCheese.sh keyword  file_path</span></code></pre></td></tr></table></div></figure>


<h2>调用脚本查看</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>whoMovedMyCheese.sh lib/c hosts
</span><span class='line'>
</span><span class='line'>commit a4b5ac190f9d152dbdb6555862617ba93f <span class="o">(</span>HEAD -&gt; master<span class="o">)</span>
</span><span class='line'>Author: hahaha &lt;hahaha@hahaha.io&gt;
</span><span class='line'>Date:   Mon May 16 07:59:13 2022 +0800
</span><span class='line'>
</span><span class='line'>    feat: remove lib/c
</span><span class='line'>
</span><span class='line'>commit 89405dbe29ff79412f701e529791a10387e
</span><span class='line'>Author: hahaha &lt;hahaha@hahaha.io&gt;
</span><span class='line'>Date:   Mon May 16 07:58:53 2022 +0800
</span><span class='line'>
</span><span class='line'>    new file:   host.txt
</span></code></pre></td></tr></table></div></figure>


<p>是的，通过上面的脚本就可以轻松查到一段内容的添加和删除提交历史了。是不是很方便和快捷，有效。</p>

<h2>和 Git blame 对别</h2>

<h3>存在内容追踪历史追溯</h3>

<ul>
<li>git blame 只能查看到当前最近的一次修改,</li>
<li>本文方法可以查看出一个内容的修改历史，比如一段内容经过 增加-删除-再增加 这样的信息都是可以被查到的。</li>
</ul>


<h3>删除内容追踪</h3>

<ul>
<li>git blame 无法查看不存在的代码片段的信息</li>
<li>本文方法可以查看到已经删除的内容的历史信息</li>
</ul>


<p>Git 是一个好东西，把它利用好，尤其是 终端 git 命令利用好，你会轻轻松松在处理问题上做到高效快捷与准确。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[终端下 git diff 只展示文件名]]></title>
    <link href="https://droidyue.com/blog/2022/06/06/git-diff-show-filename-only/"/>
    <updated>2022-06-06T08:33:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/06/git-diff-show-filename-only</id>
    <content type="html"><![CDATA[<p>通常我们使用git diff 可以查看具体的内容修改，默认会以patch的形式展示，但是有时候，我们仅仅是希望有一个修改的文件列表，不关心具体的修改内容。</p>

<p>这里完全可以借助 git diff 的一些指令来实现。</p>

<!--more-->


<h2>–name-only</h2>

<p>使用 –name-only可以很轻松查看修改的内容信息</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff --name-only
</span><span class='line'>source/_posts/2022-05-08-flutter-run-stuck-with-log-waiting-for-observatory-port-to-be-available.markdown
</span><span class='line'>source/_posts/2022-05-15-how-to-find-duplicated-file-via-one-script.markdown
</span><span class='line'>source/_posts/2022-05-23-disable-debugprint-and-print-in-flutter-dart-release-mode.markdown
</span><span class='line'>source/_posts/2022-05-30-generate-qrcode-in-terminal-on-mac-or-linux.markdown
</span><span class='line'>source/_posts/2022-05-31-2022-618-lizhi-dot-io-apps-with-discounts-android-windows-mac-ios.markdown
</span></code></pre></td></tr></table></div></figure>


<p>如果是分支对比，可以这样</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff a143e219b58ac55df84a1b36da98751e7eeaca80..master --name-only</span></code></pre></td></tr></table></div></figure>


<h2>–stat</h2>

<p>如果想要获取一些简要的信息，比如修改了多少文件，增加或者删除了多少行数，也可以使用<code>--stat</code> 来实现</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff --stat
</span><span class='line'>source/_posts/2022-05-08-flutter-run-stuck-with-log-waiting-for-observatory-port-to-be-available.markdown |  49 ++++++++++++++++++++++++
</span><span class='line'> source/_posts/2022-05-15-how-to-find-duplicated-file-via-one-script.markdown                              | 171 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
</span><span class='line'> source/_posts/2022-05-23-disable-debugprint-and-print-in-flutter-dart-release-mode.markdown               |  67 ++++++++++++++++++++++++++++++++
</span><span class='line'> source/_posts/2022-05-30-generate-qrcode-in-terminal-on-mac-or-linux.markdown                             |  40 +++++++++++++++++++
</span><span class='line'> source/_posts/2022-05-31-2022-618-lizhi-dot-io-apps-with-discounts-android-windows-mac-ios.markdown       |  80 ++++++++++++++++++++++++++++++++++++++
</span><span class='line'> 5 files changed, 407 insertions(+)
</span></code></pre></td></tr></table></div></figure>


<h2>&mdash;numstat</h2>

<p>有时候除了便于人阅读的化，还需要输出一些便于机器阅读的格式，方便后续的编程化处理，进行数据分析。</p>

<p>使用  –numstat 可以到处下面有规律的格式，方便进行分析</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff  --numstat
</span><span class='line'>49      0       source/_posts/2022-05-08-flutter-run-stuck-with-log-waiting-for-observatory-port-to-be-available.markdown
</span><span class='line'>171     0       source/_posts/2022-05-15-how-to-find-duplicated-file-via-one-script.markdown
</span><span class='line'>67      0       source/_posts/2022-05-23-disable-debugprint-and-print-in-flutter-dart-release-mode.markdown
</span><span class='line'>40      0       source/_posts/2022-05-30-generate-qrcode-in-terminal-on-mac-or-linux.markdown
</span><span class='line'>80      0       source/_posts/2022-05-31-2022-618-lizhi-dot-io-apps-with-discounts-android-windows-mac-ios.markdown
</span></code></pre></td></tr></table></div></figure>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
</feed>

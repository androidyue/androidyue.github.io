<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[技术小黑屋]]></title>
  <link href="https://droidyue.com/atom.xml" rel="self"/>
  <link href="https://droidyue.com/"/>
  <updated>2022-07-12T08:35:06+08:00</updated>
  <id>https://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Flutter webview 处理回退历史]]></title>
    <link href="https://droidyue.com/blog/2022/07/12/flutter-webview-handle-self-goback-first/"/>
    <updated>2022-07-12T08:31:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/07/12/flutter-webview-handle-self-goback-first</id>
    <content type="html"><![CDATA[<p>在 App 开发中，我们总会遇到使用 WebView 的情况， 比如 我们打开了 网页A，然后点击 A 中的链接跳转到 B。如果这个时候，我们按一下系统的返回键，预期的应该是 返回A，而不是推到一个 Native 页面。</p>

<!--more-->


<p>但事实就是，如果你没有经过特殊处理，那么很有可能就不是预期的效果(B &ndash;> A)。不过还在我们只需要简单修改代码，就能解决。</p>

<p>再次明确一下，我们的预期</p>

<ul>
<li>如果 webview 有可以回退的历史，当系统返回按键点击后，进行 webview 历史回退</li>
<li>否则执行 系统回退，返回上一个 native界面</li>
</ul>


<h2>用到的核心代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="n">WebViewController</span><span class="o">?</span> <span class="n">_webviewController</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">WillPopScope</span><span class="p">(</span>
</span><span class='line'>  <span class="nl">onWillPop:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="n">_exitApp</span><span class="p">(</span><span class="n">context</span><span class="p">),</span>
</span><span class='line'>  <span class="nl">child:</span> <span class="n">xxx</span><span class="p">,</span>   
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Future</span><span class="o">&lt;</span><span class="kt">bool</span><span class="o">&gt;</span> <span class="n">_exitApp</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="n">async</span> <span class="p">{</span>
</span><span class='line'> <span class="k">if</span> <span class="p">(</span><span class="n">await</span> <span class="n">_webviewController</span><span class="o">!</span><span class="p">.</span><span class="n">canGoBack</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">print</span><span class="p">(</span><span class="s2">&quot;onwill goback&quot;</span><span class="p">);</span>
</span><span class='line'>   <span class="n">_webviewController</span><span class="o">!</span><span class="p">.</span><span class="n">goBack</span><span class="p">();</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">Future</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
</span><span class='line'> <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">debugPrint</span><span class="p">(</span><span class="s2">&quot;_exit will not go back&quot;</span><span class="p">);</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">Future</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>WebViewController 实例 controllerGlobal 是用来判断检测并执行 webview 历史回退。</li>
<li>使用 WillPopScope 用来监听 系统的返回键调用，并进行执行系统返回还是 回退 WebView 历史</li>
<li>这里利用 controllerGlobal!.canGoBack 来判断是否可以回退 webview 历史</li>
<li>如果需要执行 webview 回退历史，调用 controllerGlobal!.goBack()， 否则响应系统回退</li>
</ul>


<h2>完整的实例代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="n">import</span> <span class="s1">&#39;dart:async&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">import</span> <span class="s1">&#39;package:flutter/material.dart&#39;</span><span class="p">;</span>
</span><span class='line'><span class="n">import</span> <span class="s1">&#39;package:webview_flutter/webview_flutter.dart&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">main</span><span class="p">()</span> <span class="o">=&gt;</span> <span class="n">runApp</span><span class="p">(</span><span class="n">MaterialApp</span><span class="p">(</span><span class="nl">home:</span> <span class="n">WebViewExample</span><span class="p">()));</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">WebViewExample</span> <span class="kd">extends</span> <span class="n">StatefulWidget</span> <span class="p">{</span>
</span><span class='line'> <span class="err">@</span><span class="n">override</span>
</span><span class='line'> <span class="n">_WebViewExampleState</span> <span class="n">createState</span><span class="p">()</span> <span class="o">=&gt;</span> <span class="n">_WebViewExampleState</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">_WebViewExampleState</span> <span class="kd">extends</span> <span class="n">State</span><span class="o">&lt;</span><span class="n">WebViewExample</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'> <span class="n">WebViewController</span><span class="o">?</span> <span class="n">_webviewController</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'> <span class="n">Future</span><span class="o">&lt;</span><span class="kt">bool</span><span class="o">&gt;</span> <span class="n">_exitApp</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="n">async</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">if</span> <span class="p">(</span><span class="n">await</span> <span class="n">_webviewController</span><span class="o">!</span><span class="p">.</span><span class="n">canGoBack</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>     <span class="n">print</span><span class="p">(</span><span class="s2">&quot;onwill goback&quot;</span><span class="p">);</span>
</span><span class='line'>     <span class="n">_webviewController</span><span class="o">!</span><span class="p">.</span><span class="n">goBack</span><span class="p">();</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">Future</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
</span><span class='line'>   <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>     <span class="n">debugPrint</span><span class="p">(</span><span class="s2">&quot;_exit will not go back&quot;</span><span class="p">);</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">Future</span><span class="p">.</span><span class="n">value</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'> <span class="err">@</span><span class="n">override</span>
</span><span class='line'> <span class="n">Widget</span> <span class="n">build</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">WillPopScope</span><span class="p">(</span>
</span><span class='line'>     <span class="nl">onWillPop:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="n">_exitApp</span><span class="p">(</span><span class="n">context</span><span class="p">),</span>
</span><span class='line'>     <span class="nl">child:</span> <span class="n">Scaffold</span><span class="p">(</span>
</span><span class='line'>       <span class="nl">appBar:</span> <span class="n">AppBar</span><span class="p">(</span>
</span><span class='line'>         <span class="nl">title:</span> <span class="kd">const</span> <span class="n">Text</span><span class="p">(</span><span class="s1">&#39;Flutter WebView example&#39;</span><span class="p">),</span>
</span><span class='line'>         <span class="c1">// This drop down menu demonstrates that Flutter widgets can be shown over the web view.</span>
</span><span class='line'>       <span class="p">),</span>
</span><span class='line'>       <span class="c1">// We&#39;re using a Builder here so we have a context that is below the Scaffold</span>
</span><span class='line'>       <span class="c1">// to allow calling Scaffold.of(context) so we can show a snackbar.</span>
</span><span class='line'>       <span class="nl">body:</span> <span class="n">Builder</span><span class="p">(</span><span class="nl">builder:</span> <span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>         <span class="k">return</span> <span class="n">WebView</span><span class="p">(</span>
</span><span class='line'>           <span class="nl">initialUrl:</span> <span class="s1">&#39;http://droidyue.com&#39;</span><span class="p">,</span>
</span><span class='line'>           <span class="nl">javascriptMode:</span> <span class="n">JavascriptMode</span><span class="p">.</span><span class="n">unrestricted</span><span class="p">,</span>
</span><span class='line'>           <span class="nl">onWebViewCreated:</span> <span class="p">(</span><span class="n">WebViewController</span> <span class="n">webViewController</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>             <span class="n">_webviewController</span> <span class="o">=</span> <span class="n">webViewController</span><span class="p">;</span>
</span><span class='line'>           <span class="p">},</span>
</span><span class='line'>         <span class="p">);</span>
</span><span class='line'>       <span class="p">}),</span>
</span><span class='line'>     <span class="p">),</span>
</span><span class='line'>   <span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用上述代码后，就可以轻松实现 优先响应 WebView 历史回退。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 下解决 grep is directory 问题]]></title>
    <link href="https://droidyue.com/blog/2022/06/26/fix-grep-is-directory-issue-linux-mac/"/>
    <updated>2022-06-26T20:52:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/26/fix-grep-is-directory-issue-linux-mac</id>
    <content type="html"><![CDATA[<p>Grep 是一个很便捷有用的终端工具，它可以帮助我们快速过滤筛选出一些内容。通常配合 find 命令，可以实现更加强大的能力。</p>

<p>比如这个这样的组合，可以快速发现并定位到 哪个.gradle 文件包含 maven.aliyun.com 。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always <span class="s2">&quot;maven.aliyun.com&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是我们在执行的时候，总会遇到这样的错误提示输出。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>grep: ./example/android/.gradle: Is a directory
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>之所以出现这个问题，原因是 <code>find . -name "*.gradle"</code> 匹配到了 .gradle 目录，而使用 grep 只是单纯扫描这个目录（非包含内部文件）没有任何意义。</p>

<p>还在解决方法有很多，可以轻松规避这个错误输出。</p>

<h2>方法一，递归查找该目录</h2>

<p>我们可以通过 <code>-r</code> 指令，递归目录内部的文件查找</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always -r <span class="s2">&quot;maven.aliyun.com&quot;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>方法二，跳过目录</h2>

<p>我们可以通过 <code>--directories=skip</code> 跳过对文件夹的查找</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always  <span class="s2">&quot;maven.aliyun.com&quot;</span> --directories<span class="o">=</span>skip
</span><span class='line'> find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always  <span class="s2">&quot;maven.aliyun.com&quot;</span> --directories<span class="o">=</span>skip
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>方案三，设置环境变量，跳过目录</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">GREP_OPTIONS</span><span class="o">=</span><span class="s2">&quot;--directories=skip&quot;</span>
</span><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> | xargs grep -E -n --color<span class="o">=</span>always <span class="s2">&quot;maven.aliyun.com&quot;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>方案四， grep 输入源控制</h2>

<p>我们可以使用 find 的 <code>-type f</code> 来只查找文件类型，排除目录类型。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . -name <span class="s2">&quot;*.gradle&quot;</span> -type f |  xargs grep -E -n --color<span class="o">=</span>always <span class="s2">&quot;maven.aliyun.com&quot;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:7:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span><span class='line'>./example/android/.gradle/build.gradle:23:            url <span class="s1">&#39;http://maven.aliyun.com/nexus/content/repositories/releases/&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的方法都可以解决这个问题，大家可以随意选择偏好的方案处理使用。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Waiting for another flutter command to release the startup lock 问题解决]]></title>
    <link href="https://droidyue.com/blog/2022/06/19/waiting-for-another-flutter-command-to-release-the-startup-lock/"/>
    <updated>2022-06-19T21:39:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/19/waiting-for-another-flutter-command-to-release-the-startup-lock</id>
    <content type="html"><![CDATA[<p>在 Flutter 开发过程中，我们有时候会遇到这个问题，提示下面的信息，然后就一直卡住了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Waiting <span class="k">for </span>another flutter <span class="nb">command </span>to release the startup lock
</span></code></pre></td></tr></table></div></figure>


<p>针对这个问题的解决办法也比较简单</p>

<!--more-->


<h2>方法一</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>killall -9 dart
</span></code></pre></td></tr></table></div></figure>


<h2>方法二</h2>

<ul>
<li>重新启动 IDE</li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[碎片知识整理速成绝招，思源笔记真的太强了！限时优惠还能叠券折上折]]></title>
    <link href="https://droidyue.com/blog/2022/06/17/siyuan-note-618-sale/"/>
    <updated>2022-06-17T07:54:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/17/siyuan-note-618-sale</id>
    <content type="html"><![CDATA[<p>现在的就业环境真的太卷了！可是谁又有办法逃避呢？</p>

<p>总想多利用业余时间多学习，但是对于学渣来讲，想要从零掌握一门就业技能，真的不！容！易！</p>

<p>最近半年来，用过很多的笔记软件，终于发现一款靠谱好用的——支持双向链接的<strong>思源笔记</strong>。</p>

<!--more-->


<p>原价 148 元，最近老朋友<a href="https://store.lizhi.io/site/products/id/548?cid=wncr9wz5">数码荔枝</a>有 618 优惠，前 512 名 9.5 折叠加满减优惠，到手 <strong>135.6 元</strong>。如果你是新用户，还能另外叠加新人券再省 5 元。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE1.png" /></p>

<p>思源笔记的功能巨多，但网上有海量的教程，不用担心不会用。接下来从「记」、「管」、「存」三个方面给大家分享下一些重点功能。</p>

<h2>记录碎片知识</h2>

<p>作为一款笔记软件，做好「记」自然是基础中的基础了。为此，思源笔记做了很多的努力。</p>

<h3>多平台支持</h3>

<p>思源笔记支持 Windows / macOS / Android / iOS 等多平台，随手抄起设备就能快速记录笔记、捕捉灵感想法。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE2.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE2.png" /></p>

<h3>丰富排版</h3>

<p>软件还支持丰富的内容格式，比如统计图表、流程图、脑图、代码公式甚至五线谱，并可直接插入音频和视频。</p>

<p>无论是学编程还是学吉他，都能大派用场。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE3.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE3.png" /></p>

<h3>操作优化</h3>

<p>产品面向国内用户，操作逻辑比其他产品更符合国人使用习惯。</p>

<p>比如无需切换到英文输入法，直接在中文输入法下键入「<strong>、</strong>」就能调出功能菜单，输入「【【」就能创建笔记链接。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE4.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE4.gif" /></p>

<h3>块式编辑</h3>

<p>像记事本、Word 之类的工具，在记录大量的碎片知识后，想要统一管理真的非常要命。</p>

<p>而思源笔记在「记」的第一步，就为后续的「管」打下了基础。它使用 <strong>Block 模式</strong>，记下来的内容会形成一个个内容块。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE5.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE5.gif" /></p>

<p>在写笔记时，无需烦恼内容之间的关系，因为后续可以进行批量整理。编辑过程中还能进入块中聚焦，专注于内容。</p>

<h2>管理知识体系</h2>

<p>说完了「记」，我们再来看看思源笔记为什么敢自称「下一代知识管理系统」。</p>

<p>思源笔记提供了三大杀招：双向链接、列表大纲、书签和标签，帮我们梳理知识逻辑，让零散知识构成体系。</p>

<h3>双向链接</h3>

<p>思源笔记提供了两种方式来实现零散知识的两两关联：<strong>创建链接</strong>和<strong>反向链接</strong> (统称：双向链接)。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE6.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE6.gif" /></p>

<p>比如：</p>

<p>在编辑 A 笔记的时候，提及到「TCP / IP 协议栈」这个东西，而在 B 笔记中某内容块已经详细了它。这时就可以创建，从 A 笔记到 B 笔记中指定内容块的链接。</p>

<p>以后阅读 A 笔记的时候，就能快速查看提及到的各种概念啦！类似百度百科里的词汇链接。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE7.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE7.png" /></p>

<p>正向链接和反向链接就是一对<strong>相对的概念</strong>：A 引用 B 的内容块，则为正向链接；B 的内容块被其他笔记引用了，就是反向链接。</p>

<p>思源笔记的「提及」功能，能帮助我们发现潜在知识的关系，并实现一键创建反向链接。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE8.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE8.gif" /></p>

<p>链接越来越多，思源笔记还能展示这些链接的关系图，帮你把握知识笔记内容的关联。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE9.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE9.png" /></p>

<h3>列表大纲</h3>

<p>思源笔记支持 Markdown 语法，特色的列表大纲功能，让所有标题都可以<strong>折叠 / 张开</strong>，实现内容与大纲的融合，帮助我们快速回顾知识点。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE10.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE10.gif" /></p>

<h3>书签和标签</h3>

<p>对于同类或有联系的大量知识，还可以通过<strong>打标签</strong>的方式进行关联 (创建标签，输入：# + 标签名)。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE11.gif" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE11.gif" /></p>

<p>在日后复习时，还可以用「书签」来标记当前浏览位置，方便安排后续的复习计划。</p>

<p>如此强大的知识管理系统，立即下单不仅可以享有 <strong>9.5 折</strong> (限量 512 名) 的新品优惠，无需凑单还能享受满减优惠！<strong>135.6</strong> <strong>元</strong>到手非常优惠。<a href="https://store.lizhi.io/site/products/id/548?cid=wncr9wz5">点击购买>></a></p>

<h2>存储安全保障</h2>

<p>在把笔记「记」好、把知识「管」好之后，「存」信息的安全当然也是我们看重的。思源笔记支持完全离线使用和端到端同步加密，数据安全可放心！</p>

<h3>完全离线使用</h3>

<p>软件支持离线使用，可把数据完全存储在用户自己的设备上，我的数据我做主。</p>

<h3>端到端同步加密</h3>

<p>客户端进行账号登录需要进行两步验证，并且会接收到微信推送提醒。而数据同步、备份则采用端到端加密技术，并提供云端存储空间。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE12.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE12.png" /></p>

<h2>更丰富的功能</h2>

<p>体验到这里，思源笔记在双链知识管理、数据安全上面的表现已经让我个人觉得「值回票价」了！</p>

<p>但思源笔记的强大远不止于此，它还拥有能超越期待的特性：</p>

<h3>多人协同</h3>

<p>如果需要团队协助，部署服务器就能搭建私有的云端笔记，然后通过授权码控制访问权限，实现可靠的多人协助。</p>

<h3>扩展集市</h3>

<p>想要更多个性化功能，可以在集市中获取海量主题、模板、图标、挂件拓展。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE13.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE13.png" /></p>

<p>利用挂件，在笔记中调用 drawio 创建流程图。还可以切换五花八门的主题样式，让笔记更好看！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE14.png" alt="https://asset.droidyue.com/image/lizhi_io/siyuan_notes/%E5%9B%BE14.png" /></p>

<p>集市中的模板和图标区，则提供更丰富的个性化元素，来帮助你创作出完美的笔记。夸张的讲，只有你还没想到，就没有思源笔记实现不了的。</p>

<p><strong>135.6 元</strong>限时特价的思源笔记，限前 512 名享受优惠，赶快购买不容错过！<a href="https://store.lizhi.io/site/products/id/548?cid=wncr9wz5">点击购买>></a></p>

<p>优惠或许还会有，但学习时间错过就不再了！马上下单，整理你的笔记去吧~</p>

<hr />

<p>618 活动期间，数码荔枝软件商店优惠产品相当多，像 Typora、Listary、Downie 等热门软件都有大额折扣优惠，不妨去<a href="https://store.lizhi.io/?cid=wncr9wz5">围观一下>></a></p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[限时买一年送半年，618 国民级思维导图工具 XMind 2022 来袭！]]></title>
    <link href="https://droidyue.com/blog/2022/06/17/xmind-big-sale-discount/"/>
    <updated>2022-06-17T07:21:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/17/xmind-big-sale-discount</id>
    <content type="html"><![CDATA[<p>提起思维导图，就不得不说 XMind，作为思维导图工具中的佼佼者，兼具丰富的导图模板、美观的配色方案、及多种创意工具。</p>

<p>无论是职场打工人、在校大学生，还是需要头脑风暴的创意工作者，掌握思维导图能帮你打破思路局限，养成结构思维。</p>

<p>XMind 2022 打磨的众多功能，都让理清思路、展现思维更上一层楼：</p>

<ul>
<li>模板、配色方案更智能；</li>
<li>演说模式更自由；</li>
<li>全新的贴纸、插画、手绘风格；</li>
<li>优化了众多细节体验……</li>
</ul>


<p>这次 618，数码荔枝迎来 XMind 2022 更新后的首次优惠大放送！</p>

<!--more-->


<p>购买一年订阅再送半年！叠加满减再减 15 元，到手仅需 304 元起，优惠截止至 6 月 21 日，现已进入倒计时，欲购从速！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE1.png" /></p>

<p>官方正版授权，安全有保障。快戳 [合作伙伴]<a href="https://store.lizhi.io/site/products/id/47?cid=wncr9wz5">专属优惠链接</a>前往购买！</p>

<h2>智能模板配色方案</h2>

<p>XMind 2022 带来了更多精心设计的模板，覆盖了思维导图的各种经典应用场景，支持鱼骨图、时间轴、树型表格等导图结构混用，让新朋友更快上手，老朋友常用常新。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE2.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE2.gif" /></p>

<p>配色方案变得更为智能，在更改主题颜色时自动适配文字颜色。丰富的颜色变化，巧妙的色彩配比，让好看变得毫不费力~</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE3.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE3.gif" /></p>

<p>升级后的彩虹分支功能也加入智能配色方案阵容，每种配色都有适配的彩虹分支，一键即可让整张图变得缤纷起来。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE4.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE4.png" /></p>

<h2>自定义导图风格</h2>

<p>XMind 2022 为思维导图加入了手绘模式，支持一键将齐整的线条和填充色变成手绘风格，显得更加活泼有趣。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE5.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE5.png" /></p>

<p>还新增了各式各样生动有趣的贴纸、插画，搭配不同的颜色、图标记号，增添视觉效果的同时能让人记住更多有效信息。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE6.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE6.png" /></p>

<p>除了肉眼可见的明显优化外，还支持插入 LaTeX 数学方程，优化导出画质、提升联系线调整和拖拽的体验等等。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE7.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE7.png" /></p>

<p>我们的老朋友数码荔枝 618 带来了限时特惠价，活动期间购买 XMind 2022 一年版仅需 319 元起，除此之外再加送价值 200 多元的半年订阅，更有满减活动，实惠到家！戳 [合作伙伴]<a href="https://store.lizhi.io/site/products/id/47?cid=wncr9wz5">专属优惠链接</a>立即购买！</p>

<h2>演说模式更自由</h2>

<p>演说模式是 XMind 2021 最具特色的功能，自动生成优雅的版式和转场动画，让你像幻灯片一样演示你的思维导图。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE8.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE8.gif" /></p>

<p>现在这个大家喜爱的功能迎来了新一轮的升级，支持演说模式预览，设置主题出场顺序和裁剪序列功能，更灵活控制演说内容。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE9.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE9.gif" /></p>

<p>内容编排上的自由度得到极大提升，支持括号式、要点式和歌词式三种幻灯片布局方式，将信息要点化，紧跟你的思路，清晰地展示你的想法。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE10.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE10.png" /></p>

<p>不管是课堂演说还是小组分享，进入演说模式让你高效呈现思维，突出要点，真正达到有效沟通。</p>

<h2>移动端同步升级</h2>

<p>XMind 移动端也同步升级了各种酷炫功能，iPhone / iPad / Android 各平台无缝衔接。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE11.png" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE11.png" /></p>

<p>支持一键更换样式、多选批量编辑、多种智能配色方案、手绘风格等功能，移动端绘图效率大幅提升！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE12.gif" alt="https://asset.droidyue.com/image/lizhi_io/xmind/%E5%9B%BE12.gif" /></p>

<p>618 活动来解锁专业版本，移动端也可畅享桌面版的全新体验，Markdown、SVG、PNG、PDF、Office 等各种格式无限导出分享。</p>

<p>活动仅持续至 21 号，限时买一年送半年，双重好礼更划算！<a href="https://store.lizhi.io/site/products/id/47?cid=wncr9wz5">活动时间有限，欲购从速 >></a></p>

<hr />

<p>正版软件数码荔枝 618 大促，40+ 爆款正版软件 6 折起，还有 6.18 元秒杀，每满 100 减 5 元等你参与！<a href="https://store.lizhi.io/site/search_list?order_by=2&amp;word=&amp;coupon_uuid=0&amp;category_id=80&amp;cid=wncr9wz5">马上前往折扣专区>></a></p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[谁动了我的奶酪，通过 git 找出内容变更历史]]></title>
    <link href="https://droidyue.com/blog/2022/06/13/a-little-git-log-case-can-do-big-help/"/>
    <updated>2022-06-13T06:19:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/13/a-little-git-log-case-can-do-big-help</id>
    <content type="html"><![CDATA[<p>在日常的开发过程中，一段代码内容被添加，删除都是稀疏平常的事情。这也就造成了我们日常开发工作中会遇到这样两个问题</p>

<ul>
<li>这个代码内容是谁添加的，是一直存在还是被修改过多次</li>
<li>有一段代码被删除了，是谁删除的呢</li>
</ul>


<!--more-->


<p>这里我们通过一个具体的例子来说明。</p>

<p>有一个 hosts.txt  文件，内容是</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import lib/a
</span><span class='line'>import lib/b</span></code></pre></td></tr></table></div></figure>


<p>现在我们遇到这样的一个情况</p>

<ul>
<li>最早的host.txt 中包含了 lib/c 的引入</li>
<li>但是在某一个版本 lib/c 被人移除掉了</li>
<li>我们想确定是谁，哪个提交删除了这个 lib/c</li>
</ul>


<p>我们可以使用这段脚本来实现，脚本很简单如下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 将下面的内容保存成 whoMovedMyCheese.sh 文件
</span><span class='line'>#!/bin/bash
</span><span class='line'>git log -S$1 $2
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>// 使用方法
</span><span class='line'>whoMovedMyCheese.sh keyword  file_path</span></code></pre></td></tr></table></div></figure>


<h2>调用脚本查看</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>whoMovedMyCheese.sh lib/c hosts
</span><span class='line'>
</span><span class='line'>commit a4b5ac190f9d152dbdb6555862617ba93f <span class="o">(</span>HEAD -&gt; master<span class="o">)</span>
</span><span class='line'>Author: hahaha &lt;hahaha@hahaha.io&gt;
</span><span class='line'>Date:   Mon May 16 07:59:13 2022 +0800
</span><span class='line'>
</span><span class='line'>    feat: remove lib/c
</span><span class='line'>
</span><span class='line'>commit 89405dbe29ff79412f701e529791a10387e
</span><span class='line'>Author: hahaha &lt;hahaha@hahaha.io&gt;
</span><span class='line'>Date:   Mon May 16 07:58:53 2022 +0800
</span><span class='line'>
</span><span class='line'>    new file:   host.txt
</span></code></pre></td></tr></table></div></figure>


<p>是的，通过上面的脚本就可以轻松查到一段内容的添加和删除提交历史了。是不是很方便和快捷，有效。</p>

<h2>和 Git blame 对别</h2>

<h3>存在内容追踪历史追溯</h3>

<ul>
<li>git blame 只能查看到当前最近的一次修改,</li>
<li>本文方法可以查看出一个内容的修改历史，比如一段内容经过 增加-删除-再增加 这样的信息都是可以被查到的。</li>
</ul>


<h3>删除内容追踪</h3>

<ul>
<li>git blame 无法查看不存在的代码片段的信息</li>
<li>本文方法可以查看到已经删除的内容的历史信息</li>
</ul>


<p>Git 是一个好东西，把它利用好，尤其是 终端 git 命令利用好，你会轻轻松松在处理问题上做到高效快捷与准确。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[终端下 git diff 只展示文件名]]></title>
    <link href="https://droidyue.com/blog/2022/06/06/git-diff-show-filename-only/"/>
    <updated>2022-06-06T08:33:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/06/06/git-diff-show-filename-only</id>
    <content type="html"><![CDATA[<p>通常我们使用git diff 可以查看具体的内容修改，默认会以patch的形式展示，但是有时候，我们仅仅是希望有一个修改的文件列表，不关心具体的修改内容。</p>

<p>这里完全可以借助 git diff 的一些指令来实现。</p>

<!--more-->


<h2>–name-only</h2>

<p>使用 –name-only可以很轻松查看修改的内容信息</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff --name-only
</span><span class='line'>source/_posts/2022-05-08-flutter-run-stuck-with-log-waiting-for-observatory-port-to-be-available.markdown
</span><span class='line'>source/_posts/2022-05-15-how-to-find-duplicated-file-via-one-script.markdown
</span><span class='line'>source/_posts/2022-05-23-disable-debugprint-and-print-in-flutter-dart-release-mode.markdown
</span><span class='line'>source/_posts/2022-05-30-generate-qrcode-in-terminal-on-mac-or-linux.markdown
</span><span class='line'>source/_posts/2022-05-31-2022-618-lizhi-dot-io-apps-with-discounts-android-windows-mac-ios.markdown
</span></code></pre></td></tr></table></div></figure>


<p>如果是分支对比，可以这样</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff a143e219b58ac55df84a1b36da98751e7eeaca80..master --name-only</span></code></pre></td></tr></table></div></figure>


<h2>–stat</h2>

<p>如果想要获取一些简要的信息，比如修改了多少文件，增加或者删除了多少行数，也可以使用<code>--stat</code> 来实现</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff --stat
</span><span class='line'>source/_posts/2022-05-08-flutter-run-stuck-with-log-waiting-for-observatory-port-to-be-available.markdown |  49 ++++++++++++++++++++++++
</span><span class='line'> source/_posts/2022-05-15-how-to-find-duplicated-file-via-one-script.markdown                              | 171 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
</span><span class='line'> source/_posts/2022-05-23-disable-debugprint-and-print-in-flutter-dart-release-mode.markdown               |  67 ++++++++++++++++++++++++++++++++
</span><span class='line'> source/_posts/2022-05-30-generate-qrcode-in-terminal-on-mac-or-linux.markdown                             |  40 +++++++++++++++++++
</span><span class='line'> source/_posts/2022-05-31-2022-618-lizhi-dot-io-apps-with-discounts-android-windows-mac-ios.markdown       |  80 ++++++++++++++++++++++++++++++++++++++
</span><span class='line'> 5 files changed, 407 insertions(+)
</span></code></pre></td></tr></table></div></figure>


<h2>&mdash;numstat</h2>

<p>有时候除了便于人阅读的化，还需要输出一些便于机器阅读的格式，方便后续的编程化处理，进行数据分析。</p>

<p>使用  –numstat 可以到处下面有规律的格式，方便进行分析</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git diff  --numstat
</span><span class='line'>49      0       source/_posts/2022-05-08-flutter-run-stuck-with-log-waiting-for-observatory-port-to-be-available.markdown
</span><span class='line'>171     0       source/_posts/2022-05-15-how-to-find-duplicated-file-via-one-script.markdown
</span><span class='line'>67      0       source/_posts/2022-05-23-disable-debugprint-and-print-in-flutter-dart-release-mode.markdown
</span><span class='line'>40      0       source/_posts/2022-05-30-generate-qrcode-in-terminal-on-mac-or-linux.markdown
</span><span class='line'>80      0       source/_posts/2022-05-31-2022-618-lizhi-dot-io-apps-with-discounts-android-windows-mac-ios.markdown
</span></code></pre></td></tr></table></div></figure>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给「荔」一夏 618 正版软件大促，秒杀 + 折扣 + 满减一起来袭！]]></title>
    <link href="https://droidyue.com/blog/2022/05/31/2022-618-lizhi-dot-io-apps-with-discounts-android-windows-mac-ios/"/>
    <updated>2022-05-31T07:39:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/05/31/2022-618-lizhi-dot-io-apps-with-discounts-android-windows-mac-ios</id>
    <content type="html"><![CDATA[<p>五月进入尾声，618 各种活动已经陆续开始了，又是年中采购，清空购物车的好机会。</p>

<p>除了可以买吃的、用的实物，趁 618 入手虚拟商品，如软件会员、正版授权码同样有巨多优惠，还不用担心快递因疫情延误，买完就能用。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE1.png" /></p>

<p>我们的朋友「数码荔枝」今年提前开启了 618 给「荔」一夏大促活动，让大家更早享受特价，和其他抢购不撞车。</p>

<!--more-->


<p>听说这次的促销相当有诚意：</p>

<ul>
<li>40+ 热门软件 6 折起抢购；</li>
<li>上百元的软件授权码 6.18 元秒杀；</li>
<li>折扣后再满减，每满 100 减 5 元！</li>
</ul>


<p>2022 年 5 月 30 日至 6 月 21 日，通过[合作伙伴]的<a href="https://store.lizhi.io/?cid=wncr9wz5">专属链接</a>前往购买，就能享受各种优惠价格，这个 618 带几款正版软件回家吧！</p>

<hr />

<h2>爆款软件 6.18 元秒杀</h2>

<p>要说大促什么活动最火爆，当然属秒杀抢购！平日里要百余块的软件，现在都只要 <strong>6.18 元</strong>就有机会秒到！</p>

<ul>
<li>一口价：<strong>6.18 元</strong> (每场 10 份)</li>
<li>三批秒杀：6 月 1~2 日、6~10 日、13~17 日；</li>
<li>每天两场：<strong>15:00</strong> 与 <strong>21:00</strong> 准时开放；</li>
</ul>


<p>秒杀价没抢到？还有折上 7~9 折可抢，手速不够用户必买！秒杀时间与其他平台活动错开，不耽误大家清空购物车。</p>

<p>下面的秒杀日历要收好，Listary、Bandizip、CleanShot X 等终生版授权，抢到就是赚到！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE2.png" alt="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE2.png" /></p>

<p><a href="https://store.lizhi.io/site/search_list?order_by=2&amp;word=&amp;coupon_uuid=0&amp;category_id=60&amp;cid=wncr9wz5">前往秒杀专区看一眼，定好闹钟准备抢 >></a></p>

<h2>软件优惠 6 折起</h2>

<p>除了数量有限的爆款秒杀，还有 40+ 精选软件 <strong>6 折</strong>起优惠，无套路直降人人都能参与的钜惠活动。<a href="https://store.lizhi.io/site/search_list?order_by=2&amp;word=&amp;coupon_uuid=0&amp;category_id=80&amp;cid=wncr9wz5">前往 618 活动专区抢购 >></a></p>

<p>活动期间，7 折 AdGuard 仅需 28 元起，白描黄金会员仅需 25 元买断，所见即所得 Markdown 编辑器 Typora 仅需 80.1 元……全部软件折扣可前往活动专区查看。</p>

<p>需要注意以下三款软件，将在不同的时间解锁优惠：</p>

<ul>
<li>6 月 9 日解锁 <strong>7</strong> 折 <strong>Parallels Desktop</strong>；</li>
<li>6 月 12 日解锁 <strong>Eagle</strong> 独家优惠 <strong>139.3 元</strong>抢！</li>
<li>6 月 12 日解锁 <strong>XMind</strong>，买一年送半年。</li>
</ul>


<p>记住时间，不要错过啦！看下图一览所有优惠！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE3%EF%BC%88Mac%E7%89%88%EF%BC%89.png" alt="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE3%EF%BC%88Mac%E7%89%88%EF%BC%89.png" />
<img src="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE3%EF%BC%88Win%E7%89%88%EF%BC%89.png" alt="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE3%EF%BC%88Win%E7%89%88%EF%BC%89.png" />
<img src="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE3%EF%BC%88%E5%85%A8%E5%B9%B3%E5%8F%B0%EF%BC%89.png" alt="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE3%EF%BC%88%E5%85%A8%E5%B9%B3%E5%8F%B0%EF%BC%89.png" /></p>

<p><a href="https://store.lizhi.io/?cid=wncr9wz5">618 大促活动火热进行中，正版软件 6 折抢 >></a></p>

<h2>折后满减省更多</h2>

<p>上面的优惠已经够多了？前往数码荔枝买软件，再送你<strong>每满 100 就减 5 元</strong>，结算时直接满减！</p>

<p>而且优惠还能叠加：满 200 减 10 元，满 300 减 15 元……以此类推，上不封顶！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE4.png" alt="https://asset.droidyue.com/image/lizhi_io/618_2022/%E5%9B%BE4.png" /></p>

<p>订阅制的产品囤着这时买，折扣之后再满减，真是优惠到家啦！</p>

<hr />

<p>数码荔枝 618 活动正式开启！秒杀 + 折扣 + 满减的超强优惠阵容，错过要等好久，赶快买它！别忘了通过<a href="https://store.lizhi.io/?cid=wncr9wz5">专属链接</a> 前往购买，享受独家的大促优惠！</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 下 终端也能生成二维码了]]></title>
    <link href="https://droidyue.com/blog/2022/05/30/generate-qrcode-in-terminal-on-mac-or-linux/"/>
    <updated>2022-05-30T07:45:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/05/30/generate-qrcode-in-terminal-on-mac-or-linux</id>
    <content type="html"><![CDATA[<p>有些时候，我们需要将链接或者文本转换成 二维码，通常这时候我们会使用网上的在线服务进行处理，其实我们还可以做到更加简单，使用终端即可生成二维码。</p>

<p>这里，我们需要借助 Mac 下 homebrew 的一个库来实现，这个库的名字叫做 qrencode。下面就是关于 这个库的安装，封装，以及使用。</p>

<!--more-->


<h2>安装</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install qrencode
</span></code></pre></td></tr></table></div></figure>


<h2>使用</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>qrencode  -t ANSIUTF8 https://droidyue.com
</span></code></pre></td></tr></table></div></figure>


<p>执行上面的语句，就能马上看到一个二维码在终端生成了。</p>

<h2>保存成脚本(qrCodeGenerate.sh)</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>qrencode  -t ANSIUTF8 <span class="nv">$1</span>
</span></code></pre></td></tr></table></div></figure>


<h2>脚本使用</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>qrCodeGenerate.sh https://droidyue.com
</span></code></pre></td></tr></table></div></figure>


<p>保存成脚本，让我们后续使用起来更加的简单与快捷。</p>

<h2>qrencode 文档</h2>

<ul>
<li><a href="https://formulae.brew.sh/formula/qrencode">https://formulae.brew.sh/formula/qrencode</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter/Dart release 模式下屏蔽 debugPrint 与 print 输出]]></title>
    <link href="https://droidyue.com/blog/2022/05/23/disable-debugprint-and-print-in-flutter-dart-release-mode/"/>
    <updated>2022-05-23T07:30:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/05/23/disable-debugprint-and-print-in-flutter-dart-release-mode</id>
    <content type="html"><![CDATA[<p>当我们在写 Flutter，Dart程序时，release 模式下，我们很奇怪的发现debugPrint和 print 这两个的输出内容，还是能够通过 <code>flutter logs</code> 展示出来。这一点尤其在端上暴露的问题要严重一些，比如涉及到一些敏感信息的日志打印。</p>

<p>本文，将会有两个超级简单的方法，来实现对这些输出的屏蔽，并且是专门治理 release 模式下的问题，debug 模式不受影响。</p>

<!--more-->


<h2>DebugPrint</h2>

<p>DebugPrint  着实是一个比较迷惑的方法，看意思我们理解是在debug 模式下才进行日志打印，但是实际上，这个方法也会在 release 模式下进行日志输出。</p>

<p>好在，我们可以通过这样简单设置即可处理 上面的问题。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">kReleaseMode</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">debugPrint</span> <span class="o">=</span> <span class="p">(</span><span class="kt">String</span><span class="o">?</span> <span class="n">message</span><span class="p">,</span> <span class="p">{</span><span class="kt">int</span><span class="o">?</span> <span class="n">wrapWidth</span><span class="p">})</span> <span class="p">{</span>
</span><span class='line'>     <span class="c1">// empty debugPrint implementation in the release mode</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 RunApp 启动之前即可。</p>

<h2>print 处理</h2>

<p>print 的处理相对比较麻烦一些，但是 dart 层也提供了一个 重载print实现的方法，就是使用 Zone API.</p>

<p>实现思路如下</p>

<ul>
<li>使用 runZonedGuarded 包裹  runApp</li>
<li>增加 zoneSpecification 参数配置 printHandler</li>
<li>printHandler 增加release 模式控制，进行日志打印屏蔽处理。</li>
</ul>


<p>具体代码如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='dart'><span class='line'><span class="n">runZonedGuarded</span><span class="p">(()</span> <span class="p">{</span>
</span><span class='line'> <span class="n">runApp</span><span class="p">(</span><span class="n">MyApp</span><span class="p">());</span>
</span><span class='line'><span class="p">},</span> <span class="p">(</span><span class="n">error</span><span class="p">,</span> <span class="n">stackTrace</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'> <span class="n">print</span><span class="p">(</span><span class="n">stackTrace</span><span class="p">);</span>
</span><span class='line'><span class="p">},</span> <span class="nl">zoneSpecification:</span> <span class="n">ZoneSpecification</span><span class="p">(</span>
</span><span class='line'>   <span class="nl">print:</span> <span class="p">(</span><span class="n">Zone</span> <span class="n">self</span><span class="p">,</span> <span class="n">ZoneDelegate</span> <span class="n">parent</span><span class="p">,</span> <span class="n">Zone</span> <span class="n">zone</span><span class="p">,</span> <span class="kt">String</span> <span class="n">message</span><span class="p">){</span>
</span><span class='line'>     <span class="cm">/**</span>
</span><span class='line'><span class="cm">      * Print only in debug mode</span>
</span><span class='line'><span class="cm">      * */</span>
</span><span class='line'>     <span class="k">if</span> <span class="p">(</span><span class="n">kDebugMode</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="n">parent</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="n">zone</span><span class="p">,</span> <span class="s2">&quot;wrapped content=</span><span class="si">$</span><span class="n">message</span><span class="s2">&quot;</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>   <span class="p">}));</span>
</span></code></pre></td></tr></table></div></figure>


<h2>其他的建议</h2>

<ul>
<li>使用自己封装的 Log 库，可以统一进行管理</li>
<li>使用 lint 检查，检测并处理 使用 print，debugPrint的代码。</li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个脚本，快速发现项目中的重复文件]]></title>
    <link href="https://droidyue.com/blog/2022/05/15/how-to-find-duplicated-file-via-one-script/"/>
    <updated>2022-05-15T22:16:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/05/15/how-to-find-duplicated-file-via-one-script</id>
    <content type="html"><![CDATA[<p>项目中的文件越来愈多，导致生成的apk包也不断增大，可是这些文件中会不会存在重复的文件呢，这是一个值得验证的问题，毕竟解决了之后会减少很多apk的体积。</p>

<p>我们不可能依赖人工的手动查找，因为这样是时间成本太大。于是我们再次尝试使用脚本程序来实现检查项目中是否有重复文件。</p>

<!--more-->


<h2>脚本思路</h2>

<ul>
<li>利用md5对内容进行计算</li>
<li>设置一个字典，key是md5值，value是对应的文件路径列表</li>
<li>如果上字典的value项（文件路径列表）多余1个，则表示存在重复的文件</li>
<li>利用重复的文件的数量和重复文件的大小，我们计算出总共可以节省的空间大小</li>
</ul>


<h2>脚本内容</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;find&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;digest/md5&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#  通常为项目的路径</span>
</span><span class='line'><span class="n">targetDirToSearch</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="vg">$hashesFiles</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'><span class="vg">$sizeCanBeSaved</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">getFileMd5Checksum</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="ss">Digest</span><span class="p">:</span><span class="ss">:MD5</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">file</span><span class="p">))</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">shouldCheckThisFile</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="n">isFile</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">file?</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="n">isGitFile</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;.git/&quot;</span>
</span><span class='line'>  <span class="n">isGradleFile</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;.gradle/&quot;</span>
</span><span class='line'>  <span class="n">isIdeFile</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;.idea/&quot;</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">isFile</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">isGitFile</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">isGradleFile</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">isIdeFile</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">getFilesByMd5</span><span class="p">(</span><span class="n">md5Value</span><span class="p">)</span>
</span><span class='line'>  <span class="n">existingFiles</span> <span class="o">=</span> <span class="vg">$hashesFiles</span><span class="o">[</span><span class="n">md5Value</span><span class="o">]</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">existingFiles</span> <span class="o">==</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>      <span class="n">existingFiles</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">existingFiles</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">recordFile</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="n">md5</span> <span class="o">=</span> <span class="n">getFileMd5Checksum</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="vg">$hashesFiles</span><span class="o">[</span><span class="n">md5</span><span class="o">]</span> <span class="o">=</span> <span class="n">getFilesByMd5</span><span class="p">(</span><span class="n">md5</span><span class="p">)</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">printHashesFiles</span><span class="p">()</span>
</span><span class='line'>  <span class="vg">$hashesFiles</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="n">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="o">|</span><span class="n">array</span><span class="o">|</span> <span class="n">array</span><span class="o">.</span><span class="n">size</span> <span class="o">&gt;</span> <span class="mi">1</span>
</span><span class='line'>  <span class="p">}</span><span class="o">.</span><span class="n">sort_by</span> <span class="p">{</span>
</span><span class='line'>      <span class="o">|</span><span class="n">files</span><span class="o">|</span> <span class="no">File</span><span class="o">.</span><span class="n">size</span><span class="p">(</span><span class="n">files</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span>
</span><span class='line'>      <span class="o">|</span><span class="n">array</span><span class="o">|</span>
</span><span class='line'>          <span class="n">fileSize</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">size</span><span class="p">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>          <span class="nb">puts</span> <span class="s2">&quot;Duplicated files size=</span><span class="si">#{</span><span class="n">format_mb</span><span class="p">(</span><span class="n">fileSize</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>          <span class="n">array</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span>
</span><span class='line'>              <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">f</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="vg">$sizeCanBeSaved</span> <span class="o">+=</span> <span class="n">fileSize</span> <span class="o">*</span> <span class="p">(</span><span class="n">array</span><span class="o">.</span><span class="n">size</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>          <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">format_mb</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>
</span><span class='line'>  <span class="n">conv</span> <span class="o">=</span> <span class="o">[</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;kb&#39;</span><span class="p">,</span> <span class="s1">&#39;mb&#39;</span><span class="p">,</span> <span class="s1">&#39;gb&#39;</span><span class="p">,</span> <span class="s1">&#39;tb&#39;</span><span class="p">,</span> <span class="s1">&#39;pb&#39;</span><span class="p">,</span> <span class="s1">&#39;eb&#39;</span> <span class="o">]</span><span class="p">;</span>
</span><span class='line'>  <span class="n">scale</span> <span class="o">=</span> <span class="mi">1024</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">ndx</span><span class="o">=</span><span class="mi">1</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="n">scale</span><span class="o">**</span><span class="n">ndx</span><span class="p">)</span>  <span class="p">)</span> <span class="k">then</span>
</span><span class='line'>    <span class="k">return</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="p">(</span><span class="n">size</span><span class="p">)</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">conv</span><span class="o">[</span><span class="n">ndx</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">size</span><span class="o">=</span><span class="n">size</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'>  <span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">ndx</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="n">scale</span><span class="o">**</span><span class="n">ndx</span><span class="p">)</span>  <span class="p">)</span> <span class="k">then</span>
</span><span class='line'>      <span class="k">return</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="s1">&#39;%.3f&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">size</span><span class="o">/</span><span class="p">(</span><span class="n">scale</span><span class="o">**</span><span class="p">(</span><span class="n">ndx</span><span class="o">-</span><span class="mi">1</span><span class="p">)))</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">conv</span><span class="o">[</span><span class="n">ndx</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">ndx</span><span class="o">=</span><span class="mi">7</span>
</span><span class='line'>  <span class="k">return</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="s1">&#39;%.3f&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">size</span><span class="o">/</span><span class="p">(</span><span class="n">scale</span><span class="o">**</span><span class="p">(</span><span class="n">ndx</span><span class="o">-</span><span class="mi">1</span><span class="p">)))</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">conv</span><span class="o">[</span><span class="n">ndx</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">getFileSize</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">format_mb</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">size</span><span class="p">(</span><span class="n">f</span><span class="p">))</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">start</span><span class="p">(</span><span class="n">dirToSearch</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Find</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">dirToSearch</span><span class="p">)</span><span class="o">.</span><span class="n">select</span> <span class="p">{</span>
</span><span class='line'>      <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">shouldCheckThisFile</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span>
</span><span class='line'>      <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;Checking file </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>          <span class="n">recordFile</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">printHashesFiles</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Size can be saved </span><span class="si">#{</span><span class="n">format_mb</span><span class="p">(</span><span class="vg">$sizeCanBeSaved</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">start</span><span class="p">(</span><span class="n">targetDirToSearch</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>执行结果</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>MacBook-Pro-8:~/Documents/AndroidProjects/EasyHybridApp<span class="o">(</span>master|✚3<span class="o">)</span> % findDuplicatedFiles.rb ./
</span><span class='line'>Checking file ./.gitignore
</span><span class='line'>Checking file ./EasyHybridApp.iml
</span><span class='line'>Checking file ./app/.gitignore
</span><span class='line'>Checking file ./app/app.iml
</span><span class='line'>Checking file ./app/build.gradle
</span><span class='line'>Checking file ./app/proguard-rules.pro
</span><span class='line'>Checking file ./app/src/androidTest/java/com/droidyue/easyhybridapp/ExampleInstrumentedTest.kt
</span><span class='line'>Checking file ./app/src/main/AndroidManifest.xml
</span><span class='line'>Checking file ./app/src/main/java/com/droidyue/easyhybridapp/AppInfo.kt
</span><span class='line'>Checking file ./app/src/main/res/layout/activity_main.xml
</span><span class='line'>Checking file ./app/src/main/res/values/colors.xml
</span><span class='line'>Checking file ./app/src/main/res/values/strings.xml
</span><span class='line'>Checking file ./app/src/main/res/values/styles.xml
</span><span class='line'>Checking file ./app/src/main/res/xml/network_security_config.xml
</span><span class='line'>Checking file ./app/src/test/java/com/droidyue/easyhybridapp/ExampleUnitTest.kt
</span><span class='line'>Checking file ./build.gradle
</span><span class='line'>Checking file ./common/.gitignore
</span><span class='line'>Checking file ./common/build.gradle
</span><span class='line'>Checking file ./common/common.iml
</span><span class='line'>Checking file ./common/consumer-rules.pro
</span><span class='line'>Checking file ./common/proguard-rules.pro
</span><span class='line'>Checking file ./common/src/androidTest/java/com/droidyue/common/ExampleInstrumentedTest.kt
</span><span class='line'>Checking file ./common/src/main/AndroidManifest.xml
</span><span class='line'>Checking file ./common/src/main/java/com/droidyue/common/ClassExt.kt
</span><span class='line'>Checking file ./common/src/main/java/com/droidyue/common/ConfirmDialogExt.kt
</span><span class='line'>Checking file ./common/src/main/java/com/droidyue/common/ContextExt.kt
</span><span class='line'>Checking file ./webview/src/androidTest/java/com/droidyue/webview/ExampleInstrumentedTest.kt
</span><span class='line'>Checking file ./webview/src/main/java/com/droidyue/webview/webviewclient/PageRequestWebViewClient.kt
</span><span class='line'>Checking file ./webview/src/main/java/com/droidyue/webview/webviewclient/WhitelistLaunchingIntentWebViewClient.kt
</span><span class='line'>Checking file ./webview/src/main/res/layout/activity_webview.xml
</span><span class='line'>Checking file ./webview/src/main/res/raw/deeplink_whitelist.json
</span><span class='line'>Checking file ./webview/src/main/res/values/strings.xml
</span><span class='line'>Checking file ./webview/src/test/java/com/droidyue/webview/ExampleUnitTest.kt
</span><span class='line'>Checking file ./webview/webview.iml
</span><span class='line'>Duplicated files <span class="nv">size</span><span class="o">=</span>0 b
</span><span class='line'>./common/consumer-rules.pro
</span><span class='line'>./webview/consumer-rules.pro
</span><span class='line'>
</span><span class='line'>Duplicated files <span class="nv">size</span><span class="o">=</span>7 b
</span><span class='line'>./app/.gitignore
</span><span class='line'>./common/.gitignore
</span><span class='line'>./webview/.gitignore
</span><span class='line'>
</span><span class='line'>Duplicated files <span class="nv">size</span><span class="o">=</span>272 b
</span><span class='line'>./app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
</span><span class='line'>./app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
</span><span class='line'>
</span><span class='line'>Duplicated files <span class="nv">size</span><span class="o">=</span>751 b
</span><span class='line'>./app/proguard-rules.pro
</span><span class='line'>./common/proguard-rules.pro
</span><span class='line'>./webview/proguard-rules.pro
</span><span class='line'>
</span><span class='line'>Size can be saved 1788 b
</span></code></pre></td></tr></table></div></figure>


<h2>运行建议</h2>

<ul>
<li>在执行之前建议执行以下clean，比如安卓项目执行<code>./gradlew clean</code></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flutter 在 iOS 模拟器中运行卡住问题解决]]></title>
    <link href="https://droidyue.com/blog/2022/05/08/flutter-run-stuck-with-log-waiting-for-observatory-port-to-be-available/"/>
    <updated>2022-05-08T22:41:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/05/08/flutter-run-stuck-with-log-waiting-for-observatory-port-to-be-available</id>
    <content type="html"><![CDATA[<p>当我们尝试在 iOS 模拟器运行 <code>flutter run</code> 可能会出现类似如下的卡住问题。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">executing:</span> <span class="n">xcrun</span> <span class="n">simctl</span> <span class="n">launch</span> <span class="n">xxx</span><span class="o">-</span><span class="mi">54</span><span class="n">F9</span><span class="o">-</span><span class="mi">427</span><span class="n">F</span><span class="o">-</span><span class="mi">8119</span><span class="o">-</span><span class="n">xxxx</span> <span class="n">com</span><span class="o">.</span><span class="na">hahaha</span><span class="o">.</span><span class="na">app</span> <span class="o">--</span><span class="n">enable</span><span class="o">-</span><span class="n">dart</span><span class="o">-</span><span class="n">profiling</span> <span class="o">--</span><span class="n">enable</span><span class="o">-</span><span class="n">checked</span><span class="o">-</span><span class="n">mode</span> <span class="o">--</span><span class="n">verify</span><span class="o">-</span><span class="n">entry</span><span class="o">-</span><span class="n">points</span> <span class="o">--</span><span class="n">observatory</span><span class="o">-</span><span class="n">port</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'><span class="o">[+</span><span class="mi">1000</span> <span class="n">ms</span><span class="o">]</span> <span class="n">com</span><span class="o">.</span><span class="na">hahaha</span><span class="o">.</span><span class="na">app</span><span class="o">:</span> <span class="mi">49573</span>
</span><span class='line'><span class="o">[</span>        <span class="o">]</span> <span class="n">Waiting</span> <span class="k">for</span> <span class="n">observatory</span> <span class="n">port</span> <span class="n">to</span> <span class="n">be</span> <span class="n">available</span><span class="err">…</span>
</span></code></pre></td></tr></table></div></figure>


<p>模拟器上的 App 也无法打开，也看不出有什么具体的崩溃问题。不知如何是好。</p>

<!--more-->


<p>不过，还是有办法解决的，那就是使用 XCode 运行项目，查看输出</p>

<h2>使用 Xcode 打开项目</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">cd</span> <span class="n">ios</span><span class="o">/</span>
</span><span class='line'><span class="n">open</span> <span class="n">Runner</span><span class="o">.</span><span class="na">xcworkspace</span>
</span></code></pre></td></tr></table></div></figure>


<h2>点击运行</h2>

<p>像正常的 iOS 项目一样，点击 那个类似播放的按钮进行编译运行。</p>

<h2>查看日志</h2>

<p>等到运行后，大概在 XCode 右下角，就会发现一定的错误信息</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">dyld:</span> <span class="n">Symbol</span> <span class="n">not</span> <span class="nl">found:</span> <span class="n">_$s7SwiftUI4ViewP14_viewListCountxxdddx6inputsSiSgxxxAA01_ceF6xxdxxddInputsV_tFZxxxxTq</span>
</span><span class='line'>  <span class="n">Referenced</span> <span class="nl">from:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">xxxxx</span><span class="o">/</span><span class="n">Library</span><span class="o">/</span><span class="n">Developer</span><span class="o">/</span><span class="n">CoreSimulator</span><span class="o">/</span><span class="n">Devices</span><span class="o">/</span><span class="n">xxxxddxx</span><span class="o">-</span><span class="mi">54</span><span class="n">F9</span><span class="o">-</span><span class="mi">427</span><span class="n">F</span><span class="o">-</span><span class="mi">8119</span><span class="o">-</span><span class="n">xxxxx</span><span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">Containers</span><span class="o">/</span><span class="n">Bundle</span><span class="o">/</span><span class="n">Application</span><span class="o">/</span><span class="n">xxxx</span><span class="o">-</span><span class="mi">8791</span><span class="o">-</span><span class="mi">4</span><span class="n">B78xxx</span><span class="o">-</span><span class="n">A9C1</span><span class="o">-</span><span class="mi">381572</span><span class="n">AC1A2B</span><span class="o">/</span><span class="n">Runner</span><span class="o">.</span><span class="na">app</span><span class="o">/</span><span class="n">Frameworks</span><span class="o">/</span><span class="n">abcde</span><span class="o">.</span><span class="na">framework</span><span class="o">/</span><span class="n">abcde</span> <span class="o">(</span><span class="n">which</span> <span class="n">was</span> <span class="n">built</span> <span class="k">for</span> <span class="n">iOS</span> <span class="mf">14.0</span><span class="o">)</span>
</span><span class='line'>  <span class="n">Expected</span> <span class="nl">in:</span> <span class="o">/</span><span class="n">System</span><span class="o">/</span><span class="n">Library</span><span class="o">/</span><span class="n">Frameworks</span><span class="o">/</span><span class="n">SwiftUI</span><span class="o">.</span><span class="na">framework</span><span class="o">/</span><span class="n">SwiftUI</span>
</span><span class='line'> <span class="n">in</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">xxxxxx</span><span class="o">/</span><span class="n">Library</span><span class="o">/</span><span class="n">Developer</span><span class="o">/</span><span class="n">CoreSimulator</span><span class="o">/</span><span class="n">Devices</span><span class="o">/</span><span class="n">xxxxx</span><span class="o">-</span><span class="mi">54</span><span class="n">F9</span><span class="o">-</span><span class="mi">427</span><span class="n">F</span><span class="o">-</span><span class="mi">8119</span><span class="o">-</span><span class="n">xxxxxx</span><span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">Containers</span><span class="o">/</span><span class="n">Bundle</span><span class="o">/</span><span class="n">Application</span><span class="o">/</span><span class="n">xxxxx</span><span class="o">-</span><span class="mi">8791</span><span class="o">-</span><span class="mi">4</span><span class="n">B78</span><span class="o">-</span><span class="n">xxxx</span><span class="o">-</span><span class="mi">381572</span><span class="n">xAC1A2B</span><span class="o">/</span><span class="n">Runner</span><span class="o">.</span><span class="na">app</span><span class="o">/</span><span class="n">Frameworks</span><span class="o">/</span><span class="n">abcde</span><span class="o">.</span><span class="na">framework</span><span class="o">/</span><span class="n">abcde</span>
</span><span class='line'><span class="nl">dyld:</span> <span class="n">launch</span><span class="o">,</span> <span class="n">loading</span> <span class="n">dependent</span> <span class="n">libraries</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过分析上面的错误日志，我们可以确定，这个问题是因为在低于 14 的模拟器上是无法运行这个应用的。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[超快速实现 svg 转 png，jpg等格式]]></title>
    <link href="https://droidyue.com/blog/2022/04/25/convert-svg-to-jpg-or-png-in-a-fast-way/"/>
    <updated>2022-04-25T07:58:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/04/25/convert-svg-to-jpg-or-png-in-a-fast-way</id>
    <content type="html"><![CDATA[<p>svg 是 用于描述二维矢量图形的图形格式，有着很多的优势，但是有时候并不是所有的场景都支持 svg，那么这时候，我们需要将svg 图片转换成 png 等格式。</p>

<p>当然，可以进行svg 转png 的方式有很多，比如通过在线的网页工具可以，也可以使用终端的命令处理。这里我们主要设计的使用终端命令进行转换处理。</p>

<!--more-->


<h2>svgexport 工具</h2>

<ul>
<li>svgexport 是一个 NodeJs 模块，也是一个命令行工具。</li>
<li>可以实现 从 svg 转换成png，jpeg等格式。</li>
<li>github 地址 <a href="https://github.com/shakiba/svgexport">https://github.com/shakiba/svgexport</a></li>
</ul>


<h2>安装很简单</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>npm install svgexport -g
</span></code></pre></td></tr></table></div></figure>


<h2>使用方式</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>svgexport &lt;input file&gt; &lt;output file&gt; &lt;options&gt;
</span><span class='line'>svgexport &lt;datafile&gt;
</span><span class='line'>
</span><span class='line'>&lt;options&gt;        <span class="o">[</span>&lt;format&gt;<span class="o">]</span> <span class="o">[</span>&lt;quality&gt;<span class="o">]</span> <span class="o">[</span>&lt;input viewbox&gt;<span class="o">]</span> <span class="o">[</span>&lt;output size&gt;<span class="o">]</span> <span class="o">[</span>&lt;resize mode&gt;<span class="o">]</span> <span class="o">[</span>&lt;styles&gt;<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>&lt;format&gt;         png|jpeg|jpg
</span><span class='line'>                 If not specified, it will be inferred from output file extension or defaults to <span class="s2">&quot;png&quot;</span>.
</span><span class='line'>
</span><span class='line'>&lt;quality&gt;        1%-100%
</span><span class='line'>
</span><span class='line'>&lt;input viewbox&gt;  &lt;left&gt;:&lt;top&gt;:&lt;width&gt;:&lt;height&gt;|&lt;width&gt;:&lt;height&gt;
</span><span class='line'>                 If input viewbox is not specified it will be inferred from input file.
</span><span class='line'>
</span><span class='line'>&lt;output size&gt;    &lt;scale&gt;x|&lt;width&gt;:&lt;height&gt;|&lt;width&gt;:|:&lt;height&gt;
</span><span class='line'>                 If output size is specified as width:height, &lt;viewbox mode&gt; is used.
</span><span class='line'>
</span><span class='line'>&lt;viewbox mode&gt;   crop|pad
</span><span class='line'>                 Crop <span class="o">(</span>slice<span class="o">)</span> or pad <span class="o">(</span>extend<span class="o">)</span> input to match output aspect ratio, default mode is <span class="s2">&quot;crop&quot;</span>.
</span><span class='line'>
</span><span class='line'>&lt;datafile&gt;       Path of a JSON file with following content:
</span><span class='line'>                 <span class="o">[</span> <span class="o">{</span>
</span><span class='line'>                   <span class="s2">&quot;input&quot;</span> : <span class="o">[</span><span class="s2">&quot;&lt;input file&gt;&quot;</span>, <span class="s2">&quot;&lt;option&gt;&quot;</span>, <span class="s2">&quot;&lt;option&gt;&quot;</span>, ...<span class="o">]</span>,
</span><span class='line'>                   <span class="s2">&quot;output&quot;</span>: <span class="o">[</span> <span class="o">[</span><span class="s2">&quot;&lt;output file&gt;&quot;</span>, <span class="s2">&quot;&lt;option&gt;&quot;</span>, <span class="s2">&quot;&lt;option&gt;&quot;</span>, ...<span class="o">]</span> <span class="o">]</span>
</span><span class='line'>                 <span class="o">}</span>, ...<span class="o">]</span>
</span><span class='line'>                 Input file options are merged with and overridden by output file options.
</span><span class='line'>                 Instead of a JSON file, a Node module which exports same content can be provided.
</span></code></pre></td></tr></table></div></figure>


<h2>转换示例</h2>

<p>按比例扩大1.5x</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>svgexport input.svg output.png 1.5x
</span></code></pre></td></tr></table></div></figure>


<p>按比例缩放，指定宽度为32px</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>svgexport input.svg output.png 32:
</span></code></pre></td></tr></table></div></figure>


<p>设置宽高(32px:54px)进行缩放</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>svgexport input.svg output.png  32:54
</span></code></pre></td></tr></table></div></figure>


<p>设置JPEG 输出质量</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>svgexport input.svg output.jpg 80%
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>批量转换脚本</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'><span class="n">dir</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">entries</span><span class="p">(</span><span class="n">dir</span><span class="p">)</span><span class="o">.</span><span class="n">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>    <span class="n">f</span><span class="o">.</span><span class="n">end_with?</span> <span class="s1">&#39;.svg&#39;</span>
</span><span class='line'><span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>    <span class="n">newFile</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">gsub</span> <span class="s1">&#39;.svg&#39;</span><span class="p">,</span> <span class="s1">&#39;.png&#39;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">newFile</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2"> &amp;&amp; svgexport </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">newFile</span><span class="si">}</span><span class="s2"> 120:120&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简单一招，百倍提速 Flutter 开发]]></title>
    <link href="https://droidyue.com/blog/2022/04/18/how-to-be-100x-faster-about-replace-dart-flutter-deps-in-the-development/"/>
    <updated>2022-04-18T06:25:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/04/18/how-to-be-100x-faster-about-replace-dart-flutter-deps-in-the-development</id>
    <content type="html"><![CDATA[<p>Flutter 开发中，为了实现更好的解耦与更高的复用，我们都会使用模块化的思路来处理，在Dart 和 Flutter 中，我们会使用 Dart 包或者插件包等，将它们发布到比如自己的unpub 服务器上，然后在壳工程（主工程）中聚合使用。</p>

<p>比如一个 壳工程的 yaml 是这样的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">dependencies</span><span class="p-Indicator">:</span>
</span><span class='line'> <span class="l-Scalar-Plain">flutter</span><span class="p-Indicator">:</span>
</span><span class='line'>   <span class="l-Scalar-Plain">sdk</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">flutter</span>
</span><span class='line'> <span class="l-Scalar-Plain">firebase_crashlytics</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2.4.5</span>
</span><span class='line'> <span class="l-Scalar-Plain">firebase_analytics</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">9.0.5</span>
</span><span class='line'> <span class="l-Scalar-Plain">basic</span><span class="p-Indicator">:</span>
</span><span class='line'>   <span class="l-Scalar-Plain">hosted</span><span class="p-Indicator">:</span>
</span><span class='line'>     <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">basic</span>
</span><span class='line'>     <span class="l-Scalar-Plain">url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https://unpub.droidyue.com</span>
</span><span class='line'>   <span class="l-Scalar-Plain">version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1.6.2</span>
</span></code></pre></td></tr></table></div></figure>


<p>于是有这样一个场景，我们想要在basic 包里面加一个方法，并应用到 主工程中。</p>

<p>但是在执行处理的时候，我们会有这样的考虑</p>

<ul>
<li>如果修改的内容，通过 unpub 进行验证，时间成本很大。</li>
<li>但是发布到unpub，需要有一定的质量把控，修改的内容必须进行验证通过后，才能发布到unpub 服务器上</li>
</ul>


<p>所以，我们需要尝试寻找一种不通过 unpub，更快速验证修改内容的方式。</p>

<p>好在 dart 提供了 <code>dependency_overrides</code> 这个配置项来处理依赖重写问题。</p>

<!--more-->


<p>使用起来也很简单，下面就是我们实现重写 basic 的示例，基本上只需要关心 包名称(basic)与 path (../basic)即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">dependency_overrides</span><span class="p-Indicator">:</span>
</span><span class='line'> <span class="l-Scalar-Plain">basic</span><span class="p-Indicator">:</span>
</span><span class='line'>   <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="s">&quot;../basic&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>虽然提供了上面的方法可以实现依赖重写，但是还是不够快速，这是因为通常场景是这样的</p>

<ul>
<li>我们通常用 Android Studio 打开了 basic 工程，AS 开多了会卡。</li>
<li>当我们想要使用<code>dependency_overrides</code>调整 basic 时，需要用Android studio 再次打开壳工程项目。当然也可以使用文本编辑器，但是它对yaml 支持不一定有 AS 那么好，无法智能提示。</li>
</ul>


<p>那么有没有更快速的方式呢，答案是有的，这是因为 yaml 是结构化的，我们可以使用脚本来生成<code>dependency_overrides</code>对应的内容。</p>

<p>下面就是一个ruby 脚本，实现yaml 内容的添加处理。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;yaml&#39;</span>
</span><span class='line'><span class="n">file_path</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">repo_name</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="n">repo_path</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">yaml_string</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">read</span> <span class="n">file_path</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load</span> <span class="n">yaml_string</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">data</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="s1">&#39;dependency_overrides&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">hash</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">repo_name</span><span class="o">.</span><span class="n">strip</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;path&quot;</span> <span class="o">=&gt;</span> <span class="n">repo_path</span><span class="o">.</span><span class="n">strip</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">data</span><span class="o">[</span><span class="s1">&#39;dependency_overrides&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="s1">&#39;dependency_overrides&#39;</span><span class="o">].</span><span class="n">merge</span><span class="p">(</span><span class="nb">hash</span><span class="p">)</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>    <span class="n">data</span><span class="o">[</span><span class="s1">&#39;dependency_overrides&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">repo_name</span><span class="o">.</span><span class="n">strip</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;path&quot;</span> <span class="o">=&gt;</span> <span class="n">repo_path</span><span class="o">.</span><span class="n">strip</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">output</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">dump</span> <span class="n">data</span>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="n">output</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>保存上面的脚本，命名为 localDartDep.rb,</li>
<li>将其路径放入环境变量 PATH, 然后更新当前的bash</li>
<li>切换到当前项目路径，然后执行 <code>localDartDep.rb basic ../basic</code> 即可快速完成替换操作。不用开Android Studio，轻量快捷。</li>
</ul>


<p>对于上面的操作，依然可以更加包装成一个shell 脚本，实现更加便捷的处理</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>localDartDep.rb <span class="s2">&quot;$1/pubspec.yaml&quot;</span> <span class="s2">&quot;basic&quot;</span> <span class="s2">&quot;../basic&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后切换到对应的工程下，执行<code>basicLocalDep.sh ./</code> 即可。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studio 无 创建 Flutter 工程选项（New Flutter Project）解决]]></title>
    <link href="https://droidyue.com/blog/2022/04/10/unable-to-create-flutter-project-in-android-studio/"/>
    <updated>2022-04-10T12:07:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/04/10/unable-to-create-flutter-project-in-android-studio</id>
    <content type="html"><![CDATA[<p>最近想要使用 Android Studio 创建一个新的  Flutter 工程，发现 Android Studio 并没有相应的创建选项。</p>

<p>于是开始排查问题，想起来最近优化 Android Studio 插件（关闭了一些感觉无用的插件），后来尝试恢复了一些，发现重启之后可以了。</p>

<!--more-->


<p>所以这个问题的原因在于关闭了一个 Android Apk Support 的插件。将它开启后，重启 Android Studio 就可以了。</p>

<p>开启的步骤如下图所示</p>

<p><img src="https://asset.droidyue.com/image/2022/h1/android_studio_android_support.png" alt="https://asset.droidyue.com/image/2022/h1/android_studio_android_support.png" /></p>

<p>以上。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 添加 Overlay View （覆盖视图）]]></title>
    <link href="https://droidyue.com/blog/2022/04/07/how-to-add-overlay-view-in-android/"/>
    <updated>2022-04-07T07:55:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/04/07/how-to-add-overlay-view-in-android</id>
    <content type="html"><![CDATA[<p>在 Android 中，有一种黑科技，就是能够过在 Window 上添加一个视图，然后这个视图，会覆盖在所有的 应用视图的上面（包括桌面）。比如下面的视图。</p>

<p><img src="https://asset.droidyue.com/image/2022/h1/android_overlay_view_sample.png" alt="https://asset.droidyue.com/image/2022/h1/android_overlay_view_sample.png" /></p>

<p>想要利用上面的黑科技，很简单。大概分为如下的步骤。</p>

<!--more-->


<h2>检测权限</h2>

<ul>
<li><code>Settings.canDrawOverlays(aContext)</code> 可以检测 当前的 App 是否可以添加悬浮窗视图。</li>
<li>如果返回为true，则表明已经获取了添加悬浮视图的权限。</li>
<li>如果返回为false，则需要按照下方的内容获取权限。</li>
</ul>


<h2>获取权限</h2>

<p>SYSTEM_ALERT_WINDOW，设置悬浮窗权限，是 Android 中一个比较特殊的权限。</p>

<p>关于获取权限，可以使用下面的代码处理。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">private</span> <span class="n">static</span> <span class="n">final</span> <span class="kt">int</span> <span class="n">REQUEST_CODE</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'><span class="k">private</span>  <span class="k">void</span> <span class="nf">requestAlertWindowPermission</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">Intent</span> <span class="n">intent</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="p">(</span><span class="n">Settings</span><span class="p">.</span><span class="n">ACTION_MANAGE_OVERLAY_PERMISSION</span><span class="p">);</span>
</span><span class='line'>    <span class="n">intent</span><span class="p">.</span><span class="n">setData</span><span class="p">(</span><span class="n">Uri</span><span class="p">.</span><span class="n">parse</span><span class="p">(</span><span class="s">&quot;package:&quot;</span> <span class="p">+</span> <span class="n">getPackageName</span><span class="p">()));</span>
</span><span class='line'>    <span class="n">startActivityForResult</span><span class="p">(</span><span class="n">intent</span><span class="p">,</span> <span class="n">REQUEST_CODE</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">@Override</span>
</span><span class='line'><span class="k">protected</span> <span class="k">void</span> <span class="nf">onActivityResult</span><span class="p">(</span><span class="kt">int</span> <span class="n">requestCode</span><span class="p">,</span> <span class="kt">int</span> <span class="n">resultCode</span><span class="p">,</span> <span class="n">Intent</span> <span class="n">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">onActivityResult</span><span class="p">(</span><span class="n">requestCode</span><span class="p">,</span> <span class="n">resultCode</span><span class="p">,</span> <span class="n">data</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">requestCode</span> <span class="p">==</span> <span class="n">REQUEST_CODE</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">Settings</span><span class="p">.</span><span class="n">canDrawOverlays</span><span class="p">(</span><span class="k">this</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="n">LOGTAG</span><span class="p">,</span> <span class="s">&quot;onActivityResult granted&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>添加悬浮窗视图</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">fun</span> <span class="nf">addOverlay</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">val</span> <span class="n">windowManager</span> <span class="o">=</span> <span class="n">getSystemService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">WINDOW_SERVICE</span><span class="o">)</span> <span class="n">as</span><span class="o">?</span> <span class="n">WindowManager</span>
</span><span class='line'>    <span class="n">val</span> <span class="n">params</span> <span class="o">=</span> <span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">()</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">Build</span><span class="o">.</span><span class="na">VERSION</span><span class="o">.</span><span class="na">SDK_INT</span> <span class="o">&gt;=</span> <span class="n">Build</span><span class="o">.</span><span class="na">VERSION_CODES</span><span class="o">.</span><span class="na">O</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">//8.0新特性</span>
</span><span class='line'>        <span class="n">params</span><span class="o">.</span><span class="na">type</span> <span class="o">=</span> <span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">TYPE_APPLICATION_OVERLAY</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">params</span><span class="o">.</span><span class="na">type</span> <span class="o">=</span> <span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">TYPE_SYSTEM_ALERT</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="na">format</span> <span class="o">=</span> <span class="n">PixelFormat</span><span class="o">.</span><span class="na">RGBA_8888</span><span class="o">;</span>
</span><span class='line'>    <span class="c1">//设置flags</span>
</span><span class='line'>    <span class="c1">//设置flags</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="na">flags</span> <span class="o">=</span>
</span><span class='line'>        <span class="o">(</span><span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_NOT_TOUCH_MODAL</span> <span class="c1">//设置flags.不可聚焦及不可使用按钮对悬浮窗进行操控.</span>
</span><span class='line'>                <span class="n">or</span> <span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_NOT_FOCUSABLE</span>
</span><span class='line'>                <span class="n">or</span> <span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_FULLSCREEN</span> <span class="c1">//窗口被虚拟按键遮挡问题</span>
</span><span class='line'>                <span class="n">or</span> <span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_TRANSLUCENT_NAVIGATION</span><span class="o">)</span>
</span><span class='line'>    <span class="c1">//设置flags.不可聚焦及不可使用按钮对悬浮窗进行操控.</span>
</span><span class='line'>    <span class="c1">//设置窗口坐标参考系</span>
</span><span class='line'>    <span class="c1">//设置flags.不可聚焦及不可使用按钮对悬浮窗进行操控.</span>
</span><span class='line'>    <span class="c1">//设置窗口坐标参考系</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="na">gravity</span> <span class="o">=</span> <span class="n">Gravity</span><span class="o">.</span><span class="na">LEFT</span> <span class="n">or</span> <span class="n">Gravity</span><span class="o">.</span><span class="na">TOP</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="na">width</span> <span class="o">=</span> <span class="mi">200</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="na">height</span> <span class="o">=</span> <span class="mi">200</span>
</span><span class='line'>    <span class="n">val</span> <span class="n">container</span> <span class="o">=</span> <span class="n">TextView</span><span class="o">(</span><span class="k">this</span><span class="o">)</span>
</span><span class='line'>    <span class="n">overlayContainer</span> <span class="o">=</span> <span class="n">container</span>
</span><span class='line'>    <span class="n">container</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">parseColor</span><span class="o">(</span><span class="s">&quot;#cce8cf&quot;</span><span class="o">))</span>
</span><span class='line'>    <span class="n">windowManager</span><span class="o">?.</span><span class="na">addView</span><span class="o">(</span><span class="n">container</span><span class="o">,</span> <span class="n">params</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>完整的代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">class</span> <span class="nc">MainActivity</span> <span class="p">:</span> <span class="n">AppCompatActivity</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">var</span> <span class="n">overlayContainer</span><span class="p">:</span> <span class="n">TextView</span><span class="p">?</span> <span class="p">=</span> <span class="k">null</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">@RequiresApi</span><span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">VERSION_CODES</span><span class="p">.</span><span class="n">M</span><span class="p">)</span>
</span><span class='line'>  <span class="k">override</span> <span class="k">fun</span> <span class="nf">onCreate</span><span class="p">(</span><span class="n">savedInstanceState</span><span class="p">:</span> <span class="n">Bundle</span><span class="p">?)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">super</span><span class="p">.</span><span class="n">onCreate</span><span class="p">(</span><span class="n">savedInstanceState</span><span class="p">)</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="p">(</span><span class="n">R</span><span class="p">.</span><span class="n">layout</span><span class="p">.</span><span class="n">activity_main</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">Settings</span><span class="p">.</span><span class="n">canDrawOverlays</span><span class="p">(</span><span class="k">this</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">addOverlay</span><span class="p">()</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">val</span> <span class="n">intent</span> <span class="p">=</span> <span class="n">Intent</span><span class="p">(</span><span class="n">Settings</span><span class="p">.</span><span class="n">ACTION_MANAGE_OVERLAY_PERMISSION</span><span class="p">)</span>
</span><span class='line'>          <span class="n">intent</span><span class="p">.</span><span class="n">data</span> <span class="p">=</span> <span class="n">Uri</span><span class="p">.</span><span class="n">parse</span><span class="p">(</span><span class="s">&quot;package:$packageName&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="n">startActivity</span><span class="p">(</span><span class="n">intent</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">findViewById</span><span class="p">&lt;</span><span class="n">View</span><span class="p">&gt;(</span><span class="n">R</span><span class="p">.</span><span class="n">id</span><span class="p">.</span><span class="n">textview_hello</span><span class="p">).</span><span class="n">setOnClickListener</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">overlayContainer</span><span class="p">?.</span><span class="n">text</span> <span class="p">=</span> <span class="s">&quot;${System.currentTimeMillis()}&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">fun</span> <span class="nf">addOverlay</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">val</span> <span class="n">windowManager</span> <span class="p">=</span> <span class="n">getSystemService</span><span class="p">(</span><span class="n">Context</span><span class="p">.</span><span class="n">WINDOW_SERVICE</span><span class="p">)</span> <span class="k">as</span><span class="p">?</span> <span class="n">WindowManager</span>
</span><span class='line'>      <span class="k">val</span> <span class="n">params</span> <span class="p">=</span> <span class="n">WindowManager</span><span class="p">.</span><span class="n">LayoutParams</span><span class="p">()</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">VERSION</span><span class="p">.</span><span class="n">SDK_INT</span> <span class="p">&gt;=</span> <span class="n">Build</span><span class="p">.</span><span class="n">VERSION_CODES</span><span class="p">.</span><span class="n">O</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">//8.0新特性</span>
</span><span class='line'>          <span class="n">params</span><span class="p">.</span><span class="n">type</span> <span class="p">=</span> <span class="n">WindowManager</span><span class="p">.</span><span class="n">LayoutParams</span><span class="p">.</span><span class="n">TYPE_APPLICATION_OVERLAY</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">params</span><span class="p">.</span><span class="n">type</span> <span class="p">=</span> <span class="n">WindowManager</span><span class="p">.</span><span class="n">LayoutParams</span><span class="p">.</span><span class="n">TYPE_SYSTEM_ALERT</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">params</span><span class="p">.</span><span class="n">format</span> <span class="p">=</span> <span class="n">PixelFormat</span><span class="p">.</span><span class="n">RGBA_8888</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//设置flags</span>
</span><span class='line'>      <span class="c1">//设置flags</span>
</span><span class='line'>      <span class="n">params</span><span class="p">.</span><span class="n">flags</span> <span class="p">=</span>
</span><span class='line'>          <span class="p">(</span><span class="n">WindowManager</span><span class="p">.</span><span class="n">LayoutParams</span><span class="p">.</span><span class="n">FLAG_NOT_TOUCH_MODAL</span> <span class="c1">//设置flags.不可聚焦及不可使用按钮对悬浮窗进行操控.</span>
</span><span class='line'>                <span class="n">or</span> <span class="n">WindowManager</span><span class="p">.</span><span class="n">LayoutParams</span><span class="p">.</span><span class="n">FLAG_NOT_FOCUSABLE</span>
</span><span class='line'>                <span class="n">or</span> <span class="n">WindowManager</span><span class="p">.</span><span class="n">LayoutParams</span><span class="p">.</span><span class="n">FLAG_FULLSCREEN</span> <span class="c1">//窗口被虚拟按键遮挡问题</span>
</span><span class='line'>                <span class="n">or</span> <span class="n">WindowManager</span><span class="p">.</span><span class="n">LayoutParams</span><span class="p">.</span><span class="n">FLAG_TRANSLUCENT_NAVIGATION</span><span class="p">)</span>
</span><span class='line'>      <span class="c1">//设置flags.不可聚焦及不可使用按钮对悬浮窗进行操控.</span>
</span><span class='line'>      <span class="c1">//设置窗口坐标参考系</span>
</span><span class='line'>      <span class="c1">//设置flags.不可聚焦及不可使用按钮对悬浮窗进行操控.</span>
</span><span class='line'>      <span class="c1">//设置窗口坐标参考系</span>
</span><span class='line'>      <span class="n">params</span><span class="p">.</span><span class="n">gravity</span> <span class="p">=</span> <span class="n">Gravity</span><span class="p">.</span><span class="n">LEFT</span> <span class="n">or</span> <span class="n">Gravity</span><span class="p">.</span><span class="n">TOP</span>
</span><span class='line'>      <span class="n">params</span><span class="p">.</span><span class="n">x</span> <span class="p">=</span> <span class="m">0</span>
</span><span class='line'>      <span class="n">params</span><span class="p">.</span><span class="n">y</span> <span class="p">=</span> <span class="m">0</span>
</span><span class='line'>      <span class="n">params</span><span class="p">.</span><span class="n">width</span> <span class="p">=</span> <span class="m">200</span>
</span><span class='line'>      <span class="n">params</span><span class="p">.</span><span class="n">height</span> <span class="p">=</span> <span class="m">200</span>
</span><span class='line'>      <span class="k">val</span> <span class="n">container</span> <span class="p">=</span> <span class="n">TextView</span><span class="p">(</span><span class="k">this</span><span class="p">)</span>
</span><span class='line'>      <span class="n">overlayContainer</span> <span class="p">=</span> <span class="n">container</span>
</span><span class='line'>      <span class="n">container</span><span class="p">.</span><span class="n">setBackgroundColor</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">parseColor</span><span class="p">(</span><span class="s">&quot;#cce8cf&quot;</span><span class="p">))</span>
</span><span class='line'>      <span class="n">windowManager</span><span class="p">?.</span><span class="n">addView</span><span class="p">(</span><span class="n">container</span><span class="p">,</span> <span class="n">params</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iSlide 插件 5 周年回馈，买两年送一年！每月不到 5 块钱]]></title>
    <link href="https://droidyue.com/blog/2022/03/29/buy-islide-at-a-very-acceptable-price/"/>
    <updated>2022-03-29T07:00:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/03/29/buy-islide-at-a-very-acceptable-price</id>
    <content type="html"><![CDATA[<p>是不是每次在制作 PPT 时，都丝毫没有头绪？各种模板东拼西凑没有章法？你和 PPT 高手之间，其实就只差一个 iSlide。</p>

<p><strong>iSlide</strong> 是一款口碑优秀的 PPT 插件，海量在线资源库，超 30 万专业模板、素材一键插入 PPT，更有一键排版等 38 种辅助功能，真正实现「让 PPT 设计简单起来」。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE1.png" /></p>

<p>如今，iSlide 插件发布已有 5 年时间，获得秋叶 PPT 等众多业内大咖推荐！最近它开启了 5 周年活动，前往数码荔枝买两年送一年，每月不到 <strong>5 元</strong>钱，新用户首单还能<strong>立减 5 元</strong>，非常值的价格别错过！</p>

<p>赶快点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/41?cid=wncr9wz5">专属链接</a>收下这款人见人爱的 PPT 神器吧！活动时间：即日起至 5 月 8 日，订阅时长可叠加，趁现在便宜快买买买~</p>

<!--more-->


<h2>8 大资源库，轻松找素材</h2>

<p>iSlide 内置 300,000+ PPT 模板，来自专业 PPT 模板设计团队，有原创正版保障，快速检索一键插入 PPT 文档。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE2.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE2.png" /></p>

<p>8 大资源库为你所用，丰富的各类图标 / 图片 / 插图，可在原位置直接编辑替换，做 PPT 告别四处找素材，一个插件整合你要用的所有资源，轻松高效制作精美 PPT！</p>

<h2>智能图表实现数据可视化</h2>

<p>iSlide 智能图表改变传统图表的单一样式，拥有当下流行视觉化元素和风格，样式新颖更具设计感。</p>

<p>无需耗费大量时间精力，各种参数化调节，iSlide 让图表制作更简单直观，通俗易懂。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE3.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE3.png" /></p>

<p>趁 iSlide 五周年活动<strong>买两年送一年，买一年送半年，时长可无限叠加</strong>，长期需要的用户可多续费几年，每月不到 5 块钱，赶快<a href="https://store.lizhi.io/site/products/id/41?cid=wncr9wz5">点击购买</a>吧！</p>

<h2>智能对齐排版，专治强迫症</h2>

<p>iSlide 为大家提供了丰富的设计工具，涵盖对齐、大小调整、参考线布局、内容选择、矢量、剪贴板、吸附、旋转多种常用操作。告别徒手拖动排版，一键完成各个区域对齐超方便，让幻灯片排版更规范简单。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE4.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE4.png" /></p>

<p>无论是创建新文档，还是修改旧文档，都能帮你从繁琐的传统编辑中解脱，提升设计效率，呈现专业。</p>

<h2>更细致的色彩优化</h2>

<p>iSlide 将全球知名公司的色彩搭配方案共享上传，可以在「色彩库」中浏览并一键应用于当前的 PPT 文档，即便不懂设计，也能呈现专业。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE5.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE5.png" /></p>

<h2>更多辅助功能</h2>

<p>自己做的 PPT，其实是东一页西一页复制来的？iSlide「一键优化」功能非常适合你，只需轻点一下就能统一 PPT 字体 / 段落。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE6.png" alt="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE6.png" /></p>

<p>还有图形矩阵 / 环形布局、图片统一裁剪、补间动画、PPT 瘦身压缩等多项功能，让你的 PPT 设计更简单。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE7.gif" alt="https://asset.droidyue.com/image/lizhi_io/islide/%E5%9B%BE7.gif" /></p>

<h2>5 周年大回馈</h2>

<p>iSlide 插件 5 周年活动带来巨额优惠，买两年直接送一年，这样的优惠幅度真不多见，趁满赠多买几年，订阅无限叠加！活动持续至 5 月 8 日，周年福利错过不再有！</p>

<p>现在点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/41?cid=wncr9wz5">专属链接</a>购买 iSlide，每月不到 <strong>5 元</strong>钱，助你变身幻灯片高手！前往数码荔枝购买的新用户，首单<strong>立减 5 元</strong>相当于再省掉一个月的钱！</p>

<hr />

<p>只有一个 iSlide 插件，还缺少 Office 中的 PowerPoint 软件？前往数码荔枝找拼车，官方牵头安全享受 Office 365 订阅，Excel、PowerPoint、Word 三件套安排上，还有 1TB OneDrive 放心用，<a href="https://store.lizhi.io/site/products/id/335?cid=wncr9wz5">点击立即上车</a>！</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fences 4 新版来袭，栅栏式桌面整理快速搞定，从此不再乱糟糟！]]></title>
    <link href="https://droidyue.com/blog/2022/03/27/fences-4-is-comming-as-a-cool-app-in-windows/"/>
    <updated>2022-03-27T22:19:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/03/27/fences-4-is-comming-as-a-cool-app-in-windows</id>
    <content type="html"><![CDATA[<p>你有整理电脑桌面的习惯吗？还是各种文件、文件夹都往桌面塞，时间一久占满半个屏幕，既不美观也不好找文件。</p>

<p>想要保持桌面整洁，当然要试试经典的 <strong>Fences</strong>，自动归类整理 Windows 桌面文件。近期这款工具迎来了 4.0 大更新，这次也为大家带来了优惠价格！通过[合作伙伴]专属<a href="https://store.lizhi.io/site/products/id/39?cid=wncr9wz5">优惠链接</a>，<strong>39 元</strong>起即可实现整理自由，解放双手。新注册用户再享立减 5 元优惠，仅需<strong>34 元</strong>起！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE1.png" /></p>

<hr />

<!--more-->


<h2>更美观的 Fences 4</h2>

<p>Fences 4 对于 Win 11 新系统进行了专属优化，改进了软件界面、圆角、透明效果，这让软件和新系统更和谐，看起来更加美观！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE2.png" alt="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE2.png" /></p>

<p>首次启动就会自动为你创建几个基本分类，省去了一个个整理文档的时间。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE3.gif" alt="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE3.gif" /></p>

<p>也可以手动设置分类，桌面上拖动鼠标，直接创建新的「桌面分区」，把想要分类的内容拖进去就好。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE4.png" alt="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE4.png" /></p>

<p>全新 Fences 4 单设备版只要 <strong>39 元</strong>，5 设备版折扣价 <strong>169 元</strong>。软件只支持 Win 10 与 Win 11 系统，购买时一定要注意了。点击[合作伙伴]专属<a href="https://store.lizhi.io/site/products/id/39?cid=wncr9wz5">优惠链接</a>立即前往~</p>

<h2>Fences Peek 新功能</h2>

<p>除了针对 Win 11 的优化，Fences 4 还新增了一个实用功能，让使用文件的效率大大提升。</p>

<p>在全屏操作时，想把桌面的文件拖拽到软件很麻烦，总要把软件缩小移开才好处理。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE5.gif" alt="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE5.gif" /></p>

<p>Fences Peek 新功能完美解决，通过「Win + 空格键」让桌面的分区，在各种软件中置顶显示，然后再进行拖拽就很方便了！</p>

<p><strong>Fences 4</strong> 在性能方面同样有所优化，电脑启动时让其在桌面之前加载，带来更好的使用体验。Fences 4 优惠进行中，通过[合作伙伴]专属链接<a href="https://store.lizhi.io/site/products/id/39?cid=wncr9wz5">购买</a>仅 <strong>39 元</strong>起~</p>

<h2>更多功能</h2>

<p>除了桌面整理，还可以将任意路径文件夹展开到桌面。复制、粘贴、新建文件都能直接操作，展开后的文件夹还能从桌面快速拖拽移动文件，无需层层打开文件管理器操作了。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE6.gif" alt="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE6.gif" /></p>

<p>双击桌面还能隐藏桌面所有项目，截图录屏的时候没有杂物，整洁又能保护隐私。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE7.gif" alt="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE7.gif" /></p>

<p><strong>Fences 4</strong> 还支持快捷键设置，显示桌面、置顶分区都能通过快捷键启用，比旧版本的 Fences 更加强大！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE8.png" alt="https://asset.droidyue.com/image/lizhi_io/fences/%E5%9B%BE8.png" /></p>

<p>除此之外，与同类桌面整理工具相比，Fences 在细节表现上更具优势，自动保存桌面分区、智能对齐、桌面边缘停靠隐藏等都值得称赞。</p>

<hr />

<p>如果懒得动手整理规划桌面，<strong>Fences</strong> 一定不要错过，实现自动栅栏化整理，从此告别乱糟糟。</p>

<p>新版本发布，前往数码荔枝购买有优惠。通过[合作伙伴]专属<a href="https://store.lizhi.io/site/products/id/39?cid=wncr9wz5">优惠链接</a>前往，只需 <strong>39 元</strong>起！新注册用户再享立减 5 元优惠，仅需<strong>34 元</strong>起！相比官网购买，已经便宜很多啦！使用 Win 7 / 8 / 8.1 系统的用户如果需要，还有旧版本可选哦。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 中 利用 AccessibilityService 辅助服务 模拟点击事件]]></title>
    <link href="https://droidyue.com/blog/2022/03/27/how-to-click-by-x-y-point-using-accessibilityservice-in-android/"/>
    <updated>2022-03-27T20:52:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/03/27/how-to-click-by-x-y-point-using-accessibilityservice-in-android</id>
    <content type="html"><![CDATA[<p>在 Android 中想要执行一些模拟点击操作，在无法修改页面源码的情况下，通常只能使用 adb 和借助辅助功能两种方式。</p>

<h2>Adb 方式</h2>

<p>借助 adb shell 的命令，我们可以使用下面的方式模拟一个执行点击坐标的操作。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb shell input tap x y
</span></code></pre></td></tr></table></div></figure>


<p>但是 adb 操作有一些门槛</p>

<ul>
<li>需要一台电脑执行adb 命令（终端执行）</li>
<li>需要一个数据线</li>
<li>目标设备（手机）需要开启开发者模式</li>
</ul>


<p>所有 adb 操作的问题就是无法借助一台设备独立完成。所以可以借助辅助服务来实现单一设备独立完成。</p>

<!--more-->


<h2>辅助功能</h2>

<p>Android中的辅助功能是一个极具黑科技的技术。借助下面的代码，我们可以实现 对于 基于坐标的点击。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">@RequiresApi</span><span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">VERSION_CODES</span><span class="p">.</span><span class="n">N</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="n">AccessibilityService</span><span class="p">.</span><span class="n">dispatchClick</span><span class="p">(</span><span class="n">rect</span><span class="p">:</span> <span class="n">Rect</span><span class="p">?)</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">rect</span> <span class="p">?:</span> <span class="k">return</span>
</span><span class='line'>   <span class="k">val</span> <span class="n">x</span> <span class="p">=</span> <span class="n">rect</span><span class="p">.</span><span class="n">middleVertically</span><span class="p">()</span>
</span><span class='line'>   <span class="k">val</span> <span class="n">y</span> <span class="p">=</span> <span class="n">rect</span><span class="p">.</span><span class="n">middleHorizontally</span><span class="p">()</span>
</span><span class='line'>   <span class="n">dispatchClick</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">@RequiresApi</span><span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">VERSION_CODES</span><span class="p">.</span><span class="n">N</span><span class="p">)</span>
</span><span class='line'><span class="k">fun</span> <span class="n">AccessibilityService</span><span class="p">.</span><span class="n">dispatchClick</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="n">Float</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">Float</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">val</span> <span class="n">path</span> <span class="p">=</span> <span class="n">Path</span><span class="p">()</span>
</span><span class='line'>   <span class="n">path</span><span class="p">.</span><span class="n">moveTo</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>   <span class="n">smartLogD</span> <span class="p">{</span>
</span><span class='line'>       <span class="s">&quot;dispatchClick x=$x y=$y&quot;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">path</span><span class="p">.</span><span class="n">lineTo</span><span class="p">(</span><span class="n">x</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">val</span> <span class="n">builder</span> <span class="p">=</span> <span class="n">GestureDescription</span><span class="p">.</span><span class="n">Builder</span><span class="p">()</span>
</span><span class='line'>   <span class="n">builder</span><span class="p">.</span><span class="n">addStroke</span><span class="p">(</span><span class="n">GestureDescription</span><span class="p">.</span><span class="n">StrokeDescription</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span>
</span><span class='line'>       <span class="n">ViewConfiguration</span><span class="p">.</span><span class="n">getTapTimeout</span><span class="p">().</span><span class="n">toLong</span><span class="p">()</span>
</span><span class='line'>   <span class="p">))</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">this</span><span class="p">.</span><span class="n">dispatchGesture</span><span class="p">(</span><span class="n">builder</span><span class="p">.</span><span class="n">build</span><span class="p">(),</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的代码如果无法找到对应的引用，可以引用这个库  <a href="https://github.com/androidyue/coobox">https://github.com/androidyue/coobox</a></p>

<h2>开始使用</h2>

<p>1.在项目根目录下的 build.gradle 增加仓库配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>allprojects <span class="o">{</span>
</span><span class='line'>    repositories <span class="o">{</span>
</span><span class='line'>        jcenter<span class="o">()</span>
</span><span class='line'>        maven <span class="o">{</span> url <span class="s2">&quot;https://jitpack.io&quot;</span> <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.在模块下的 build.gradle 增加依赖引用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>dependencies <span class="o">{</span>
</span><span class='line'>    implementation <span class="s1">&#39;com.github.androidyue:coobox:0.8.5&#39;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>注: 请手动替换 x.y.z 为最新的版本信息</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[忘了 Mac 访达吧，QSpace 文件管理器一个更比多个强]]></title>
    <link href="https://droidyue.com/blog/2022/03/24/quit-finder-and-use-qspace-in-mac-os/"/>
    <updated>2022-03-24T08:21:00+08:00</updated>
    <id>https://droidyue.com/blog/2022/03/24/quit-finder-and-use-qspace-in-mac-os</id>
    <content type="html"><![CDATA[<p>注：QSpace 是我的一位超级优秀的前同事开发的，个人在软件发布之初就曾尝试，很不错，希望大家可以支持使用一下哈。</p>

<p>使用 Mac 的小伙伴，有多少人还在用原生的访达管理文件？虽然已经满足基本需求，但仍有一些槽点：不支持多视图查看、地址栏编辑不够直观、连接服务器仅只读等。</p>

<p>强烈安利一款单窗口多视图文件管理器：<strong>QSpace</strong>，拥有连接云服务器、右键增强、文件暂存等诸多实用自定义功能。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE1.png" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE1.png" /></p>

<p>同类产品 Path Finder，订阅一年就要支付约 190 元，而今天的 <strong>QSpace</strong> 买断只要 <strong>47 元</strong>起，爆款产品数码荔枝独家代理。点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/534?cid=wncr9wz5">专属优惠链接</a>，抢购就趁现在！新用户还能领券再省 5 元！</p>

<!--more-->


<h2>展开多文件夹操作</h2>

<p>一个窗口内，可划分出多个独立区域，同时展开多个文件夹。10+ 种布局方案任你选，不同路径下高效拖拽移动文件。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE2.gif" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE2.gif" /></p>

<p>每次都要打开一遍各个路径太麻烦？QSpace 支持将当前状态保存为工作区，下次快速恢复到工作状态。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE3.gif" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE3.gif" /></p>

<h2>更直观的地址栏</h2>

<p>在使用访达时，自带的路径栏是不是不够方便，复制编辑路径比较麻烦。</p>

<p>来试试 QSpace，你可以像浏览器的地址栏一样，自由复制、修改路径。并且支持自动补全，真心推荐！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE4.gif" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE4.gif" /></p>

<p>鼠标移至路径节点旁的小三角，还支持快速选择其他位置，交互更方便。</p>

<h2>一键启动程序</h2>

<p>QSpace 也支持快速使用终端 &amp; 编辑器打开当前路径，与功能缺失的 MAS 商店版比，专业版支持 Hyper、Tabby 等多种终端应用。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE5.gif" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE5.gif" /></p>

<p>使用密钥登录的 SFTP 服务器，专业版还可以将云端路径快速在终端打开，非常方便。</p>

<p>QSpace 数码荔枝独家优惠，仅需 47 元起即可买断，比商店版多花两块钱，解锁更多高级完整的功能，点击[合作伙伴]<a href="https://store.lizhi.io/site/products/id/534?cid=wncr9wz5">专属优惠链接</a>，买买买！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE6.png" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE6.png" /></p>

<h2>右键增强</h2>

<p>除了使用第三方工具定制右键，在 QSpace 同样可以实现右键功能增强。剪切、新建、彻底删除、计算哈希值等右键快速搞定……</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE7.png" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE7.png" /></p>

<p>QSpace 可高度自定义，打造你的专属文件管理器。拖拽即可快速添加或移除功能，简单又直观。</p>

<p>数码荔枝在售的<a href="https://store.lizhi.io/site/products/id/534?cid=wncr9wz5">专业版</a>，还支持开启 QSpace 桌面，不仅仅是在 QSpace 软件内，右键等诸多功能在桌面上也能用。</p>

<h2>扩展增强</h2>

<p>QSpace 还为用户提供了 4 款额外付费的扩展：连接服务器、批量重命名、文件暂存架和归档增强。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE8.png" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE8.png" /></p>

<p>原价 18 元解锁 4 款扩展，前往数码荔枝选购套装，相当于 15 元就能解锁。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE9.png" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE9.png" /></p>

<p>其中，<strong>归档增强</strong>扩展为限时免费，强烈推荐所有用户解锁，错过不再有！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE10.png" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE10.png" /></p>

<p><strong>暂存架</strong>可以将本地文件或网络图片，拖拽暂存到一起，统一进行复制移动、分享、重命名等。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE11.gif" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE11.gif" /></p>

<p><strong>高级批量重命名</strong>，可以支持设定日期、宽度、高度等变量，支持正则表达式。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE12.png" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE12.png" /></p>

<p><strong>连接服务器</strong>扩展，支持 FTP、SFTP、SMB 等多种协议，可连接阿里、腾讯、七牛等对象存储，本地和云端轻松拖拽传输，无需再找传输软件了！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE13.png" alt="https://asset.droidyue.com/image/lizhi_io/qspace/%E5%9B%BE13.png" /></p>

<hr />

<p>QSpace 爆款新品超高性价比，前往数码荔枝仅需 <strong>47 元</strong>即可买断专业版，加 <strong>15 元</strong>解锁 4 款高级扩展功能。相比同类产品，性价比超高！戳[合作伙伴]<a href="https://store.lizhi.io/site/products/id/534?cid=wncr9wz5">专属优惠链接</a>，买买买！</p>

<p>注：QSpace 是我的一位超级优秀的前同事开发的，个人在软件发布之初就曾尝试，很不错，希望大家可以支持使用一下哈。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
</feed>

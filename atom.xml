<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[技术小黑屋]]></title>
  <link href="https://droidyue.com/atom.xml" rel="self"/>
  <link href="https://droidyue.com/"/>
  <updated>2021-05-31T12:18:20+08:00</updated>
  <id>https://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Coobox之 LastWinExecutor，后来居上执行器]]></title>
    <link href="https://droidyue.com/blog/2021/05/31/coobox-android-last-win-executor/"/>
    <updated>2021-05-31T12:07:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/05/31/coobox-android-last-win-executor</id>
    <content type="html"><![CDATA[<p>在编程的业务场景中，有时候会有这样的情况。有一个文本输入框用来输入检索数据</p>

<ul>
<li>为了避免过多的网络检索，实现频率控制</li>
<li>当且仅当距离上次输入字符500 毫秒后，才真正执行检索请求</li>
</ul>


<!--more-->


<h2>第一步 创建 LastWinExecutor</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">val</span> <span class="nl">lastWinExecutor:</span> <span class="n">LastWinExecutor</span> <span class="o">=</span> <span class="n">LastWinExecutor</span><span class="o">(</span><span class="mi">500</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中</p>

<ul>
<li>LastWinExecutor 接受一个超时参数，单位为毫秒，例子中为500毫秒</li>
</ul>


<h2>第二步 提交请求</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">lastWinExecutor</span><span class="o">.</span><span class="na">submit</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">//需要执行的代码</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中</p>

<ul>
<li>每次输入框内容改变都会调用<code>lastWinExecutor.submit</code></li>
<li>但是仅仅当距离上个输入框字符输入超过500 毫秒 才执行相应的代码</li>
</ul>


<h2>完整代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">LastWinExecutorFragment</span> <span class="o">:</span> <span class="n">TestableFragment</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">val</span> <span class="nl">lastWinExecutor:</span> <span class="n">LastWinExecutor</span> <span class="o">=</span> <span class="n">LastWinExecutor</span><span class="o">(</span><span class="mi">500</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fun</span> <span class="nf">observeTextView</span><span class="o">(</span><span class="nl">textView:</span> <span class="n">TextView</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">textView</span><span class="o">.</span><span class="na">doAfterTextChanged</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">lastWinExecutor</span><span class="o">.</span><span class="na">submit</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">queryResult</span><span class="o">(</span><span class="n">it</span><span class="o">?.</span><span class="na">toString</span><span class="o">())</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>实现原理</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 任务执行器，在规定的时间内执行提交，最后一个会被执行，之前的会被取消</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">class</span> <span class="nf">LastWinExecutor</span><span class="o">(</span><span class="kd">private</span> <span class="n">val</span> <span class="nl">timeSpanInMills:</span> <span class="n">Long</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">val</span> <span class="n">handler</span> <span class="o">=</span> <span class="n">Handler</span><span class="o">(</span><span class="n">Looper</span><span class="o">.</span><span class="na">getMainLooper</span><span class="o">())</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 提交一个任务，如果在提交后 @param timeSpanInMills 没有新任务, 则执行该任务，否则被取消</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">fun</span> <span class="nf">submit</span><span class="o">(</span><span class="nl">task:</span> <span class="n">KRunnable</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">clearAllTasks</span><span class="o">()</span>
</span><span class='line'>        <span class="n">handler</span><span class="o">.</span><span class="na">postDelayed</span><span class="o">(</span><span class="n">task</span><span class="o">,</span> <span class="n">timeSpanInMills</span><span class="o">)</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 取消所有任务</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">fun</span> <span class="nf">clearAllTasks</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">handler</span><span class="o">.</span><span class="na">removeCallbacksAndMessages</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>实现原理为利用了 Handler postDelay方法实现。</p>

<h2>如何快速使用</h2>

<ul>
<li>LastWinExecutor 已经包含在 CooBox 中，简单几步即可集成。<a href="https://github.com/secoo-android/coobox">开始集成</a> 欢迎点星星</li>
<li>LastWinExecutor 源码 <a href="https://github.com/secoo-android/coobox">https://github.com/secoo-android/coobox</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[国产远程控制软件 ToDesk 来了，特惠价 108 元起]]></title>
    <link href="https://droidyue.com/blog/2021/05/25/to-desk-remote-control/"/>
    <updated>2021-05-25T19:30:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/05/25/to-desk-remote-control</id>
    <content type="html"><![CDATA[<p>无论是远程办公、机房维护，还是为朋友提供远程协助服务，一个好用的远程控制软件必不可少。</p>

<p>提到桌面远程控制软件，大家通常会想到国外的 TeamViewer。但它奇怪的判定方式和高昂的价格被诟病已久，由国人开发的 ToDesk 远程控制软件，或许更适合大家。</p>

<p>ToDesk 拥有国内海量 G 口宽带服务器加速，远程访问更稳定更流畅。软件功能也很齐全，不输 Teamviewer。上架数码荔枝价格更优惠，仅需 108 元起，新注册用户再享立减 5 元优惠，只需 103 元起。</p>

<!--more-->


<h2>跨平台连接很方便</h2>

<p>ToDesk 支持多个平台，Windows、macOS、Linux、Android、iOS 均可使用。还能用手机控制电脑，满足你随时随地操控电脑的需求，就像把家中的电脑装进手机，从此多了一台「掌上电脑」。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE1.png?v=1" alt="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE1.png" /></p>

<h2>操作简单易上手</h2>

<p>和其他同类远程控制软件类似，ToDesk 也是只需要输入 ID 和密码就能一键连接。不管你是内网、外网还是移动网络，都可以随时随地发起远程控制，能轻松穿透内网，在复杂 NAT 网络下使用。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE2.gif" alt="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE2.gif" /></p>

<p>登录账号将设备添加至设备列表管理更方便。更多设备连接需求可购买专业版或企业版，数码荔枝特惠价 108 元起，快通过[合作伙伴]<a href="https://store.lizhi.io/site/products/id/437?cid=wncr9wz5">专属优惠链接</a>下单吧~</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE3.png" alt="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE3.png" /></p>

<p>和远程控制的电脑剪贴板内容共享，文字或是文件都能轻松复制粘贴，可以轻松完成双向跨设备复制。本机内容复制后，直接就能在远程设备上粘贴使用，是不是很方便？</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE4.gif" alt="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE4.gif" /></p>

<h2>稳定安全有保障</h2>

<p>桌面远程控制，最重要的还是稳定性和安全性，毕竟谁都不想连着连着就掉线吧。</p>

<p>ToDesk 公司做过游戏加速器，在国内拥有海量加速节点。付费用户拥有更多的服务器节点数量，操作延迟更低。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE5.png" alt="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE5.png" /></p>

<p>ToDesk 通讯数据使用 SSL + ChaCha20 and Poly1305 端到端加密，让你的连接更安全。通过[合作伙伴]<a href="https://store.lizhi.io/site/products/id/437?cid=wncr9wz5">专属优惠链接</a>下单，108 元起即可购买。</p>

<h2>高清流畅更舒适</h2>

<p>在高速机房的加持下，远程画面高清流畅。可以自行切换屏幕分辨率大小，全屏使用体验更舒适。再加上声音同步功能，远程控制就像在本机操作一样。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE6.gif" alt="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE6.gif" /></p>

<h2>功能齐全超方便</h2>

<p> ToDesk 远程控制软件大小仅 10M 左右，支持远程开关机、文件传输、远程打印、无人值守、隐私屏、聊天工具、移动端鼠标触控板等多个核心远程协助功能。</p>

<p>付费后提供多样的文件传输方式，拖拽传输、复制粘贴传输、顶部菜单传输三种姿势任你选，习惯哪个用哪个。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE7.gif" alt="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE7.gif" /></p>

<p>隐私屏可保护主控端的隐私操作不被偷窥，并阻止被控端键鼠的操作。即使设备不在身边也无需担心隐私被泄露。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE8.png" alt="https://asset.droidyue.com/image/lizhi_io/to_desk/%E5%9B%BE8.png" /></p>

<hr />

<p>ToDesk 上架数码荔枝，特惠价仅需 108 元起，新注册用户再享立减 5 元优惠，只需 103 元起，快来通过[合作伙伴]<a href="https://store.lizhi.io/site/products/id/437?cid=wncr9wz5">优惠链接</a>购买吧！</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CooBox 之 早鸟执行器，轻松控制频率处理]]></title>
    <link href="https://droidyue.com/blog/2021/05/24/coobox-early-bird-executor-android-java-kotlin/"/>
    <updated>2021-05-24T11:56:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/05/24/coobox-early-bird-executor-android-java-kotlin</id>
    <content type="html"><![CDATA[<p>在处理编程场景时，我们有时候需要控制某些频率。比如一个用户疯狂地点击一个按钮，我们想要这样处理。</p>

<ul>
<li>在5秒之内，只处理第一个点击请求的内容</li>
</ul>


<p>使用 CooBox 中的 <code>EarlyBirdExecutor</code>(早鸟执行器，早起的鸟儿有虫吃。<code>^_^</code>) 我们可以很便捷的实现该功能。</p>

<!--more-->


<h2>第一步，创建对象</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">private</span> <span class="k">val</span> <span class="n">earlyBirdExecutor</span> <span class="p">=</span> <span class="n">EarlyBirdExecutor</span><span class="p">(</span><span class="m">5</span> <span class="p">*</span> <span class="n">DateUtils</span><span class="p">.</span><span class="n">SECOND_IN_MILLIS</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中构造参数，接受一个有效的时间周期，单位为毫秒。</p>

<h2>第二步，执行递交任务</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">val</span> <span class="n">executed</span> <span class="p">=</span> <span class="n">earlyBirdExecutor</span><span class="p">.</span><span class="n">submit</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//真正要执行的代码</span>
</span><span class='line'>    <span class="p">....</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>每次用户点击的时候，执行上面的代码调用</li>
<li>当在单位时间周期内，是第一个提交任务，则被执行，<code>executed</code> 值为<code>true</code>，否则为<code>false</code></li>
</ul>


<h2>完整示例源码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">object</span> <span class="n">EarlyBirdTest</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">val</span> <span class="n">earlyBirdExecutor</span> <span class="p">=</span> <span class="n">EarlyBirdExecutor</span><span class="p">(</span><span class="m">5</span> <span class="p">*</span> <span class="n">DateUtils</span><span class="p">.</span><span class="n">SECOND_IN_MILLIS</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">onUserClick</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">val</span> <span class="n">currentDate</span> <span class="p">=</span> <span class="n">Date</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">val</span> <span class="n">executed</span> <span class="p">=</span> <span class="n">earlyBirdExecutor</span><span class="p">.</span><span class="n">submit</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">smartLogD</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&quot;onUserClick $currentDate&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">smartLogD</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;onUserClick executed=$executed;date=$currentDate&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>如何快速使用</h2>

<ul>
<li><code>EarlyBirdExecutor</code>已经包含在 CooBox 中，简单几步即可集成。<a href="https://github.com/secoo-android/coobox">开始集成</a></li>
<li><code>EarlyBirdExecutor</code> 源码 <a href="https://github.com/secoo-android/coobox/blob/main/library/src/main/java/com/secoo/coobox/library/util/schedule/EarlyBirdExecutor.kt">https://github.com/secoo-android/coobox/blob/main/library/src/main/java/com/secoo/coobox/library/util/schedule/EarlyBirdExecutor.kt</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coobox 之 App 前后台状态变化通知]]></title>
    <link href="https://droidyue.com/blog/2021/05/18/android-app-state-help-foreground-backgroud/"/>
    <updated>2021-05-18T12:12:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/05/18/android-app-state-help-foreground-backgroud</id>
    <content type="html"><![CDATA[<p>前言：Coobox 是我们团队开源的 Android 开发工具库，<a href="https://github.com/secoo-android/coobox">https://github.com/secoo-android/coobox</a> 欢迎大家 Star 和 Fork，以及集成使用。</p>

<p>在 Android 应用日常开发中，我们有时候需要判断应用处于前台还是后台，来进行一些状态更新或者资源处理等操作。而 Android 并未直接提供对应的检测方法，需要我们来实现。而实用的 CooBox 就集成了这一方面的工具代码。</p>

<!--more-->


<h2>如何定义前后台</h2>

<ul>
<li>这里的前后台不是 Linux 进程的前后台(Foreground, Backgroud)</li>
<li>App 前台状态指的是 当用户可以肉眼可见 App 的界面(Activity)，否则为 App 后台状态</li>
</ul>


<h2>如何实现</h2>

<ul>
<li>定义一个当前进程的 Activity数量变量，如<code>activityCount</code>, Int类型</li>
<li>当进程中的 Activity 执行到 <code>onStart</code> 方法，执行<code>activityCount++</code></li>
<li>当进程中的 Activity 执行到 <code>onStop</code> 方法，执行<code>activityCount--</code></li>
<li>当<code>activityCount</code> 为 <code>0</code>, 则表示 App 在后台状态，否则为前台状态</li>
</ul>


<h2>实现代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">package</span> <span class="nn">com.secoo.coobox.library.lifecycle</span>
</span><span class='line'>
</span><span class='line'><span class="n">import</span> <span class="n">android</span><span class="p">.</span><span class="n">app</span><span class="p">.</span><span class="n">Activity</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">object</span> <span class="n">AppStateHelper</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">var</span> <span class="n">activityCount</span> <span class="p">=</span> <span class="m">0</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">val</span> <span class="n">listeners</span> <span class="p">=</span> <span class="n">mutableListOf</span><span class="p">&lt;</span><span class="n">OnAppStateChangedListener</span><span class="p">&gt;()</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 判断 App 当前是否为前台可见状态</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">val</span> <span class="n">isForeground</span><span class="p">:</span> <span class="n">Boolean</span>
</span><span class='line'>        <span class="k">get</span><span class="p">()</span> <span class="p">=</span> <span class="n">activityCount</span> <span class="p">!=</span> <span class="m">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 判断 App 当前是否为后台不可见状态</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">val</span> <span class="n">isBackground</span><span class="p">:</span> <span class="n">Boolean</span>
</span><span class='line'>        <span class="k">get</span><span class="p">()</span> <span class="p">=</span> <span class="n">activityCount</span> <span class="p">==</span> <span class="m">0</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="k">enum</span> <span class="k">class</span> <span class="nc">Message</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">BACKGROUNDED</span><span class="p">,</span> <span class="n">FOREGROUNDED</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 返回当前的App状态</span>
</span><span class='line'><span class="cm">     * @return</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">val</span> <span class="n">state</span><span class="p">:</span> <span class="n">Message</span>
</span><span class='line'>        <span class="k">get</span><span class="p">()</span> <span class="p">=</span> <span class="k">if</span> <span class="p">(</span><span class="n">isForeground</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">Message</span><span class="p">.</span><span class="n">FOREGROUNDED</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">Message</span><span class="p">.</span><span class="n">BACKGROUNDED</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Activity 执行到 onStart 时调用，需主动调用</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">activityStarting</span><span class="p">(</span><span class="n">activity</span><span class="p">:</span> <span class="n">Activity</span><span class="p">):</span> <span class="n">Boolean</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">ret</span> <span class="p">=</span> <span class="k">false</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">activityCount</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">onForeground</span><span class="p">(</span><span class="n">activity</span><span class="p">)</span>
</span><span class='line'>            <span class="n">ret</span> <span class="p">=</span> <span class="k">true</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">activityCount</span><span class="p">++</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">ret</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Activity 执行到 onStop 时调用，需主动调用</span>
</span><span class='line'><span class="cm">     * */</span>
</span><span class='line'>    <span class="n">@Synchronized</span>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">activityStopping</span><span class="p">(</span><span class="n">activity</span><span class="p">:</span> <span class="n">Activity</span><span class="p">):</span> <span class="n">Boolean</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">activityCount</span><span class="p">--</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">activityCount</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">onBackground</span><span class="p">(</span><span class="n">activity</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">true</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">addListener</span><span class="p">(</span><span class="n">listener</span><span class="p">:</span> <span class="n">OnAppStateChangedListener</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">listeners</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">listener</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">removeListener</span><span class="p">(</span><span class="n">listener</span><span class="p">:</span> <span class="n">OnAppStateChangedListener</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">listeners</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="n">listener</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">fun</span> <span class="nf">onBackground</span><span class="p">(</span><span class="n">activity</span><span class="p">:</span> <span class="n">Activity</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">listeners</span><span class="p">.</span><span class="n">forEach</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">it</span><span class="p">.</span><span class="n">onAppStateChanged</span><span class="p">(</span><span class="n">Message</span><span class="p">.</span><span class="n">BACKGROUNDED</span><span class="p">,</span> <span class="n">activity</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">fun</span> <span class="nf">onForeground</span><span class="p">(</span><span class="n">activity</span><span class="p">:</span> <span class="n">Activity</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">listeners</span><span class="p">.</span><span class="n">forEach</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">it</span><span class="p">.</span><span class="n">onAppStateChanged</span><span class="p">(</span><span class="n">Message</span><span class="p">.</span><span class="n">FOREGROUNDED</span><span class="p">,</span> <span class="n">activity</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>手动触发调用</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">class</span> <span class="nc">AppStateTestFragment</span> <span class="p">:</span> <span class="n">TestableFragment</span><span class="p">(),</span> <span class="n">OnAppStateChangedListener</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">override</span> <span class="k">fun</span> <span class="nf">addTestItems</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">setupAppStateHelper</span><span class="p">(</span><span class="n">application</span><span class="p">:</span> <span class="n">Application</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">application</span><span class="p">.</span><span class="n">registerActivityLifecycleCallbacks</span><span class="p">(</span><span class="n">object</span><span class="p">:</span> <span class="n">ActivityLifecycleCallbacksImpl</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">override</span> <span class="k">fun</span> <span class="nf">onActivityStarted</span><span class="p">(</span><span class="n">activity</span><span class="p">:</span> <span class="n">Activity</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">super</span><span class="p">.</span><span class="n">onActivityStarted</span><span class="p">(</span><span class="n">activity</span><span class="p">)</span>
</span><span class='line'>                <span class="n">AppStateHelper</span><span class="p">.</span><span class="n">activityStarting</span><span class="p">(</span><span class="n">activity</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">override</span> <span class="k">fun</span> <span class="nf">onActivityStopped</span><span class="p">(</span><span class="n">activity</span><span class="p">:</span> <span class="n">Activity</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">super</span><span class="p">.</span><span class="n">onActivityStopped</span><span class="p">(</span><span class="n">activity</span><span class="p">)</span>
</span><span class='line'>                <span class="n">AppStateHelper</span><span class="p">.</span><span class="n">activityStopping</span><span class="p">(</span><span class="n">activity</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">})</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>使用简介</h2>

<h3>监听 前后台 状态变化</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">AppStateHelper</span><span class="p">.</span><span class="n">addListener</span><span class="p">(</span><span class="n">object</span><span class="p">:</span> <span class="n">OnAppStateChangedListener</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">override</span> <span class="k">fun</span> <span class="nf">onAppStateChanged</span><span class="p">(</span><span class="n">state</span><span class="p">:</span> <span class="n">AppStateHelper</span><span class="p">.</span><span class="n">Message</span><span class="p">,</span> <span class="n">activity</span><span class="p">:</span> <span class="n">Activity</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;AppStateHelper&quot;</span><span class="p">,</span> <span class="s">&quot;onAppStateChanged message=$state;activity=$activity&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<h3>查询前后台状态</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="c1">// App是否为前台状态</span>
</span><span class='line'><span class="k">val</span> <span class="n">isForeground</span> <span class="p">=</span> <span class="n">AppStateHelper</span><span class="p">.</span><span class="n">isForeground</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// App 是否为后台状态</span>
</span><span class='line'><span class="k">val</span> <span class="n">isBackground</span> <span class="p">=</span> <span class="n">AppStateHelper</span><span class="p">.</span><span class="n">isBackground</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// App 的状态</span>
</span><span class='line'><span class="k">val</span> <span class="n">appState</span> <span class="p">=</span> <span class="n">AppStateHelper</span><span class="p">.</span><span class="n">state</span>
</span></code></pre></td></tr></table></div></figure>


<h2>如何引入</h2>

<ul>
<li><code>AppStateHelper</code>已经包含进入 CooBox, 快速集成 Coobox <a href="https://github.com/secoo-android/coobox">https://github.com/secoo-android/coobox</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 查看系统的在线，登陆，重启，关机日志时间]]></title>
    <link href="https://droidyue.com/blog/2021/05/07/mac-check-login-reboot-shutdown-log/"/>
    <updated>2021-05-07T11:44:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/05/07/mac-check-login-reboot-shutdown-log</id>
    <content type="html"><![CDATA[<p>有时候，我们需要查询一下机器的信息，比如运行了多长时间，什么时候开机的等等。下面是一些整理，来帮助大家快速通过终端查看信息。</p>

<!--more-->


<p></p>

<h2>查看运行时间</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">uptime</span>
</span><span class='line'><span class="mi">17</span><span class="o">:</span><span class="mi">35</span>  <span class="n">up</span>  <span class="mi">7</span><span class="o">:</span><span class="mi">13</span><span class="o">,</span> <span class="mi">3</span> <span class="n">users</span><span class="o">,</span> <span class="n">load</span> <span class="nl">averages:</span> <span class="mf">2.57</span> <span class="mf">2.75</span> <span class="mf">2.56</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>7:13</code> 为开机后运行的时间</p>

<h2>最近的重启时间点</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">➜</span>  <span class="mi">2021</span><span class="n">_04</span> <span class="n">last</span> <span class="n">reboot</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Mon</span> <span class="n">Apr</span> <span class="mi">19</span> <span class="mi">10</span><span class="o">:</span><span class="mi">22</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Thu</span> <span class="n">Apr</span> <span class="mi">15</span> <span class="mi">10</span><span class="o">:</span><span class="mi">01</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Sun</span> <span class="n">Apr</span> <span class="mi">11</span> <span class="mi">14</span><span class="o">:</span><span class="mi">56</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">48</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">46</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">45</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">44</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">41</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Thu</span> <span class="n">Apr</span>  <span class="mi">8</span> <span class="mi">09</span><span class="o">:</span><span class="mi">56</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Mon</span> <span class="n">Mar</span> <span class="mi">29</span> <span class="mi">09</span><span class="o">:</span><span class="mi">49</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">26</span> <span class="mi">14</span><span class="o">:</span><span class="mi">06</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">26</span> <span class="mi">14</span><span class="o">:</span><span class="mi">02</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Mon</span> <span class="n">Mar</span> <span class="mi">22</span> <span class="mi">09</span><span class="o">:</span><span class="mi">56</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">19</span> <span class="mi">09</span><span class="o">:</span><span class="mi">52</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Wed</span> <span class="n">Mar</span> <span class="mi">17</span> <span class="mi">19</span><span class="o">:</span><span class="mi">25</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Mon</span> <span class="n">Mar</span> <span class="mi">15</span> <span class="mi">09</span><span class="o">:</span><span class="mi">50</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">12</span> <span class="mi">13</span><span class="o">:</span><span class="mi">51</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">12</span> <span class="mi">09</span><span class="o">:</span><span class="mi">54</span>
</span><span class='line'><span class="n">reboot</span>    <span class="o">~</span>                         <span class="n">Thu</span> <span class="n">Mar</span> <span class="mi">11</span> <span class="mi">12</span><span class="o">:</span><span class="mi">46</span>
</span><span class='line'>
</span><span class='line'><span class="n">wtmp</span> <span class="n">begins</span> <span class="n">Thu</span> <span class="n">Mar</span> <span class="mi">11</span> <span class="mi">12</span><span class="o">:</span><span class="mi">46</span>
</span></code></pre></td></tr></table></div></figure>


<h2>最近的关机时间点</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">➜</span>  <span class="mi">2021</span><span class="n">_04</span> <span class="n">last</span> <span class="n">shutdown</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span> <span class="mi">16</span> <span class="mi">20</span><span class="o">:</span><span class="mi">29</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Thu</span> <span class="n">Apr</span> <span class="mi">15</span> <span class="mi">10</span><span class="o">:</span><span class="mi">01</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">21</span><span class="o">:</span><span class="mi">10</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">48</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">46</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">45</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">43</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Apr</span>  <span class="mi">9</span> <span class="mi">11</span><span class="o">:</span><span class="mi">41</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Thu</span> <span class="n">Apr</span>  <span class="mi">1</span> <span class="mi">20</span><span class="o">:</span><span class="mi">07</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">26</span> <span class="mi">21</span><span class="o">:</span><span class="mi">58</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">26</span> <span class="mi">14</span><span class="o">:</span><span class="mi">06</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">26</span> <span class="mi">14</span><span class="o">:</span><span class="mi">02</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">19</span> <span class="mi">21</span><span class="o">:</span><span class="mi">54</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Wed</span> <span class="n">Mar</span> <span class="mi">17</span> <span class="mi">19</span><span class="o">:</span><span class="mi">29</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">12</span> <span class="mi">21</span><span class="o">:</span><span class="mi">57</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">12</span> <span class="mi">13</span><span class="o">:</span><span class="mi">50</span>
</span><span class='line'><span class="n">shutdown</span>  <span class="o">~</span>                         <span class="n">Fri</span> <span class="n">Mar</span> <span class="mi">12</span> <span class="mi">09</span><span class="o">:</span><span class="mi">53</span>
</span><span class='line'>
</span><span class='line'><span class="n">wtmp</span> <span class="n">begins</span> <span class="n">Thu</span> <span class="n">Mar</span> <span class="mi">11</span> <span class="mi">12</span><span class="o">:</span><span class="mi">46</span>
</span></code></pre></td></tr></table></div></figure>


<h2>最近的登陆时间点</h2>

<ul>
<li>使用方法为<code>last user_name</code>即可查看</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">➜</span>  <span class="mi">2021</span><span class="n">_04</span> <span class="n">last</span> <span class="n">androidyue</span>
</span><span class='line'><span class="n">androidyue</span>  <span class="n">ttys001</span>                   <span class="n">Mon</span> <span class="n">Apr</span> <span class="mi">19</span> <span class="mi">10</span><span class="o">:</span><span class="mi">23</span>   <span class="n">still</span> <span class="n">logged</span> <span class="n">in</span>
</span><span class='line'><span class="n">androidyue</span>  <span class="n">ttys000</span>                   <span class="n">Mon</span> <span class="n">Apr</span> <span class="mi">19</span> <span class="mi">10</span><span class="o">:</span><span class="mi">23</span>   <span class="n">still</span> <span class="n">logged</span> <span class="n">in</span>
</span><span class='line'><span class="n">androidyue</span>  <span class="n">console</span>                   <span class="n">Mon</span> <span class="n">Apr</span> <span class="mi">19</span> <span class="mi">10</span><span class="o">:</span><span class="mi">23</span>   <span class="n">still</span> <span class="n">logged</span> <span class="n">in</span>
</span><span class='line'><span class="n">androidyue</span>  <span class="n">ttys001</span>                   <span class="n">Fri</span> <span class="n">Apr</span> <span class="mi">16</span> <span class="mi">19</span><span class="o">:</span><span class="mi">02</span> <span class="o">-</span> <span class="mi">19</span><span class="o">:</span><span class="mi">02</span>  <span class="o">(</span><span class="mi">00</span><span class="o">:</span><span class="mi">00</span><span class="o">)</span>
</span><span class='line'><span class="n">androidyue</span>  <span class="n">ttys002</span>                   <span class="n">Fri</span> <span class="n">Apr</span> <span class="mi">16</span> <span class="mi">17</span><span class="o">:</span><span class="mi">14</span> <span class="o">-</span> <span class="mi">17</span><span class="o">:</span><span class="mi">14</span>  <span class="o">(</span><span class="mi">00</span><span class="o">:</span><span class="mi">00</span><span class="o">)</span>
</span><span class='line'><span class="n">androidyue</span>  <span class="n">ttys001</span>                   <span class="n">Fri</span> <span class="n">Apr</span> <span class="mi">16</span> <span class="mi">17</span><span class="o">:</span><span class="mi">07</span> <span class="o">-</span> <span class="mi">17</span><span class="o">:</span><span class="mi">07</span>  <span class="o">(</span><span class="mi">00</span><span class="o">:</span><span class="mi">00</span><span class="o">)</span>
</span><span class='line'><span class="n">androidyue</span>  <span class="n">ttys001</span>                   <span class="n">Fri</span> <span class="n">Apr</span> <span class="mi">16</span> <span class="mi">14</span><span class="o">:</span><span class="mi">39</span> <span class="o">-</span> <span class="mi">14</span><span class="o">:</span><span class="mi">39</span>  <span class="o">(</span><span class="mi">00</span><span class="o">:</span><span class="mi">00</span><span class="o">)</span>
</span><span class='line'><span class="n">androidyue</span>  <span class="n">ttys000</span>                   <span class="n">Fri</span> <span class="n">Apr</span> <span class="mi">16</span> <span class="mi">14</span><span class="o">:</span><span class="mi">37</span> <span class="o">-</span> <span class="mi">14</span><span class="o">:</span><span class="mi">37</span>  <span class="o">(</span><span class="mi">00</span><span class="o">:</span><span class="mi">00</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git 处理文件与 revison 冲突问题]]></title>
    <link href="https://droidyue.com/blog/2021/04/25/fatal-ambiguous-argument-both-revision-and-filename-git/"/>
    <updated>2021-04-25T19:37:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/04/25/fatal-ambiguous-argument-both-revision-and-filename-git</id>
    <content type="html"><![CDATA[<p>有一次，尝试使用git log 来查看某个分支(build.gradle)的历史提交时，遇到了这样的问题</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">git</span> <span class="n">log</span> <span class="n">build</span><span class="o">.</span><span class="na">gradle</span>
</span><span class='line'><span class="nl">fatal:</span> <span class="n">ambiguous</span> <span class="n">argument</span> <span class="err">&#39;</span><span class="n">build</span><span class="o">.</span><span class="na">gradle</span><span class="err">&#39;</span><span class="o">:</span> <span class="n">both</span> <span class="n">revision</span> <span class="n">and</span> <span class="n">filename</span>
</span><span class='line'><span class="n">Use</span> <span class="err">&#39;</span><span class="o">--</span><span class="err">&#39;</span> <span class="n">to</span> <span class="n">separate</span> <span class="n">paths</span> <span class="n">from</span> <span class="n">revisions</span><span class="o">,</span> <span class="n">like</span> <span class="k">this</span><span class="o">:</span>
</span><span class='line'><span class="err">&#39;</span><span class="n">git</span> <span class="o">&lt;</span><span class="n">command</span><span class="o">&gt;</span> <span class="o">[&lt;</span><span class="n">revision</span><span class="o">&gt;...]</span> <span class="o">--</span> <span class="o">[&lt;</span><span class="n">file</span><span class="o">&gt;...]</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h2>出错原因</h2>

<ul>
<li>分支名(build.gradle)与 当前目录下的文件<code>build.gradle</code>重复</li>
</ul>


<h2>怎么做</h2>

<ul>
<li>按照上面的提示使用<code>--</code> 进行分割即可。</li>
<li><code>--</code> 前面的为revision 可以是分支，tag等</li>
<li><code>--</code> 后面的为 file 即要操作的文件</li>
</ul>


<h3>查看分支的历史提交</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">git</span> <span class="n">log</span> <span class="n">build</span><span class="o">.</span><span class="na">gradle</span> <span class="o">--</span>
</span></code></pre></td></tr></table></div></figure>


<h3>查看某个文件的历史提交</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">git</span> <span class="n">log</span> <span class="o">--</span> <span class="n">build</span><span class="o">.</span><span class="na">gradle</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dokka 设置包描述，让你的 Kotlin 库文档更详实]]></title>
    <link href="https://droidyue.com/blog/2021/03/31/add-package-description-using-dokka-in-kotlin-library/"/>
    <updated>2021-03-31T19:21:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/03/31/add-package-description-using-dokka-in-kotlin-library</id>
    <content type="html"><![CDATA[<h2>Dokka 是啥</h2>

<ul>
<li>Dokka 是 Kotlin 生成类似 Javadoc 文档的工具，可以为 Kotlin 的库依据代码和注释等信息生成技术文档。</li>
<li>Dokka 的 github 地址为 <a href="https://github.com/Kotlin/dokka">https://github.com/Kotlin/dokka</a> 不了解的同学可以先了解一下。</li>
</ul>


<!--more-->


<h2>痛点</h2>

<ul>
<li>像类，方法等都可以在代码文件中进行添加注释来增加必要的描述</li>
<li>而 包 没有对应的代码文件载体，无法直接添加。</li>
</ul>


<p>好在，搜索了外文文档，找到了对应的方法，特此记录一下，希望可以帮到其他人。</p>

<h2>创建对应的 mardkown 文件</h2>

<ul>
<li>在期望的模块 (Module) 内部</li>
<li>不一定与build.grale同级，可以是新目录下，这里以同级为例</li>
<li>命名随意，没有限制</li>
<li>文件内容为 markdown 格式</li>
</ul>


<p>比如我们创建一个文件为<code>packages.md</code>,内容如下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Package com.secoo.coobox.library.impl
</span><span class='line'>
</span><span class='line'>这里填写关于 `com.secoo.coobox.library.impl`的描述信息
</span><span class='line'>
</span><span class='line'>## 这里也是 `com.secoo.coobox.library.impl` 的描述信息哈</span></code></pre></td></tr></table></div></figure>


<h2>如何引入描述信息</h2>

<p>在对应的模块下的<code>build.gradle</code>中增加<code>includes.from("packages.md")</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">dokkaHtml</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">outputDirectory</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">rootDir</span><span class="o">,</span> <span class="s">&quot;dokkadocs&quot;</span><span class="o">))</span>
</span><span class='line'>        <span class="c1">// Set module name displayed in the final output</span>
</span><span class='line'>        <span class="n">moduleName</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">&quot;library&quot;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">dokkaSourceSets</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">configureEach</span> <span class="o">{</span> <span class="c1">// Or source set name, for single-platform the default source sets are `main` and `test`</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">includes</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="s">&quot;packages.md&quot;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// 此处省略其他配置</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>效果</h2>

<p>使用<code>./gradlew dokkaHtml</code> 生成文档文件</p>

<h3>包索引页的效果</h3>

<p><img src="https://asset.droidyue.com/image/2021/03/dokka_package_index_sample.png" alt="https://asset.droidyue.com/image/2021/03/dokka_package_index_sample.png" /></p>

<h3>包详细页的效果</h3>

<p><img src="https://asset.droidyue.com/image/2021/03/dokka_package_detail_sample.png" alt="https://asset.droidyue.com/image/2021/03/dokka_package_detail_sample.png" /></p>

<h2>如何支持多个</h2>

<ul>
<li>可以支持多个，这样避免了超级文件的产生</li>
<li>增加新的markdown文件，比如 packages_1.md</li>
<li>在 gradle 文件中这样配置 <code>includes.from("packages.md", "packages_1.md")</code></li>
</ul>


<h2>示例内容</h2>

<ul>
<li><a href="https://github.com/secoo-android/coobox/blob/main/library/build.gradle#L59">https://github.com/secoo-android/coobox/blob/main/library/build.gradle#L59</a></li>
<li><a href="https://secoo-android.github.io/coobox/library/">https://secoo-android.github.io/coobox/library/</a></li>
<li><a href="https://github.com/secoo-android/coobox/tree/main/library/package-info">https://github.com/secoo-android/coobox/tree/main/library/package-info</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 抓取 ANR 日志终极办法]]></title>
    <link href="https://droidyue.com/blog/2021/03/07/view-android-anr-stacktrace/"/>
    <updated>2021-03-07T14:50:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/03/07/view-android-anr-stacktrace</id>
    <content type="html"><![CDATA[<p>在 Android 开发中，有时会遇到 ANR，一旦出现 ANR 我们就需要拿到对应的trace 文件来分析并解决。本文将介绍两种获取 ANR 的方法。</p>

<h2>第一种</h2>

<p>直接查看<code>/data/anr/traces.txt</code>的内容,如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb shell cat  /data/anr/traces.txt
</span></code></pre></td></tr></table></div></figure>


<p>或者类似使用拷贝到电脑上查看，比如</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb shell cp /data/anr/traces.txt /sdcard
</span><span class='line'>adb pull /sdcard/traces.txt ./
</span></code></pre></td></tr></table></div></figure>


<p>但是这种方法在某些手机上由于权限原因，无法进行，就需要了使用下面的方法了。</p>

<!--more-->


<h2>第二种</h2>

<p>这种方法就是进行<code>adb bugreport</code>，没有权限限制问题。具体步骤是</p>

<h3>生成 bugreport 文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb bugreport
</span><span class='line'>/data/user_de/0/com.android.shell/files/bugreports/bugreport-sailfish-QP1A.191005.007.A3-2021-01-12-15-30-21.zip: 1 file pulled, 0 skipped. 30.6 MB/s <span class="o">(</span>3897489 bytes in 0.121s<span class="o">)</span>
</span><span class='line'>Bug report copied to /private/tmp/bugreport-sailfish-QP1A.191005.007.A3-2021-01-12-15-30-21.zip
</span></code></pre></td></tr></table></div></figure>


<h3>进行解压文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>unzip bugreport-sailfish-QP1A.191005.007.A3-2021-01-12-15-32-54.zip
</span><span class='line'>Archive:  bugreport-sailfish-QP1A.191005.007.A3-2021-01-12-15-32-54.zip
</span><span class='line'>  inflating: version.txt
</span><span class='line'>  inflating: proto/SurfaceFlinger_CRITICAL.proto
</span><span class='line'>  inflating: proto/activity_CRITICAL.proto
</span><span class='line'>  inflating: proto/window_CRITICAL.proto
</span><span class='line'>  inflating: FS/data/anr/anr_2021-01-12-14-59-10-559
</span><span class='line'>  inflating: FS/data/misc/recovery/last_log
</span><span class='line'>  inflating: FS/data/misc/recovery/last_kmsg
</span><span class='line'>  inflating: FS/data/misc/recovery/ro.build.fingerprint
</span><span class='line'>  inflating: FS/data/misc/recovery/proc/version
</span><span class='line'>  inflating: FS/data/misc/update_engine_log/update_engine.19700914-172433
</span><span class='line'>  inflating: FS/proc/1/mountinfo
</span><span class='line'>  inflating: FS/proc/642/mountinfo
</span><span class='line'>  inflating: FS/proc/643/mountinfo
</span><span class='line'>  inflating: FS/proc/934/mountinfo
</span><span class='line'>  inflating: FS/proc/2592/mountinfo
</span><span class='line'>  inflating: FS/proc/2619/mountinfo
</span><span class='line'>  inflating: FS/proc/2882/mountinfo
</span><span class='line'>  inflating: FS/proc/3011/mountinfo
</span><span class='line'>  inflating: FS/proc/3031/mountinfo
</span><span class='line'>  inflating: FS/proc/3053/mountinfo
</span><span class='line'>  inflating: FS/proc/3198/mountinfo
</span><span class='line'>  inflating: FS/proc/3255/mountinfo
</span><span class='line'>  inflating: FS/proc/3409/mountinfo
</span><span class='line'>  inflating: FS/proc/3476/mountinfo
</span><span class='line'>  inflating: FS/proc/3584/mountinfo
</span><span class='line'>  inflating: FS/proc/3605/mountinfo
</span><span class='line'>  inflating: FS/proc/3637/mountinfo
</span><span class='line'>  inflating: FS/proc/3664/mountinfo
</span><span class='line'>  inflating: FS/proc/3673/mountinfo
</span><span class='line'>  inflating: FS/proc/3706/mountinfo
</span><span class='line'>  inflating: FS/proc/3732/mountinfo
</span><span class='line'>  inflating: FS/proc/3782/mountinfo
</span><span class='line'>  inflating: FS/proc/3802/mountinfo
</span><span class='line'>  inflating: FS/proc/3832/mountinfo
</span><span class='line'>  inflating: FS/proc/3906/mountinfo
</span><span class='line'>  inflating: FS/proc/3930/mountinfo
</span><span class='line'>  inflating: FS/proc/4582/mountinfo
</span><span class='line'>  inflating: FS/proc/5746/mountinfo
</span><span class='line'>  inflating: FS/proc/6563/mountinfo
</span><span class='line'>  inflating: FS/proc/7454/mountinfo
</span><span class='line'>  inflating: FS/proc/7717/mountinfo
</span><span class='line'>  inflating: FS/proc/8349/mountinfo
</span><span class='line'>  inflating: FS/proc/8367/mountinfo
</span><span class='line'>  inflating: FS/proc/8396/mountinfo
</span><span class='line'>  inflating: FS/proc/8748/mountinfo
</span><span class='line'>  inflating: FS/proc/8838/mountinfo
</span><span class='line'>  inflating: FS/proc/8862/mountinfo
</span><span class='line'>  inflating: FS/proc/8896/mountinfo
</span><span class='line'>  inflating: FS/proc/8941/mountinfo
</span><span class='line'>  inflating: FS/proc/10157/mountinfo
</span><span class='line'>  inflating: FS/proc/10412/mountinfo
</span><span class='line'>  inflating: FS/proc/26397/mountinfo
</span><span class='line'>  inflating: FS/proc/26468/mountinfo
</span><span class='line'>  inflating: FS/proc/27133/mountinfo
</span><span class='line'>  inflating: FS/proc/27518/mountinfo
</span><span class='line'>  inflating: FS/proc/29094/mountinfo
</span><span class='line'>  inflating: FS/proc/29279/mountinfo
</span><span class='line'>  inflating: FS/proc/29701/mountinfo
</span><span class='line'>  inflating: FS/proc/31908/mountinfo
</span><span class='line'>  inflating: lshal-debug/android.frameworks.cameraservice.service@2.0::ICameraService_default.txt
</span><span class='line'>  inflating: lshal-debug/android.frameworks.displayservice@1.0::IDisplayService_default.txt
</span><span class='line'>  inflating: lshal-debug/android.frameworks.schedulerservice@1.0::ISchedulingPolicyService_default.txt
</span><span class='line'>  inflating: lshal-debug/android.frameworks.sensorservice@1.0::ISensorManager_default.txt
</span><span class='line'>  inflating: lshal-debug/android.frameworks.stats@1.0::IStats_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.atrace@1.0::IAtraceDevice_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.audio.effect@5.0::IEffectsFactory_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.audio@5.0::IDevicesFactory_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.biometrics.fingerprint@2.1::IBiometricsFingerprint_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.bluetooth.audio@2.0::IBluetoothAudioProvidersFactory_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.bluetooth@1.0::IBluetoothHci_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.boot@1.0::IBootControl_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.camera.provider@2.4::ICameraProvider_legacy_0.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.cas@1.0::IMediaCasService_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.cas@1.1::IMediaCasService_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.configstore@1.0::ISurfaceFlingerConfigs_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.configstore@1.1::ISurfaceFlingerConfigs_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.contexthub@1.0::IContexthub_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.0::ICryptoFactory_clearkey.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.0::ICryptoFactory_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.0::ICryptoFactory_widevine.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.0::IDrmFactory_clearkey.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.0::IDrmFactory_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.0::IDrmFactory_widevine.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.1::ICryptoFactory_clearkey.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.1::ICryptoFactory_widevine.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.1::IDrmFactory_clearkey.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.1::IDrmFactory_widevine.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.2::ICryptoFactory_clearkey.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.drm@1.2::IDrmFactory_clearkey.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.gatekeeper@1.0::IGatekeeper_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.gnss@1.0::IGnss_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.graphics.composer@2.1::IComposer_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.health@2.0::IHealth_backup.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.health@2.0::IHealth_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.keymaster@3.0::IKeymasterDevice_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.light@2.0::ILight_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.media.c2@1.0::IComponentStore_software.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.media.omx@1.0::IOmx_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.media.omx@1.0::IOmxStore_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.memtrack@1.0::IMemtrack_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.nfc@1.0::INfc_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.nfc@1.1::INfc_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.power@1.0::IPower_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.power@1.1::IPower_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.radio.deprecated@1.0::IOemHook_slot1.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.radio@1.0::IRadio_slot1.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.radio@1.0::ISap_slot1.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.radio@1.1::IRadio_slot1.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.radio@1.1::ISap_slot1.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.sensors@1.0::ISensors_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.soundtrigger@2.0::ISoundTriggerHw_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.soundtrigger@2.1::ISoundTriggerHw_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.soundtrigger@2.2::ISoundTriggerHw_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.thermal@1.0::IThermal_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.thermal@2.0::IThermal_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.usb@1.0::IUsb_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.usb@1.1::IUsb_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.vr@1.0::IVr_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.wifi.supplicant@1.0::ISupplicant_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.wifi.supplicant@1.1::ISupplicant_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.wifi.supplicant@1.2::ISupplicant_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hardware.wifi@1.3::IWifi_default.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.allocator@1.0::IAllocator_ashmem.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.base@1.0::IBase_AtCmdFwdService.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.base@1.0::IBase_ashmem.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.base@1.0::IBase_backup.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.base@1.0::IBase_clearkey.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.base@1.0::IBase_legacy_0.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.base@1.0::IBase_slot1.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.base@1.0::IBase_software.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.base@1.0::IBase_widevine.txt
</span><span class='line'>  inflating: lshal-debug/android.hidl.token@1.0::ITokenManager_default.txt
</span><span class='line'>  inflating: lshal-debug/android.system.net.netd@1.0::INetd_default.txt
</span><span class='line'>  inflating: lshal-debug/android.system.net.netd@1.1::INetd_default.txt
</span><span class='line'>  inflating: lshal-debug/android.system.wifi.keystore@1.0::IKeystore_default.txt
</span><span class='line'>  inflating: lshal-debug/vendor.qti.atcmdfwd@1.0::IAtCmdFwd_AtCmdFwdService.txt
</span><span class='line'>  inflating: lshal-debug/vendor.qti.qcril.am@1.0::IQcRilAudio_default.txt
</span><span class='line'>  inflating: dumpstate_board.txt
</span><span class='line'>  inflating: proto/activity.proto
</span><span class='line'>  inflating: proto/incident.proto
</span><span class='line'>  inflating: proto/stats.proto
</span><span class='line'>  inflating: bugreport-sailfish-QP1A.191005.007.A3-2021-01-12-15-32-54.txt
</span><span class='line'>  inflating: main_entry.txt
</span><span class='line'>  inflating: dumpstate_log.txt
</span></code></pre></td></tr></table></div></figure>


<h3>查看 ANR stacktrace 文件</h3>

<p>文件路径通常为<code>FS/data/anr</code>，具体可以根据日期来确定哪一个文件。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat FS/data/anr/anr_2021-01-12-14-59-10-559
</span></code></pre></td></tr></table></div></figure>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新版赤友 NTFS 助手来袭，速度优化仅需 20 元起]]></title>
    <link href="https://droidyue.com/blog/2021/03/07/mac-ntfs-assistant-to-write-files-to-disk/"/>
    <updated>2021-03-07T11:06:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/03/07/mac-ntfs-assistant-to-write-files-to-disk</id>
    <content type="html"><![CDATA[<p>去年，一款 Mac 读写 NTFS 移动硬盘 / U 盘的国产工具：赤友 NTFS 助手，在 Mac 用户中流行起来。它凭借极高的性价比、易用的操作，获得了众多用户的青睐。</p>

<p>现在它迎来 3.0 版本的更新，带来了功能优化提升。售价还十分亲民，连同类产品的零头都不到。2020 年 5 月 19 日后购买赤友 NTFS 助手 2.0 的用户还可免费升级至 3.0 版，相当良心！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/ntfs/pic_1.png" alt="https://asset.droidyue.com/image/lizhi_io/ntfs/pic_1.png" /></p>

<!--more-->


<p>而且[合作伙伴]申请到专属优惠，直接购买到手价只需 20 元起！点击[合作伙伴]专属<a href="https://store.lizhi.io/site/products/id/68?cid=wncr9wz5">优惠链接</a>，立刻抢购新版吧！</p>

<p>现在新用户注册还可领取 5 元优惠券，赶快来买吧！<a href="https://store.lizhi.io/simple/reg_mobile?cid=wncr9wz5">注册领券</a></p>

<hr />

<h2>专属优惠，比官网升级买都划算！</h2>

<p>3.0 版原价 39 元起，老用户可享 6 折升级优惠。但从我们的专属链接[请在后台获取您的推广链接]前往购买，直购价比官方升级折扣还低！看个表格，价格优势立刻展现！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/ntfs/chart_1.png" alt="https://asset.droidyue.com/image/lizhi_io/ntfs/chart_1.png" /></p>

<table>
<thead>
<tr>
<th></th>
<th> 购买渠道                     </th>
<th> 基础版 (元) </th>
<th> 专业版 (元) </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> 官方网站                     </td>
<td> 39          </td>
<td> 68          |</td>
</tr>
<tr>
<td></td>
<td> 2.0 版升级(2020/5/19 后购买) </td>
<td> 免费        </td>
<td> 免费        |</td>
</tr>
<tr>
<td></td>
<td> 2.0 版升级(2020/5/19 前购买) </td>
<td> 23.4        </td>
<td> 40.8        |</td>
</tr>
<tr>
<td></td>
<td> 本次数码荔枝活动             </td>
<td> 20          </td>
<td> 39          |</td>
</tr>
</tbody>
</table>


<p>可见在[合作伙伴]专属<a href="https://store.lizhi.io/site/products/id/68?cid=wncr9wz5">优惠</a>下，直购赤友 NTFS 助手的价格比旧版本升级还要便宜，还等什么？这种优惠直接买就是啦！</p>

<h2>专注读写，简单实用</h2>

<p>与同类的 NTFS 工具相比，赤友 NTFS 助手没有不实用的高级功能，只专注于 NTFS 磁盘的读写。</p>

<p>接入移动硬盘即可读写、一键即可推出硬盘，内置简单的磁盘工具方便管理。功能不多但都很实用，这就是其价格极具竞争力的重要原因。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/ntfs/pic_2.png" alt="https://asset.droidyue.com/image/lizhi_io/ntfs/pic_2.png" /></p>

<p>如果你只需用 Mac 读写常见的 NTFS 硬盘，不想为用不到的功能付费，赤友 NTFS 助手就是极佳的选择。</p>

<h2>读写速度优化</h2>

<p>新版本进一步对软件读写速度进行了优化，写入读取流畅又快速。使用系统自带驱动进行读写操作，兼容度更加优秀。</p>

<p>而且软件还特地优化了多文件拷贝速度，让你在拷贝大量文件时减少等待时间，效率更上一层楼！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/ntfs/pic_3.png" alt="https://asset.droidyue.com/image/lizhi_io/ntfs/pic_3.png" /></p>

<p>点击[合作伙伴]专属<a href="https://store.lizhi.io/site/products/id/68?cid=wncr9wz5">优惠链接</a>，20 元起让你的 Mac 就能轻松读写常见 NTFS 硬盘 / U 盘！</p>

<h2>熟悉的操作体验</h2>

<p>软件与系统深度集成，软件图标采用 macOS Big Sur 风格，硬盘图标也与系统保持一致，就像内置硬盘那样使用 NTFS 移动硬盘。</p>

<p>拖拽、编辑、删除、保存文件都能正常操作，3.0 版更是加入了文件标签颜色设置、隔空投送的支持。</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/ntfs/pic_4.png" alt="https://asset.droidyue.com/image/lizhi_io/ntfs/pic_4.png" /></p>

<p>新版本可对 NTFS 卷进行重命名、磁盘检查，还解决了文件被占用，无法推出硬盘这类常见问题。熟悉的操作方式，完全没有使用障碍。</p>

<hr />

<p>赤友 NTFS 助手凭借实用的功能、较高的性价比，已经获得了许多用户的喜爱。点击[合作伙伴]专属<a href="https://store.lizhi.io/site/products/id/68?cid=wncr9wz5">优惠链接</a>，就能享受折扣价格，买到就是赚到！</p>

<p>别忘了新用户注册还送 5 元优惠券，优惠折上折！<a href="https://store.lizhi.io/simple/reg_mobile?cid=wncr9wz5">注册领券</a></p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3月特惠，Microsoft 365 一年仅需 89 元]]></title>
    <link href="https://droidyue.com/blog/2021/03/04/mircosoft-365-best-price/"/>
    <updated>2021-03-04T11:43:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/03/04/mircosoft-365-best-price</id>
    <content type="html"><![CDATA[<p>去年四月 Office 365 升级为 Microsoft 365，云服务的普及让它逐渐成为主流，并带来了更多用户权益：</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/office_365_21_03/image_1.png" alt="https://asset.droidyue.com/image/lizhi_io/office_365_21_03/image_1.png" /></p>

<p>始终获取最新功能、自带 1TB OneDrive 空间、还有各种模版以及 AI 辅助工具，每项功能都让办公操作变得轻松简单！</p>

<!--more-->


<p></p>

<h2>陌生人拼车？有风险！</h2>

<p>大家更是发现：购买一套 Microsoft 365 家庭版后，可供 6 位用户使用，均摊后的价格非常优惠。既然这样，不如大家一起开个「车」？</p>

<p>组织者作为「车主」购买家庭版后，邀请别人加入家庭账号，来共享「车位」。但陌生用户发起的组队，往往充满隐患，很有可能未到期就被踢下车。哪里有可靠的拼车组织呢？</p>

<h2>荔枝拼车有保障</h2>

<p>专业的事情由专业的我们来做，去年数码荔枝开启的 Office 拼车，现在再次回归。数码荔枝作为「车主」邀请顾客加入，安全有保证！</p>

<h2>不止是 Microsoft 365</h2>

<p>现在购买拼车除了享受一年 Microsoft 365 服务，还包含 Office 视频教程和一年1对1 Office 软件安装和使用帮助，简直是超值！</p>

<p>最后用一张图告诉你为什么数码荔枝拼车值得信赖！</p>

<p><img src="https://asset.droidyue.com/image/lizhi_io/office_365_21_03/image_2.png" alt="https://asset.droidyue.com/image/lizhi_io/office_365_21_03/image_2.png" /></p>

<p>原价 498 元，现在前往「数码荔枝」软件商店购买 <a href="https://store.lizhi.io/site/products/id/335?cid=wncr9wz5">Microsoft 365</a> 仅需 <strong>89 元</strong>，新注册用户还可领取 5 元优惠卷，只需 <strong>84 元</strong>更便宜。</p>

<p>立即购买： <a href="https://store.lizhi.io/site/products/id/335?cid=wncr9wz5">数码荔枝</a></p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复 Webview ERR_CACHE_MISS 问题]]></title>
    <link href="https://droidyue.com/blog/2021/02/16/webview-err-cache-miss/"/>
    <updated>2021-02-16T12:43:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/02/16/webview-err-cache-miss</id>
    <content type="html"><![CDATA[<p>有一次写一个简单的例子，例子中使用了 WebView 出现了如下的问题</p>

<p><img src="https://asset.droidyue.com/image/2020_11/err_cahce_miss_sample.png" alt="https://asset.droidyue.com/image/2020_11/err_cahce_miss_sample.png" /></p>

<p>上图的网页提示<code>net::ERR_CACHE_MISS</code>错误。</p>

<!--more-->


<h2>可能的原因</h2>

<ul>
<li>没有增加网络访问权限申请</li>
<li>网络访问权限写错了（检查一下大小写或者拼写错误，或放置位置）</li>
</ul>


<h2>解决方法</h2>

<ul>
<li>在 Manifest中添加<code>&lt;uses-permission android:name="android.permission.INTERNET"/&gt;</code></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10年程序员都不一定搞清楚的文件路径]]></title>
    <link href="https://droidyue.com/blog/2021/02/03/the-file-paths-you-may-not-know/"/>
    <updated>2021-02-03T12:48:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/02/03/the-file-paths-you-may-not-know</id>
    <content type="html"><![CDATA[<p>在 Java 中，文件是很常用的概念，这其中文件路径是一个很基础的内容，因为文件的创建，读取，写入和删除等操作都是依赖于文件路径的。但是你仔细看一下Java中 <code>File</code>的 API 你会发现有这样三个方法返回路径。</p>

<ul>
<li>getPath（获取路径）</li>
<li>getAbsolutePath（获取绝对路径）</li>
<li>getCanonicalPath（获取规范路径）</li>
</ul>


<!--more-->


<p>了解这其中的差异，我们可以先看一看通用的路径的概念，即相对路径，绝对路径和规范路径。</p>

<h2>文件路径中的特殊字符</h2>

<ul>
<li><code>.</code>  用来代表当前的目录</li>
<li><code>..</code> 用来代表父目录</li>
<li><code>/</code>  为Linux/Mac等操作系统的路径分隔符</li>
<li><code>\</code>  为 Windows 路径分隔符</li>
<li><code>:</code>  为 Windows磁盘分割符,比如<code>C:</code></li>
</ul>


<h2>相对路径</h2>

<ul>
<li>相对路径指的是某个文件相对于<code>当前目录</code>的路径</li>
</ul>


<h3>举个例子</h3>

<p>有两个文件，路径为</p>

<ul>
<li>文件 <code>/tmp/a/a.txt</code></li>
<li>目录 <code>/tmp/b/</code></li>
</ul>


<p>那么
  * 文件(<code>a.txt</code>)相对当前目录(<code>b</code>)的相对路径就是<code>../a/a.txt</code></p>

<h2>绝对路径</h2>

<ul>
<li>绝对路径指的是从文件系统的根目录到当前文件的路径。</li>
<li>其中Windows的文件系统根目录可以是<code>C:</code>或者<code>D:</code>等</li>
<li>Linux和Mac 等系统的根目录是<code>/</code></li>
<li>另外，对于同一个文件，可以存在多个不同的绝对路径。</li>
</ul>


<h3>同一文件的多个绝对路径</h3>

<p>假设<code>C</code>盘下有<code>temp</code>和<code>temp1</code>两个目录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp1</span>
</span></code></pre></td></tr></table></div></figure>


<p>那么这些都是指向同一个文件的绝对路径，且都是合法的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">test</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">test</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">TEST</span><span class="o">.</span><span class="na">TXT</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="o">.</span><span class="err">\</span><span class="n">test</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp1</span><span class="err">\</span><span class="o">..</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">test</span><span class="o">.</span><span class="na">txt</span>
</span></code></pre></td></tr></table></div></figure>


<p>备注： Windows下路径不区分大小写。</p>

<h2>Canonical路径 规范路径</h2>

<ul>
<li>规范路径是从文件系统的根目录到当前文件的唯一的路径。</li>
<li>规范路径不像绝对路径那样有多个不同的值指向同一文件。</li>
<li>规范路径是绝对路径，但是绝对路径不一定是规范路径。</li>
<li>规范路径中移除了<code>.</code>和<code>..</code>等特殊字符</li>
</ul>


<p>举一个例子</p>

<p>一个相对路径为<code>.././Java.txt</code>的文件，</p>

<ul>
<li>它的绝对路径是 <code>/Users/androidyue/Documents/projects/PathSamples/.././Java.txt</code></li>
<li>它的规范路径是 <code>/Users/androidyue/Documents/projects/Java.txt</code></li>
</ul>


<p>备注：Canonical <code>kə-ˈnä-ni-kəl</code> 发音类似 可囊尼口</p>

<h2>回到 Java File方法中</h2>

<ul>
<li><code>getPath</code> 返回的路径可能是相对路径，也可能是绝对路径。</li>
<li><code>getAbsolutePath</code> 返回的路径是绝对路径</li>
<li><code>getCanonicalPath</code> 返回的路径是唯一的规范路径。</li>
</ul>


<h2>多说无益，上代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PathDemo</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Path of the given file :&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">File</span> <span class="n">child</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;.././Java.txt&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">displayPath</span><span class="o">(</span><span class="n">child</span><span class="o">);</span>
</span><span class='line'>        <span class="n">File</span> <span class="n">parent</span> <span class="o">=</span> <span class="n">child</span><span class="o">.</span><span class="na">getParentFile</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Path of the parent folder :&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">displayPath</span><span class="o">(</span><span class="n">parent</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">File</span> <span class="n">anotherFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;a.txt&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Path of another file(a.txt)&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">displayPath</span><span class="o">(</span><span class="n">anotherFile</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">File</span> <span class="n">anotherAbsFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;/tmp/a.txt&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Path of another file(/tmp/a.txt)&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">displayPath</span><span class="o">(</span><span class="n">anotherAbsFile</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">displayPath</span><span class="o">(</span><span class="n">File</span> <span class="n">testFile</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;path : &quot;</span> <span class="o">+</span> <span class="n">testFile</span><span class="o">.</span><span class="na">getPath</span><span class="o">());</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;absolute path : &quot;</span> <span class="o">+</span> <span class="n">testFile</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;canonical path : &quot;</span> <span class="o">+</span> <span class="n">testFile</span><span class="o">.</span><span class="na">getCanonicalPath</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行后，输出的日志为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Path</span> <span class="n">of</span> <span class="n">the</span> <span class="n">given</span> <span class="n">file</span> <span class="o">:</span>
</span><span class='line'><span class="n">path</span> <span class="o">:</span> <span class="o">.././</span><span class="n">Java</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">absolute</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">PathSamples</span><span class="o">/.././</span><span class="n">Java</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">canonical</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">Java</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">Path</span> <span class="n">of</span> <span class="n">the</span> <span class="n">parent</span> <span class="n">folder</span> <span class="o">:</span>
</span><span class='line'><span class="n">path</span> <span class="o">:</span> <span class="o">../.</span>
</span><span class='line'><span class="n">absolute</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">PathSamples</span><span class="o">/../.</span>
</span><span class='line'><span class="n">canonical</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span>
</span><span class='line'><span class="n">Path</span> <span class="n">of</span> <span class="n">another</span> <span class="nf">file</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span><span class="o">)</span>
</span><span class='line'><span class="n">path</span> <span class="o">:</span> <span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">absolute</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">PathSamples</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">canonical</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">PathSamples</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">Path</span> <span class="n">of</span> <span class="n">another</span> <span class="nf">file</span><span class="o">(/</span><span class="n">tmp</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span><span class="o">)</span>
</span><span class='line'><span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">absolute</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">canonical</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="kd">private</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'>
</span><span class='line'><span class="n">Process</span> <span class="n">finished</span> <span class="n">with</span> <span class="n">exit</span> <span class="n">code</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="https://javarevisited.blogspot.com/2014/08/difference-between-getpath-getabsolutepath-getcanonicalpath-java.html">https://javarevisited.blogspot.com/2014/08/difference-between-getpath-getabsolutepath-getcanonicalpath-java.html</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac下关于DNS服务器的终端操作汇总]]></title>
    <link href="https://droidyue.com/blog/2021/01/25/change-network-connection-dns-server-on-mac-os/"/>
    <updated>2021-01-25T12:13:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/01/25/change-network-connection-dns-server-on-mac-os</id>
    <content type="html"><![CDATA[<p>Mac中有时候我们需要调整DNS来处理一些事情，作为终端控，使用终端调整DNS顺理成章，如下为一些关于DNS服务器终端处理的记录。</p>

<!--more-->


<h2>获取网络服务</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">listallnetworkservices</span>
</span><span class='line'><span class="n">An</span> <span class="nf">asterisk</span> <span class="o">(*)</span> <span class="n">denotes</span> <span class="n">that</span> <span class="n">a</span> <span class="n">network</span> <span class="n">service</span> <span class="n">is</span> <span class="n">disabled</span><span class="o">.</span>
</span><span class='line'><span class="n">USB</span> <span class="mi">10</span><span class="o">/</span><span class="mi">100</span><span class="o">/</span><span class="mi">1000</span> <span class="n">LAN</span>
</span><span class='line'><span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span>
</span></code></pre></td></tr></table></div></figure>


<h2>获取WIFI的DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">getdnsservers</span> <span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span>
</span><span class='line'><span class="mf">8.8</span><span class="o">.</span><span class="mf">8.8</span>
</span></code></pre></td></tr></table></div></figure>


<h2>获取<code>USB 10/100/1000 LAN</code>的DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">getdnsservers</span> <span class="s">&quot;USB 10/100/1000 LAN&quot;</span>
</span><span class='line'><span class="n">There</span> <span class="n">aren</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">any</span> <span class="n">DNS</span> <span class="n">Servers</span> <span class="n">set</span> <span class="n">on</span> <span class="n">USB</span> <span class="mi">10</span><span class="o">/</span><span class="mi">100</span><span class="o">/</span><span class="mi">1000</span> <span class="n">LAN</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>设置WIFI DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">setdnsservers</span> <span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span> <span class="mf">114.114</span><span class="o">.</span><span class="mf">114.114</span>
</span></code></pre></td></tr></table></div></figure>


<h2>设置WIFI 多个DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">setdnsservers</span> <span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span> <span class="mf">8.8</span><span class="o">.</span><span class="mf">8.8</span> <span class="mf">114.114</span><span class="o">.</span><span class="mf">114.114</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用空格分别多个DNS服务器地址</p>

<h2>清空WIFI DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">setdnsservers</span> <span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span> <span class="n">Empty</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上。</p>
<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[URL中的 # 原来是这个意思]]></title>
    <link href="https://droidyue.com/blog/2020/11/24/hash-symbol-in-url/"/>
    <updated>2020-11-24T18:30:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/11/24/hash-symbol-in-url</id>
    <content type="html"><![CDATA[<p>URL 是我们进行网络活动中很重要的概念，一个URL中可以包含域名，路径和参数等，</p>

<h2>一个典型的 URL</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">https:</span><span class="c1">//www.example.com/fruits.html?from=google#apple</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>这其中包含了</p>

<ul>
<li>协议： https</li>
<li>域名:  www.example.com</li>
<li>路径文件名: fruits.html</li>
<li>参数: from=google</li>
<li>片段： apple</li>
</ul>


<h2>#片段是什么</h2>

<ul>
<li>URL 中的 <code>#</code> 指的是一个片段</li>
<li>URL 片段 往往用来告知浏览器约定的一个滑动位置</li>
<li>如果一个 URL 指向了一个文档，那么片段指向的就是文档的某个内容区间。</li>
</ul>


<h2># 作用范围</h2>

<ul>
<li>会被本地浏览器处理</li>
<li>不会被服务器端接收处理</li>
</ul>


<h3>所以</h3>

<ul>
<li><code>www.example.com/fruits.html#apple</code></li>
<li><code>www.example.com/fruits.html#orange</code></li>
</ul>


<p>对应的情况是</p>

<ul>
<li>对于浏览器，上面的链接指向同一文档，但是具有不同的滑动位置</li>
<li>对于服务器，上面的链接指向同一文档，没有其他信息了。</li>
</ul>


<h2># 还能怎么用</h2>

<ul>
<li>考虑到在浏览器可以获取片段信息，我们可以利用 Javascript做一些事情</li>
<li>网页应用可以使用片段来实现参数控制，做到不刷新页面，展示不同的内容</li>
</ul>


<p>如下为 JavaScript获取片段的示例代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span>
</span></code></pre></td></tr></table></div></figure>


<h2>SEO 的影响</h2>

<p>基于上面的理解，<code>www.example.com/fruits.html#apple</code>和<code>www.example.com/fruits.html#orange</code> 会被搜索引擎当成一个链接。</p>

<p>如果不想被搜索引擎如上处理，有两种方式</p>

<ul>
<li>使用不同的网页链接如<code>www.example.com/fruits_apple.html</code>和<code>www.example.com/fruits_orange.html</code></li>
<li>使用<code>#!</code>，即<code>www.example.com/fruits.html#!apple</code>和<code>www.example.com/fruits.html#!orange</code>  这种方式，可能只是Google 支持，其他搜索引擎待验证。</li>
</ul>


<h2>参考内容</h2>

<ul>
<li><a href="https://www.oho.com/blog/explained-60-seconds-hash-symbols-urls-and-seo">https://www.oho.com/blog/explained-60-seconds-hash-symbols-urls-and-seo</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何自定义一个 Gradle 任务]]></title>
    <link href="https://droidyue.com/blog/2020/11/14/create-a-custom-gradle-task/"/>
    <updated>2020-11-14T20:28:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/11/14/create-a-custom-gradle-task</id>
    <content type="html"><![CDATA[<p>很多的项目是基于 gradle 构建，而且依托 gradle 的强大能力，我们可以实现更多的功能。比如像今天这样，我们会介绍如何创建一个自定义的 gradle 任务。</p>

<h2>修改文件</h2>

<ul>
<li>（Android 项目）app 模块下的 build.gradle 为例</li>
</ul>


<!--more-->


<h2>增加PrintInfoTask</h2>

<p>增加自定义的Task 分为两步</p>

<ul>
<li>增加Class声明 <code>PrintInfoTask</code></li>
<li>创建task <code>printInfo</code></li>
</ul>


<p>具体实施代码如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 定义类</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">PrintInfoTask</span> <span class="kd">extends</span> <span class="n">DefaultTask</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@TaskAction</span>
</span><span class='line'>    <span class="n">def</span> <span class="nf">printInfo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">println</span> <span class="s">&quot;printInfoTask&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//声明 task</span>
</span><span class='line'><span class="n">task</span> <span class="nf">printInfo</span><span class="o">(</span><span class="nl">type:</span> <span class="n">PrintInfoTask</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中</p>

<ul>
<li><code>@TaskAction</code> 注解的方法，会在任务执行的时候，被自动调用。</li>
</ul>


<h2>如何执行</h2>

<p>使用我们上面创建的 <code>printInfo</code> 作为任务名执行就可以了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">./</span><span class="n">gradlew</span> <span class="n">printInfo</span>
</span></code></pre></td></tr></table></div></figure>


<h2>引入变量</h2>

<p>为了让定义的任务可以配置，我们往往需要引入变量来实现。</p>

<h2>外部变量无法直接使用</h2>

<p>我们尝试在 <code>printInfo</code> 中引入<code>rootProject</code>，如下修改</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">PrintInfoTask</span> <span class="kd">extends</span> <span class="n">DefaultTask</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@TaskAction</span>
</span><span class='line'>    <span class="n">def</span> <span class="nf">printInfo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">println</span> <span class="s">&quot;printInfoTask ${rootProject}&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="nf">printInfo</span><span class="o">(</span><span class="nl">type:</span> <span class="n">PrintInfoTask</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是当我们在执行的时候，发现有问题，如下的错误信息。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">➜</span>  <span class="n">GradleTaskSample</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">printInfo</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">Task</span> <span class="o">:</span><span class="nl">app:</span><span class="n">printInfo</span> <span class="n">FAILED</span>
</span><span class='line'>
</span><span class='line'><span class="nl">FAILURE:</span> <span class="n">Build</span> <span class="n">failed</span> <span class="n">with</span> <span class="n">an</span> <span class="n">exception</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="nl">Where:</span>
</span><span class='line'><span class="n">Build</span> <span class="n">file</span> <span class="err">&#39;</span><span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">AndroidStudioProjects</span><span class="o">/</span><span class="n">GradleTaskSample</span><span class="o">/</span><span class="n">app</span><span class="o">/</span><span class="n">build</span><span class="o">.</span><span class="na">gradle</span><span class="err">&#39;</span> <span class="nl">line:</span> <span class="mi">31</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="n">What</span> <span class="n">went</span> <span class="nl">wrong:</span>
</span><span class='line'><span class="n">Execution</span> <span class="n">failed</span> <span class="k">for</span> <span class="n">task</span> <span class="err">&#39;</span><span class="o">:</span><span class="nl">app:</span><span class="n">printInfo</span><span class="err">&#39;</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">Could</span> <span class="n">not</span> <span class="n">get</span> <span class="n">unknown</span> <span class="n">property</span> <span class="err">&#39;</span><span class="n">rootProject</span><span class="err">&#39;</span> <span class="k">for</span> <span class="n">task</span> <span class="err">&#39;</span><span class="o">:</span><span class="nl">app:</span><span class="n">printInfo</span><span class="err">&#39;</span> <span class="n">of</span> <span class="n">type</span> <span class="n">PrintInfoTask</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="nl">Try:</span>
</span><span class='line'><span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">stacktrace</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">stack</span> <span class="n">trace</span><span class="o">.</span> <span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">info</span> <span class="n">or</span> <span class="o">--</span><span class="n">debug</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">more</span> <span class="n">log</span> <span class="n">output</span><span class="o">.</span> <span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">scan</span> <span class="n">to</span> <span class="n">get</span> <span class="n">full</span> <span class="n">insights</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="n">Get</span> <span class="n">more</span> <span class="n">help</span> <span class="n">at</span> <span class="nl">https:</span><span class="c1">//help.gradle.org</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">FAILED</span> <span class="n">in</span> <span class="mi">607</span><span class="n">ms</span>
</span><span class='line'><span class="mi">1</span> <span class="n">actionable</span> <span class="nl">task:</span> <span class="mi">1</span> <span class="n">executed</span>
</span></code></pre></td></tr></table></div></figure>


<h2>外部变量传入才能用</h2>

<p>上面部分提示找不到<code>rootProject</code>属性，因为对于外部的属性，需要以传入属性的方式来实现，如下修改。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">PrintInfoTask</span> <span class="kd">extends</span> <span class="n">DefaultTask</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Input</span>
</span><span class='line'>    <span class="n">Project</span> <span class="n">project</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@TaskAction</span>
</span><span class='line'>    <span class="n">def</span> <span class="nf">printInfo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">println</span> <span class="s">&quot;printInfoTask ${project}&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="nf">printInfo</span><span class="o">(</span><span class="nl">type:</span> <span class="n">PrintInfoTask</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">project</span> <span class="o">=</span> <span class="n">rootProject</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们的修改是</p>

<ul>
<li><code>PrintInfoTask</code>中增加 <code>project</code> 属性，用来接收外部传入的对应值，使用<code>@Input</code> 表明 Task中需要输入的属性</li>
<li>在<code>task printInfo</code> 中增加赋值语句 <code>project = rootProject</code>，其中<code>rootProject</code>为根项目的内容。</li>
</ul>


<p>再次执行，就没有问题了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">➜</span>  <span class="n">GradleTaskSample</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">printInfo</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="n">Task</span> <span class="o">:</span><span class="nl">app:</span><span class="n">printInfo</span>
</span><span class='line'><span class="n">printInfoTask</span> <span class="n">root</span> <span class="n">project</span> <span class="err">&#39;</span><span class="n">GradleTaskSample</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span> <span class="n">in</span> <span class="mi">592</span><span class="n">ms</span>
</span><span class='line'><span class="mi">1</span> <span class="n">actionable</span> <span class="nl">task:</span> <span class="mi">1</span> <span class="n">executed</span>
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="https://docs.gradle.org/current/userguide/custom_tasks.html">https://docs.gradle.org/current/userguide/custom_tasks.html</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复WebView资源未找到导致的崩溃问题]]></title>
    <link href="https://droidyue.com/blog/2020/11/06/fix-resources-notfoundexception-string-resource-id-number-0x2040003-android-issue/"/>
    <updated>2020-11-06T20:06:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/11/06/fix-resources-notfoundexception-string-resource-id-number-0x2040003-android-issue</id>
    <content type="html"><![CDATA[<p>近期 应用新增了很多的崩溃，分析特征，发现崩溃集中在5.0-5.1.1系统上，崩溃的日志如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Caused by: android.content.res.Resources<span class="nv">$NotFoundException</span>: String resource ID <span class="c">#0x2040003</span>
</span><span class='line'>at android.content.res.Resources.getText<span class="o">(</span>Resources.java:318<span class="o">)</span>
</span><span class='line'>at android.content.res.VivoResources.getText<span class="o">(</span>VivoResources.java:123<span class="o">)</span>
</span><span class='line'>at android.content.res.Resources.getString<span class="o">(</span>Resources.java:404<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.content.browser.ContentViewCore.setContainerView<span class="o">(</span>ContentViewCore.java:694<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.content.browser.ContentViewCore.initialize<span class="o">(</span>ContentViewCore.java:618<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.android_webview.AwContents.createAndInitializeContentViewCore<span class="o">(</span>AwContents.java:631<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.android_webview.AwContents.setNewAwContents<span class="o">(</span>AwContents.java:780<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.android_webview.AwContents.&lt;init&gt;<span class="o">(</span>AwContents.java:619<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.android_webview.AwContents.&lt;init&gt;<span class="o">(</span>AwContents.java:556<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium.initForReal<span class="o">(</span>WebViewChromium.java:312<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium.access<span class="nv">$100</span><span class="o">(</span>WebViewChromium.java:96<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium<span class="nv">$1</span>.run<span class="o">(</span>WebViewChromium.java:264<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium<span class="nv">$WebViewChromiumRunQueue</span>.drainQueue<span class="o">(</span>WebViewChromium.java:123<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium<span class="nv">$WebViewChromiumRunQueue$1</span>.run<span class="o">(</span>WebViewChromium.java:110<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.base.ThreadUtils.runOnUiThread<span class="o">(</span>ThreadUtils.java:144<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium<span class="nv">$WebViewChromiumRunQueue</span>.addTask<span class="o">(</span>WebViewChromium.java:107<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium.init<span class="o">(</span>WebViewChromium.java:261<span class="o">)</span>
</span><span class='line'>at android.webkit.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:554<span class="o">)</span>
</span><span class='line'>at android.webkit.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:489<span class="o">)</span>
</span><span class='line'>at android.webkit.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:472<span class="o">)</span>
</span><span class='line'>at android.webkit.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:459<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView<span class="nv">$a</span>.&lt;init&gt;<span class="o">(</span>WebView.java:2968<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:567<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:329<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:323<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:318<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:313<span class="o">)</span>
</span><span class='line'>at com.xxxx.webview.X5WebView.&lt;init&gt;<span class="o">(</span>X5WebView.java:36<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.Fragment.performCreateView<span class="o">(</span>Fragment.java:2600<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.moveToState<span class="o">(</span>FragmentManagerImpl.java:881<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.moveFragmentToExpectedState<span class="o">(</span>FragmentManagerImpl.java:1238<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.moveToState<span class="o">(</span>FragmentManagerImpl.java:1303<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.BackStackRecord.executeOps<span class="o">(</span>BackStackRecord.java:439<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.executeOps<span class="o">(</span>FragmentManagerImpl.java:2079<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.executeOpsTogether<span class="o">(</span>FragmentManagerImpl.java:1869<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.removeRedundantOperationsAndExecute<span class="o">(</span>FragmentManagerImpl.java:1824<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.execPendingActions<span class="o">(</span>FragmentManagerImpl.java:1727<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.dispatchStateChange<span class="o">(</span>FragmentManagerImpl.java:2663<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.dispatchActivityCreated<span class="o">(</span>FragmentManagerImpl.java:2613<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentController.dispatchActivityCreated<span class="o">(</span>FragmentController.java:246<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentActivity.onStart<span class="o">(</span>FragmentActivity.java:542<span class="o">)</span>
</span><span class='line'>at androidx.appcompat.app.AppCompatActivity.onStart<span class="o">(</span>AppCompatActivity.java:201<span class="o">)</span>
</span><span class='line'>at android.app.Instrumentation.callActivityOnStart<span class="o">(</span>Instrumentation.java:1245<span class="o">)</span>
</span><span class='line'>at android.app.Activity.performStart<span class="o">(</span>Activity.java:6099<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread.performLaunchActivity<span class="o">(</span>ActivityThread.java:2367<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread.handleLaunchActivity<span class="o">(</span>ActivityThread.java:2466<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread.access<span class="nv">$900</span><span class="o">(</span>ActivityThread.java:175<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread<span class="nv">$H</span>.handleMessage<span class="o">(</span>ActivityThread.java:1369<span class="o">)</span>
</span><span class='line'>at android.os.Handler.dispatchMessage<span class="o">(</span>Handler.java:102<span class="o">)</span>
</span><span class='line'>at android.os.Looper.loop<span class="o">(</span>Looper.java:135<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread.main<span class="o">(</span>ActivityThread.java:5418<span class="o">)</span>
</span><span class='line'>at java.lang.reflect.Method.invoke<span class="o">(</span>Native Method<span class="o">)</span>
</span><span class='line'>at java.lang.reflect.Method.invoke<span class="o">(</span>Method.java:372<span class="o">)</span>
</span><span class='line'>at com.android.internal.os.ZygoteInit<span class="nv">$MethodAndArgsCaller</span>.run<span class="o">(</span>ZygoteInit.java:1037<span class="o">)</span>
</span><span class='line'>at com.android.internal.os.ZygoteInit.main<span class="o">(</span>ZygoteInit.java:832<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>貌似感觉没有解决办法，后来在这里<a href="https://stackoverflow.com/a/58695635">https://stackoverflow.com/a/58695635</a>  找到了解决办法</p>

<h2>解决方法</h2>

<ul>
<li>针对出问题的系统（5.0-5.1.1）使用ApplicationContext 处理</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">object</span> <span class="n">WebViewWorkaroundAssistant</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fun</span> <span class="nf">getWorkaroundContext</span><span class="o">(</span><span class="nl">context:</span> <span class="n">Context</span><span class="o">):</span> <span class="n">Context</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">//修复Caused by: android.content.res.Resources$NotFoundException: String resource ID #0x2040003</span>
</span><span class='line'>        <span class="c1">//https://stackoverflow.com/a/58695635</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">if</span> <span class="o">(</span><span class="n">Build</span><span class="o">.</span><span class="na">VERSION</span><span class="o">.</span><span class="na">SDK_INT</span> <span class="o">&lt;</span> <span class="n">Build</span><span class="o">.</span><span class="na">VERSION_CODES</span><span class="o">.</span><span class="na">M</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">context</span><span class="o">.</span><span class="na">applicationContext</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">context</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">X5WebView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">WebViewWorkaroundAssistant</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">getWorkaroundContext</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>        <span class="n">initUI</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>注意事项</h2>

<ul>
<li>当再次使用WebView.getContext时，得到的就是Application 上下文，而不是Activity的了。</li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[终端下双重过滤筛选内容]]></title>
    <link href="https://droidyue.com/blog/2020/10/20/double-find-content/"/>
    <updated>2020-10-20T20:38:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/10/20/double-find-content</id>
    <content type="html"><![CDATA[<p>很多时候，我们需要对文件内容进行查找，查找出包含某段字符串的文件，比如这样</p>

<p>我们使用这个命令可以查找包含Ruby字符的全部文件和行数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source </span>git:<span class="o">(</span>master<span class="o">)</span> grep  -E <span class="s2">&quot;Ruby&quot;</span> --exclude-dir<span class="o">={</span>.git,lib,.gradle,.idea,build,captures<span class="o">}</span>   . -R --color<span class="o">=</span>always -n
</span><span class='line'>./_posts/2014-09-08-learn-sqlite-in-a-very-fast-way.markdown:9:最近用Ruby写了一个七牛的demo参赛作品，使用了sqlite3，用到很多操作，利用假期的时间，简单做一个快速掌握SQLite命令的小入门。
</span><span class='line'>./_posts/2013-09-07-issues-about-installing-octopress.markdown:6:categories: Github OctoPress Ruby RVM
</span><span class='line'>./_posts/2016-04-10-jit-friendly-checker-for-android.markdown:117:###为什么用Ruby
</span><span class='line'>./_posts/2016-04-10-jit-friendly-checker-for-android.markdown:118:  * 答：有了idea时很纠结，因为不确定用什么语言实现，尤其是在Python和ruby之间，为此问了不少同学，最后“一意孤行”决定用Ruby了，不喜欢Python的强制对齐，超级喜欢Ruby的字符串模板。Ruby很简单，很人性化，相信你会喜欢的。
</span><span class='line'>./_posts/2014-09-22-weekly-script-add-prefix-to-mutiple-files-in-ruby.markdown:6:categories: Ruby, 效率, 每周1脚本
</span><span class='line'>./_posts/2014-08-21-file-code-sinppets-in-ruby.markdown:3:title: <span class="s2">&quot;Ruby常用文件操作&quot;</span>
</span><span class='line'>./_posts/2014-08-21-file-code-sinppets-in-ruby.markdown:6:categories: Ruby
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>那么问题来了，如果，我们想要查找出同时包含了Ruby和Android的文件路径，怎么办呢，其实不难</p>

<ul>
<li>确定好包含包含Ruby的文件路径</li>
<li>从上面的路径中查找是否包含 Android</li>
</ul>


<p>具体的实现如下</p>

<h2>脚本内容</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="n">dirToSearch</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">firstFilter</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="n">secondFilter</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">firstFilterCommand</span> <span class="o">=</span> <span class="s2">&quot;grep  -E &#39;</span><span class="si">#{</span><span class="n">firstFilter</span><span class="si">}</span><span class="s2">&#39; --exclude-dir={.git,lib,.gradle,.idea,build,captures} --exclude={*.png,*.jpg,*.jar}  </span><span class="si">#{</span><span class="n">dirToSearch</span><span class="si">}</span><span class="s2"> -R&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">firstFilterCommand</span>
</span><span class='line'><span class="sb">`</span><span class="si">#{</span><span class="n">firstFilterCommand</span><span class="si">}</span><span class="sb">`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span>
</span><span class='line'>    <span class="o">|</span><span class="n">line</span><span class="o">|</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="p">}</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span>
</span><span class='line'>    <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;Checking file </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="nb">system</span> <span class="s2">&quot;grep </span><span class="si">#{</span><span class="n">secondFilter</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> -n --color=always&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>执行结果</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  <span class="nb">source </span>git:<span class="o">(</span>master<span class="o">)</span> doubleGrep.rb ./ ruby Android
</span><span class='line'>grep  -E <span class="s1">&#39;ruby&#39;</span> --exclude-dir<span class="o">={</span>.git,lib,.gradle,.idea,build,captures<span class="o">}</span> --exclude<span class="o">={</span>*.png,*.jpg,*.jar<span class="o">}</span>  ./ -R
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Checking file .//_posts/2014-09-20-interaction-between-java-and-javascript-in-android.markdown
</span><span class='line'>3:title: <span class="s2">&quot;Android中Java和JavaScript交互&quot;</span>
</span><span class='line'>6:categories: Android Java JavaScript
</span><span class='line'>8:Android提供了一个很强大的WebView控件用来处理Web网页，而在网页中，JavaScript又是一个很举足轻重的脚本。本文将介绍如何实现Java代码和Javascript代码的相互调用。
</span><span class='line'>107:Java-Javascript Interaction In Android
</span><span class='line'>138:Android在4.4之前并没有提供直接调用js函数并获取值的方法，所以在此之前，常用的思路是 java调用js方法，js方法执行完毕，再次调用java代码将值返回。
</span><span class='line'>158:Android 4.4之后使用evaluateJavascript即可。这里展示一个简单的交互示例
</span><span class='line'>211:如果只在4.2版本以上的机器出问题，那么就是系统处于安全限制的问题了。Android文档这样说的
</span><span class='line'>212:&gt;Caution: If you<span class="err">&#39;</span>ve <span class="nb">set </span>your targetSdkVersion to 17 or higher, you must add the @JavascriptInterface annotation to any method that you want available your web page code <span class="o">(</span>the method must also be public<span class="o">)</span>. If you <span class="k">do </span>not provide the annotation, <span class="k">then </span>the method will not accessible by your web page when running on Android 4.2 or higher.
</span><span class='line'>268:  * &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://www.amazon.cn/gp/product/B00LVHTI9U/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00LVHTI9U&amp;linkCode=as2&amp;tag=droidyue-23&quot;</span>&gt;第一行代码:Android&lt;/a&gt;&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&amp;l=as2&amp;o=28&amp;a=B00LVHTI9U&quot;</span> <span class="nv">width</span><span class="o">=</span><span class="s2">&quot;1&quot;</span> <span class="nv">height</span><span class="o">=</span><span class="s2">&quot;1&quot;</span> <span class="nv">border</span><span class="o">=</span><span class="s2">&quot;0&quot;</span> <span class="nv">alt</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="nv">style</span><span class="o">=</span><span class="s2">&quot;border:none !important; margin:0px !important;&quot;</span> /&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Checking file .//_posts/2013-09-07-issues-about-installing-octopress.markdown
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Checking file .//_posts/2016-04-10-jit-friendly-checker-for-android.markdown
</span></code></pre></td></tr></table></div></figure>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[巧用Kotlin反射实现按值取名，调试做到多快好省]]></title>
    <link href="https://droidyue.com/blog/2020/05/31/using-kotlin-reflection-to-get-constant-variable-name-by-value/"/>
    <updated>2020-05-31T20:55:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/05/31/using-kotlin-reflection-to-get-constant-variable-name-by-value</id>
    <content type="html"><![CDATA[<h2>痛点</h2>

<p>我们经常会定义一些常量，比如</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ItemType</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_TEXT</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_IMG</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_VIDEO</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_AUDIO</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_LINK</span> <span class="o">=</span> <span class="mi">4</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>当我们打印查看是哪种类型的时候，如果单纯是打印int值，并不能足够解释业务信息，所以，为了更好的输出信息，我们通常会这样做</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">fun</span> <span class="nf">inspectItemTypeUgly</span><span class="o">(</span><span class="nl">itemType:</span> <span class="n">Int</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">val</span> <span class="n">type</span> <span class="o">=</span> <span class="n">when</span><span class="o">(</span><span class="n">itemType</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_TEXT</span> <span class="o">-&gt;</span> <span class="s">&quot;text&quot;</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_AUDIO</span> <span class="o">-&gt;</span> <span class="s">&quot;audio&quot;</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_IMG</span> <span class="o">-&gt;</span> <span class="s">&quot;image&quot;</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_LINK</span> <span class="o">-&gt;</span> <span class="s">&quot;link&quot;</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_VIDEO</span> <span class="o">-&gt;</span> <span class="s">&quot;video&quot;</span>
</span><span class='line'>        <span class="k">else</span> <span class="o">-&gt;</span> <span class="kc">null</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">println</span><span class="o">(</span><span class="s">&quot;inspect item type =${inspectItemTypeUgly(itemType)};originalValue=$itemType&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后这样调用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">val</span> <span class="n">itemType</span> <span class="o">=</span> <span class="n">getRandomItemType</span><span class="o">()</span>
</span><span class='line'><span class="n">print</span><span class="o">(</span><span class="n">inspectItemTypeUgly</span><span class="o">(</span><span class="n">itemType</span><span class="o">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样做能打印出更加有意义的信息，但是需要编写额外的将int转换成String的方法，可谓是费时费力。</p>

<h2>有没有好办法</h2>

<p>方法是有的。</p>

<p>比如我们定义<code>public static final int TYPE_TEXT = 0;</code>的时候，我们定义了常量名和常量值。那么</p>

<ul>
<li>我们可以利用变量值查找对应的变量名</li>
<li>借助 Kotlin便捷的特性和反射库，我们可以更好更轻松实现。</li>
</ul>


<h2>秀代码</h2>

<h3>针对 Java 类（接口）和普通的 Kotlin类</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">getConstantNameByValueFromNormalClass</span><span class="p">(</span><span class="n">kClass</span><span class="p">:</span> <span class="n">KClass</span><span class="p">&lt;*&gt;,</span> <span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kClass</span><span class="p">.</span><span class="n">staticProperties</span><span class="p">.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用示例</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">println</span><span class="p">(</span><span class="s">&quot;itemType=${ItemType::class.getConstantNameByValueFromNormalClass(itemType)}&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>针对 Kotlin object</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">getConstantNameByValueForObject</span><span class="p">(</span><span class="n">kClass</span><span class="p">:</span> <span class="n">KClass</span><span class="p">&lt;*&gt;,</span> <span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kClass</span><span class="p">.</span><span class="n">memberProperties</span><span class="p">.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用示例</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="c1">//定义常量在Object对象中</span>
</span><span class='line'><span class="n">object</span> <span class="n">ErrorCodes</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">const</span> <span class="k">val</span> <span class="n">ERROR_OK</span> <span class="p">=</span> <span class="m">0</span>
</span><span class='line'>    <span class="n">const</span> <span class="k">val</span> <span class="n">ERROR_INVALID_PARAM</span> <span class="p">=</span> <span class="m">1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//调用处</span>
</span><span class='line'><span class="n">println</span><span class="p">(</span><span class="s">&quot;errorCode=&quot;</span> <span class="p">+</span> <span class="n">ErrorCodes</span><span class="p">::</span><span class="n">class</span><span class="p">.</span><span class="n">getConstantNameByValueForObject</span><span class="p">(</span><span class="m">0</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h3>针对 Kotlin Top Level 变量的问题</h3>

<ul>
<li>对于 Kotlin变量定义，我们推荐是定义在top level层级。</li>
<li>但是 Kotlin无法直接访问到 top level 层级的类</li>
<li>我们需要借助一些变量来辅助获取 top level 层级的类</li>
<li>但是 Kotlin的反射无法top level类，所以我们必须使用java class</li>
</ul>


<h4>借助一个变量或者顶层类</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">const</span> <span class="k">val</span> <span class="n">SOURCE_REMOTE</span> <span class="p">=</span> <span class="m">0</span>
</span><span class='line'><span class="n">const</span> <span class="k">val</span> <span class="n">SOURCE_LOCAL</span> <span class="p">=</span> <span class="m">1</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="n">myConstantTopClass</span> <span class="p">=</span> <span class="n">object</span> <span class="p">:</span> <span class="n">Any</span><span class="p">()</span> <span class="p">{}.</span><span class="n">javaClass</span><span class="p">.</span><span class="n">enclosingClass</span>
</span></code></pre></td></tr></table></div></figure>


<h4>借助 Java class来获取常量（用KClass会抛出不支持异常）</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">Class</span><span class="p">&lt;*&gt;.</span><span class="n">getConstantNameByValues</span><span class="p">(</span><span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">declaredFields</span><span class="p">.</span><span class="n">mapNotNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">kotlinProperty</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用处</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">println</span><span class="p">(</span><span class="s">&quot;sourceType=&quot;</span> <span class="p">+</span> <span class="n">myConstantTopClass</span><span class="p">.</span><span class="n">getConstantNameByValues</span><span class="p">(</span><span class="m">0</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h2>总代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">import</span> <span class="n">kotlin</span><span class="p">.</span><span class="n">reflect</span><span class="p">.</span><span class="n">KClass</span>
</span><span class='line'><span class="n">import</span> <span class="n">kotlin</span><span class="p">.</span><span class="n">reflect</span><span class="p">.</span><span class="n">full</span><span class="p">.</span><span class="n">memberProperties</span>
</span><span class='line'><span class="n">import</span> <span class="n">kotlin</span><span class="p">.</span><span class="n">reflect</span><span class="p">.</span><span class="n">full</span><span class="p">.</span><span class="n">staticProperties</span>
</span><span class='line'><span class="n">import</span> <span class="n">kotlin</span><span class="p">.</span><span class="n">reflect</span><span class="p">.</span><span class="n">jvm</span><span class="p">.</span><span class="n">kotlinProperty</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">KClass</span><span class="p">&lt;*&gt;.</span><span class="n">findConstantNameByValue</span><span class="p">(</span><span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">isKotlinObject</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">getConstantNameByValueForObject</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">getConstantNameByValueFromNormalClass</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">getConstantNameByValueFromNormalClass</span><span class="p">(</span><span class="n">kClass</span><span class="p">:</span> <span class="n">KClass</span><span class="p">&lt;*&gt;,</span> <span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kClass</span><span class="p">.</span><span class="n">staticProperties</span><span class="p">.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">getConstantNameByValueForObject</span><span class="p">(</span><span class="n">kClass</span><span class="p">:</span> <span class="n">KClass</span><span class="p">&lt;*&gt;,</span> <span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kClass</span><span class="p">.</span><span class="n">memberProperties</span><span class="p">.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">Class</span><span class="p">&lt;*&gt;.</span><span class="n">getConstantNameByValues</span><span class="p">(</span><span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">declaredFields</span><span class="p">.</span><span class="n">mapNotNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">kotlinProperty</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="n">KClass</span><span class="p">&lt;*&gt;.</span><span class="n">isKotlinObject</span><span class="p">():</span> <span class="n">Boolean</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="n">objectInstance</span> <span class="p">!=</span> <span class="k">null</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Android 工程增加依赖(Kotlin 反射库)</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">implementation</span> <span class="s">&quot;org.jetbrains.kotlin:kotlin-reflect:$kotlin_version&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>性能问题</h2>

<ul>
<li>都说，反射的话性能比较差，是的，但是也不是那么的差。</li>
<li>如果担心性能，可以限定在非release版本下执行</li>
</ul>


<h2>注意事项</h2>

<ul>
<li>这种方法不适合于代码混淆后进行处理</li>
<li>定义变量的地方，保持业务单一，不要出现多个变量名对应一个变量值的问题</li>
</ul>


<h2>完整代码</h2>

<ul>
<li><a href="https://github.com/androidyue/KotlinReflectionSample">https://github.com/androidyue/KotlinReflectionSample</a></li>
</ul>


<h2>Kotlin其他内容推荐</h2>

<ul>
<li><a href="https://droidyue.com/blog/2019/05/19/do-and-dont-in-kotlin/">编写地道的 Kotlin 代码</a></li>
<li><a href="https://droidyue.com/blog/2017/05/08/how-to-study-kotlin/">研究学习Kotlin的一些方法</a></li>
<li><a href="https://droidyue.com/blog/categories/kotlin/">更多Kotlin系列文章</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[十个超级实用的git命令]]></title>
    <link href="https://droidyue.com/blog/2020/05/19/cool-git-skills/"/>
    <updated>2020-05-19T12:32:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/05/19/cool-git-skills</id>
    <content type="html"><![CDATA[<p>git无疑已经成为了大家代码版本控制最多的工具了，这其中有不少人是使用终端来进行操作git。这里列出一些超级实用的git脚本，希望可以对大家开发有所帮助。</p>

<p>建议大家讲下面的脚本内容，都保存成脚本，然后设置执行权限，将所在目录加入环境变量，这样使用起来更加方便。</p>

<!--more-->


<h2>查看未合并到master的分支</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git branch --no-merged master
</span></code></pre></td></tr></table></div></figure>


<h2>列出最近修改过的分支</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git <span class="k">for</span>-each-ref --count<span class="o">=</span>30 --sort<span class="o">=</span>-committerdate refs/heads/ --format<span class="o">=</span><span class="s1">&#39;%(refname:short)&#39;</span>%
</span></code></pre></td></tr></table></div></figure>


<h2>启用新的vim编写提交信息</h2>

<p>执行前的准备（后续无需执行该脚本），设置vim为默认的编辑器</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git config --global core.editor <span class="s2">&quot;vim&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>每次执行的脚本</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git commit -a
</span></code></pre></td></tr></table></div></figure>


<h2>将未提交的修改丢弃，恢复到之前的干净状态</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git reset --hard
</span></code></pre></td></tr></table></div></figure>


<h2>撤销上一个git提交</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="c">#!/bin/bash</span>
</span><span class='line'> git reset HEAD~
</span></code></pre></td></tr></table></div></figure>


<h2>未提交情况下，取消对于某个文件的修改</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>git reset HEAD <span class="nv">$1</span> <span class="o">&amp;&amp;</span> git checkout <span class="nv">$1</span>
</span></code></pre></td></tr></table></div></figure>


<h2>查看暂存的差异</h2>

<p>用来查看当我们使用<code>git add</code>之后的内容的差异</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git diff --cached
</span></code></pre></td></tr></table></div></figure>


<h2>切回上一个分支</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout -
</span></code></pre></td></tr></table></div></figure>


<h2>查找包含某个提交的分支列表</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch --contains  9666b5979<span class="o">(</span>commit <span class="nb">hash</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>查找包含某个提交的tag列表</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git tag --contains 9666b5979<span class="o">(</span>commit <span class="nb">hash</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>



<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用好 require,check,assert,写好 Kotlin 代码]]></title>
    <link href="https://droidyue.com/blog/2020/05/10/understanding-check-require-assert-in-kotlin/"/>
    <updated>2020-05-10T21:09:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/05/10/understanding-check-require-assert-in-kotlin</id>
    <content type="html"><![CDATA[<p>在编码的时候，我们需要做很多的检测判断，比如某个变量是否为<code>null</code>，某个成员属性是否为<code>true</code>，执行某个操作结果是否成功。比如像下面的这段代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">var</span> <span class="n">isDiskMounted</span> <span class="p">=</span> <span class="k">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="nf">createNewFile</span><span class="p">(</span><span class="n">file</span><span class="p">:</span> <span class="n">File</span><span class="p">?):</span> <span class="n">Boolean</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">if</span> <span class="p">(</span><span class="n">isDiskMounted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">file</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">file</span><span class="p">.</span><span class="n">createNewFile</span><span class="p">()</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">exists</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">true</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">println</span><span class="p">(</span><span class="s">&quot;Create file($file) failed&quot;</span><span class="p">)</span>
</span><span class='line'>                <span class="k">false</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">println</span><span class="p">(</span><span class="s">&quot;File($file) is null&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">false</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;Disk is not mounted&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>上面的代码实现了</p>

<ul>
<li>检测磁盘是否挂载</li>
<li>检测file参数是否为null</li>
<li>检测执行操作结果是否成功（file.exists()）</li>
</ul>


<p>但是上面的代码也有一些问题</p>

<ul>
<li>太多的if else 检测，层级产生，不够平</li>
<li>多个方法出口</li>
<li>更不容易发现异常和错误（有点类似fail safe模式）</li>
</ul>


<h2>使用今天的知识点改造</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="nf">createNewFileV2</span><span class="p">(</span><span class="n">file</span><span class="p">:</span> <span class="n">File</span><span class="p">?):</span> <span class="n">Boolean</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">check</span><span class="p">(</span><span class="n">isDiskMounted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;Disk is not mounted&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">requireNotNull</span><span class="p">(</span><span class="n">file</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;file is null&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">file</span><span class="p">.</span><span class="n">createNewFile</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">assert</span><span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">exists</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;createNewFileV2 file($file) does not exist&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>方法体没有多余层级，比较平</li>
<li>单个方法出口</li>
<li>更快更早发现问题（有点类似fail fast）</li>
<li><code>file.createNewFile()</code>执行时可以不需要再使用<code>file?.createNewFile()</code> 这一点是因为使用了<a href="https://droidyue.com/blog/2019/08/25/kotlin-contract-between-developers-and-the-compiler/">Contract</a>。</li>
</ul>


<h2>require</h2>

<ul>
<li><code>require(boolean)</code> 用来检测方法的参数，当参数boolean为false时，抛出<code>IllegalArgumentException</code></li>
</ul>


<h3>示例代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="nf">readFileContent</span><span class="p">(</span><span class="n">file</span><span class="p">:</span> <span class="n">File</span><span class="p">?):</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//判断file不能为null</span>
</span><span class='line'>    <span class="n">requireNotNull</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//判断文件必须可读，并提供错误的信息</span>
</span><span class='line'>    <span class="n">require</span><span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">canRead</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;readFileContent file($file) is not readable&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//read file content</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Your file content&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>变种方法</h3>

<ul>
<li><code>fun require(value: Boolean)</code></li>
<li><code>fun require(value: Boolean, lazyMessage: () -&gt; Any)</code></li>
<li><code>fun &lt;T : Any&gt; requireNotNull(value: T?)</code></li>
<li><code>fun &lt;T : Any&gt; requireNotNull(value: T?, lazyMessage: () -&gt; Any)</code></li>
</ul>


<h2>check</h2>

<ul>
<li><code>check(boolean)</code>用来检测对象的状态（属性），如果boolean为false，抛出异常<code>IllegalStateException</code></li>
</ul>


<h3>示例代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">class</span> <span class="nc">Engine</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="n">isStarted</span> <span class="p">=</span> <span class="k">false</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">speedUp</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">check</span><span class="p">(</span><span class="n">isStarted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;Engine is not started, cannot be speed up now&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//speed up the engine</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>变种方法</h3>

<ul>
<li><code>fun check(value: Boolean, lazyMessage: () -&gt; Any)</code></li>
<li><code>fun &lt;T : Any&gt; checkNotNull(value: T?)</code></li>
<li><code>fun &lt;T : Any&gt; checkNotNull(value: T?, lazyMessage: () -&gt; Any)</code></li>
</ul>


<h2>assert</h2>

<ul>
<li><code>assert(boolean)</code> 用来检测执行结果，当boolean为false时，抛出<code>AssertionError</code>。但是需要在开启对应的JVM选项时才生效。</li>
</ul>


<h3>示例代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="nf">makeFile</span><span class="p">(</span><span class="n">path</span><span class="p">:</span> <span class="n">String</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">val</span> <span class="n">file</span> <span class="p">=</span> <span class="n">File</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>    <span class="n">file</span><span class="p">.</span><span class="n">createNewFile</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">assert</span><span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">exists</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;make File($file) failed&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>使用顺序</h2>

<ul>
<li>先使用<code>check</code>检测对象的状态</li>
<li>再使用<code>require</code>检测方法的参数合法性</li>
<li>执行操作后，使用<code>assert</code>校验结果</li>
</ul>


<h2>关于lazyMessage</h2>

<ul>
<li>lazyMessage 可以允许我们提供更详细的错误辅助信息</li>
<li>lazyMessage的类型是<code>()-&gt; Any</code>,结合inline操作，可以实现惰性求值</li>
<li>具体可以参考 <a href="https://droidyue.com/blog/2019/11/24/smart-log-in-android-slash-kotlin/">这可能是最好的 Android/Kotlin日志输出方法</a></li>
</ul>


<h2>崩溃更多了，怎么办</h2>

<ul>
<li>是的，上面无论是<code>require</code>,<code>check</code>,<code>assert</code>都会在发现错误的时候抛出异常</li>
<li>这是为了让问题更早发现，这就是它们的哲学</li>
<li>如果想要考虑稳定的话，可以在业务侧 debug下崩溃，非debug下捕获吞掉异常</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">createNewFile</span><span class="p">(</span><span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="n">safeRun</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">createNewFileV2</span><span class="p">(</span><span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">val</span> <span class="n">isDebug</span> <span class="p">=</span> <span class="k">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="nf">safeRun</span><span class="p">(</span><span class="n">block</span><span class="p">:</span> <span class="p">()</span> <span class="p">-&gt;</span> <span class="n">Unit</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">block</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">t</span><span class="p">:</span> <span class="n">Throwable</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">t</span><span class="p">.</span><span class="n">printStackTrace</span><span class="p">()</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">isDebug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">throw</span>  <span class="n">t</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>更多文章</h2>

<ul>
<li><a href="https://droidyue.com/blog/2019/05/19/do-and-dont-in-kotlin/">编写地道的 Kotlin 代码</a></li>
<li><a href="https://droidyue.com/blog/2017/05/08/how-to-study-kotlin/">研究学习Kotlin的一些方法</a></li>
<li><a href="https://droidyue.com/blog/2020/03/22/kotlin-tips-get-value-safely/">KotlinTips: getValueSafely 安全取值</a></li>
</ul>

<br/><img src="https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png"  class="no_boarder_class" style="max-width:100%" /><br/>]]></content>
  </entry>
  
</feed>

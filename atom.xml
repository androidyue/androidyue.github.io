<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[技术小黑屋]]></title>
  <link href="http://droidyue.com/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2014-10-08T22:00:38+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[修改Linux系统时间的最简单方法]]></title>
    <link href="http://droidyue.com/blog/2014/10/03/modify-system-time-in-linux-or-mac/"/>
    <updated>2014-10-03T21:07:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/10/03/modify-system-time-in-linux-or-mac</id>
    <content type="html"><![CDATA[<p>在Linux桌面发行版提供了设置系统时间的界面程序，这个设置很简单，但是当你学会了下面的方法之后，你就开始厌烦用GUI界面设置了。</p>

<p>最简单的设置方法 就是创建一个符号链接/etc/localtime，其指向目标设置的时区城市代表（/usr/share/zoneinfo/ 目录下）</p>

<!--more-->


<p>比如我们想把机器的时区修改成亚洲的上海（东八区），我们按照下面操作就可以了。</p>

<p>其中s选项代表是符号链接，f选项代表强制删除目标。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime
</span></code></pre></td></tr></table></div></figure>


<p>注意，Asia通常是没有Beijing的，可能没有上海国际化吧，所以如果是东八区就要用上海。</p>

<p>经测试，Mac机器上述命令也是生效的。</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00BQTWC0U/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00BQTWC0U&linkCode=as2&tag=droidyue-23">Linux命令行大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00BQTWC0U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00LF4UPWS/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00LF4UPWS&linkCode=as2&tag=droidyue-23">Linux就是这个范儿</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00LF4UPWS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B003TJNO98/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003TJNO98&linkCode=as2&tag=droidyue-23">鸟哥的Linux私房菜:基础学习篇</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B003TJNO98" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android处理图像数据全记录]]></title>
    <link href="http://droidyue.com/blog/2014/10/03/handle-image-data-in-android/"/>
    <updated>2014-10-03T17:42:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/10/03/handle-image-data-in-android</id>
    <content type="html"><![CDATA[<p>Android中处理图像是一件很常见的事情，这里记录备忘一些亲身使用过的处理图片数据的方法。</p>

<h2>转为Bitmap</h2>

<!--more-->


<h3>RGB值转Bitmap</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">Bitmap</span> <span class="nf">createColorBitmap</span><span class="o">(</span><span class="n">String</span> <span class="n">rgb</span><span class="o">,</span> <span class="kt">int</span> <span class="n">width</span><span class="o">,</span> <span class="kt">int</span> <span class="n">height</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Bitmap</span> <span class="n">bmp</span> <span class="o">=</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">createBitmap</span><span class="o">(</span><span class="n">width</span><span class="o">,</span> <span class="n">height</span><span class="o">,</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">Config</span><span class="o">.</span><span class="na">ARGB_8888</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">color</span> <span class="o">=</span> <span class="n">Color</span><span class="o">.</span><span class="na">parseColor</span><span class="o">(</span><span class="n">rgb</span><span class="o">);</span>
</span><span class='line'>      <span class="n">bmp</span><span class="o">.</span><span class="na">eraseColor</span><span class="o">(</span><span class="n">color</span><span class="o">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">bmp</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Usage</span>
</span><span class='line'><span class="n">Bitmap</span> <span class="n">bmp</span> <span class="o">=</span> <span class="n">createColorBitmap</span><span class="o">(</span><span class="s">&quot;#cce8cf&quot;</span><span class="o">,</span> <span class="mi">200</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Color值转Bitmap</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">Bitmap</span> <span class="nf">createColorBitmap</span><span class="o">(</span><span class="kt">int</span> <span class="n">color</span><span class="o">,</span> <span class="kt">int</span> <span class="n">width</span><span class="o">,</span> <span class="kt">int</span> <span class="n">height</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Bitmap</span> <span class="n">bmp</span> <span class="o">=</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">createBitmap</span><span class="o">(</span><span class="n">width</span><span class="o">,</span> <span class="n">height</span><span class="o">,</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">Config</span><span class="o">.</span><span class="na">ARGB_8888</span><span class="o">);</span>
</span><span class='line'>  <span class="n">bmp</span><span class="o">.</span><span class="na">eraseColor</span><span class="o">(</span><span class="n">color</span><span class="o">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">bmp</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">//Usage</span>
</span><span class='line'><span class="n">Bitmap</span> <span class="n">bmp</span> <span class="o">=</span> <span class="n">createColorBitmap</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">,</span> <span class="mi">200</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>字节数组转Bitmap</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">Bitmap</span> <span class="nf">getBitmapFromByteArray</span><span class="o">(</span><span class="kt">byte</span><span class="o">[]</span> <span class="n">array</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeByteArray</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>读取文件转Bitmap</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">Bitmap</span> <span class="nf">getBitmapFromFile</span><span class="o">(</span><span class="n">String</span> <span class="n">pathName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeFile</span><span class="o">(</span><span class="n">pathName</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>读取资源转Bitmap</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">Bitmap</span> <span class="nf">getBitmapFromResource</span><span class="o">(</span><span class="n">Resources</span> <span class="n">res</span><span class="o">,</span> <span class="kt">int</span> <span class="n">resId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeResource</span><span class="o">(</span><span class="n">res</span><span class="o">,</span> <span class="n">resId</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>输入流转Bitmap</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">Bitmap</span> <span class="nf">getBitmapFromStream</span><span class="o">(</span><span class="n">InputStream</span> <span class="n">inputStream</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeStream</span><span class="o">(</span><span class="n">inputStream</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Drawable转Bitmap</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Bitmap</span> <span class="n">icon</span> <span class="o">=</span> <span class="n">BitmapFactory</span><span class="o">.</span><span class="na">decodeResource</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">getResources</span><span class="o">(),</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">icon_resource</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>转为Drawable</h2>

<h3>资源转Drawable</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Drawable</span> <span class="n">drawable</span> <span class="o">=</span> <span class="n">getResources</span><span class="o">().</span><span class="na">getDrawable</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_launcher</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Bitmap转Drawable</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Drawable</span> <span class="n">d</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BitmapDrawable</span><span class="o">(</span><span class="n">getResources</span><span class="o">(),</span><span class="n">bitmap</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>图片圆角展示</h2>

<p>通过对图片数据bitmap进行处理即可，其中pixels为边角的半径。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">Bitmap</span> <span class="nf">getRoundedCornerBitmap</span><span class="o">(</span><span class="n">Bitmap</span> <span class="n">bitmap</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pixels</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Bitmap</span> <span class="n">output</span> <span class="o">=</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">createBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="n">bitmap</span>
</span><span class='line'>                <span class="o">.</span><span class="na">getHeight</span><span class="o">(),</span> <span class="n">Config</span><span class="o">.</span><span class="na">ARGB_8888</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Canvas</span> <span class="n">canvas</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Canvas</span><span class="o">(</span><span class="n">output</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">final</span> <span class="kt">int</span> <span class="n">color</span> <span class="o">=</span> <span class="mh">0xff424242</span><span class="o">;</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">Paint</span> <span class="n">paint</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Paint</span><span class="o">();</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">Rect</span> <span class="n">rect</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Rect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">bitmap</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="n">bitmap</span><span class="o">.</span><span class="na">getHeight</span><span class="o">());</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">RectF</span> <span class="n">rectF</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RectF</span><span class="o">(</span><span class="n">rect</span><span class="o">);</span>
</span><span class='line'>        <span class="kd">final</span> <span class="kt">float</span> <span class="n">roundPx</span> <span class="o">=</span> <span class="n">pixels</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">paint</span><span class="o">.</span><span class="na">setAntiAlias</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>        <span class="n">canvas</span><span class="o">.</span><span class="na">drawARGB</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="n">paint</span><span class="o">.</span><span class="na">setColor</span><span class="o">(</span><span class="n">color</span><span class="o">);</span>
</span><span class='line'>        <span class="n">canvas</span><span class="o">.</span><span class="na">drawRoundRect</span><span class="o">(</span><span class="n">rectF</span><span class="o">,</span> <span class="n">roundPx</span><span class="o">,</span> <span class="n">roundPx</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">paint</span><span class="o">.</span><span class="na">setXfermode</span><span class="o">(</span><span class="k">new</span> <span class="n">PorterDuffXfermode</span><span class="o">(</span><span class="n">Mode</span><span class="o">.</span><span class="na">SRC_IN</span><span class="o">));</span>
</span><span class='line'>        <span class="n">canvas</span><span class="o">.</span><span class="na">drawBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">,</span> <span class="n">rect</span><span class="o">,</span> <span class="n">rect</span><span class="o">,</span> <span class="n">paint</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">output</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00LVHTI9U/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00LVHTI9U&linkCode=as2&tag=droidyue-23">第一行代码:Android</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00LVHTI9U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00J4DXWDG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00J4DXWDG&linkCode=as2&tag=droidyue-23">Android编程权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00J4DXWDG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00GU73RHA/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00GU73RHA&linkCode=as2&tag=droidyue-23">Android应用UI设计模式</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00GU73RHA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[细话Java："失效"的private修饰符]]></title>
    <link href="http://droidyue.com/blog/2014/10/02/the-private-modifier-in-java/"/>
    <updated>2014-10-02T17:24:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/10/02/the-private-modifier-in-java</id>
    <content type="html"><![CDATA[<p>在Java编程中，使用private关键字修饰了某个成员，只有这个成员所在的类和这个类的方法可以使用，其他的类都无法访问到这个private成员。</p>

<p>上面描述了private修饰符的基本职能，今天来研究一下private功能失效的情况。</p>

<!--more-->


<h2>Java内部类</h2>

<p>在Java中相信很多人都用过内部类，Java允许在一个类里面定义另一个类，类里面的类就是内部类，也叫做嵌套类。一个简单的内部类实现可以如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">OuterClass</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">class</span> <span class="nc">InnerClass</span><span class="o">{</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>今天的问题和Java内部类相关，只涉及到部分和本文研究相关的内部类知识，具体关于Java内部类后续的文章会介绍。</p>

<h2>第一次失效?</h2>

<p>一个我们在编程中经常用到的场景，就是在一个内部类里面访问外部类的private成员变量或者方法，这是可以的。如下面的代码实现。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OuterClass</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">language</span> <span class="o">=</span> <span class="s">&quot;en&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">region</span> <span class="o">=</span> <span class="s">&quot;US&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">InnerClass</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">printOuterClassPrivateFields</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">fields</span> <span class="o">=</span> <span class="s">&quot;language=&quot;</span> <span class="o">+</span> <span class="n">language</span> <span class="o">+</span> <span class="s">&quot;;region=&quot;</span> <span class="o">+</span> <span class="n">region</span><span class="o">;</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">fields</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">OuterClass</span> <span class="n">outer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OuterClass</span><span class="o">();</span>
</span><span class='line'>      <span class="n">OuterClass</span><span class="o">.</span><span class="na">InnerClass</span> <span class="n">inner</span> <span class="o">=</span> <span class="n">outer</span><span class="o">.</span><span class="na">new</span> <span class="n">InnerClass</span><span class="o">();</span>
</span><span class='line'>      <span class="n">inner</span><span class="o">.</span><span class="na">printOuterClassPrivateFields</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这是为什么呢，不是private修饰的成员只能被成员所述的类才能访问么？难道private真的失效了么？</p>

<h3>编译器在捣鬼？</h3>

<p>我们使用javap命令查看一下生成的两个class文件</p>

<p> OuterClass的反编译结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">15</span><span class="o">:</span><span class="mi">30</span> <span class="n">$</span> <span class="n">javap</span> <span class="o">-</span><span class="n">c</span>  <span class="n">OuterClass</span>
</span><span class='line'><span class="n">Compiled</span> <span class="n">from</span> <span class="s">&quot;OuterClass.java&quot;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OuterClass</span> <span class="kd">extends</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="nf">OuterClass</span><span class="o">();</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">11</span><span class="o">;</span> <span class="c1">//Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">5</span><span class="o">:</span>  <span class="n">ldc</span>  <span class="err">#</span><span class="mi">13</span><span class="o">;</span> <span class="c1">//String en</span>
</span><span class='line'>   <span class="mi">7</span><span class="o">:</span>  <span class="n">putfield</span> <span class="err">#</span><span class="mi">15</span><span class="o">;</span> <span class="c1">//Field language:Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">10</span><span class="o">:</span> <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">11</span><span class="o">:</span> <span class="n">ldc</span>  <span class="err">#</span><span class="mi">17</span><span class="o">;</span> <span class="c1">//String US</span>
</span><span class='line'>   <span class="mi">13</span><span class="o">:</span> <span class="n">putfield</span> <span class="err">#</span><span class="mi">19</span><span class="o">;</span> <span class="c1">//Field region:Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">16</span><span class="o">:</span> <span class="k">return</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">[]);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="k">new</span>  <span class="err">#</span><span class="mi">1</span><span class="o">;</span> <span class="c1">//class OuterClass</span>
</span><span class='line'>   <span class="mi">3</span><span class="o">:</span>  <span class="n">dup</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">27</span><span class="o">;</span> <span class="c1">//Method &quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>   <span class="mi">7</span><span class="o">:</span>  <span class="n">astore_1</span>
</span><span class='line'>   <span class="mi">8</span><span class="o">:</span>  <span class="k">new</span>  <span class="err">#</span><span class="mi">28</span><span class="o">;</span> <span class="c1">//class OuterClass$InnerClass</span>
</span><span class='line'>   <span class="mi">11</span><span class="o">:</span> <span class="n">dup</span>
</span><span class='line'>   <span class="mi">12</span><span class="o">:</span> <span class="n">aload_1</span>
</span><span class='line'>   <span class="mi">13</span><span class="o">:</span> <span class="n">dup</span>
</span><span class='line'>   <span class="mi">14</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">30</span><span class="o">;</span> <span class="c1">//Method java/lang/Object.getClass:()Ljava/lang/Class;</span>
</span><span class='line'>   <span class="mi">17</span><span class="o">:</span> <span class="n">pop</span>
</span><span class='line'>   <span class="mi">18</span><span class="o">:</span> <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">34</span><span class="o">;</span> <span class="c1">//Method OuterClass$InnerClass.&quot;&lt;init&gt;&quot;:(LOuterClass;)V</span>
</span><span class='line'>   <span class="mi">21</span><span class="o">:</span> <span class="n">astore_2</span>
</span><span class='line'>   <span class="mi">22</span><span class="o">:</span> <span class="n">aload_2</span>
</span><span class='line'>   <span class="mi">23</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">37</span><span class="o">;</span> <span class="c1">//Method OuterClass$InnerClass.printOuterClassPrivateFields:()V</span>
</span><span class='line'>   <span class="mi">26</span><span class="o">:</span> <span class="k">return</span>
</span><span class='line'>
</span><span class='line'><span class="kd">static</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">access$0</span><span class="o">(</span><span class="n">OuterClass</span><span class="o">);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">getfield</span> <span class="err">#</span><span class="mi">15</span><span class="o">;</span> <span class="c1">//Field language:Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="n">areturn</span>
</span><span class='line'>
</span><span class='line'><span class="kd">static</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">access$1</span><span class="o">(</span><span class="n">OuterClass</span><span class="o">);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">getfield</span> <span class="err">#</span><span class="mi">19</span><span class="o">;</span> <span class="c1">//Field region:Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="n">areturn</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>咦？不对，在OuterClass中我们并没有定义这两个方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">static</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">access$0</span><span class="o">(</span><span class="n">OuterClass</span><span class="o">);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">getfield</span> <span class="err">#</span><span class="mi">15</span><span class="o">;</span> <span class="c1">//Field language:Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="n">areturn</span>
</span><span class='line'>
</span><span class='line'><span class="kd">static</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span> <span class="n">access$1</span><span class="o">(</span><span class="n">OuterClass</span><span class="o">);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">getfield</span> <span class="err">#</span><span class="mi">19</span><span class="o">;</span> <span class="c1">//Field region:Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="n">areturn</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>从给出来的注释来看，access$0返回outerClass的language属性；access$1返回outerClass的region属性。并且这两个方法都接受OuterClass的实例作为参数。这两个方法为什么生成呢，有什么作用呢？我们看一下内部类的反编译结果就知道了。</p>

<p><strong>OuterClass$InnerClass的反编译结果</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">15</span><span class="o">:</span><span class="mi">37</span> <span class="n">$</span> <span class="n">javap</span> <span class="o">-</span><span class="n">c</span> <span class="n">OuterClass</span><span class="err">\</span><span class="n">$InnerClass</span>
</span><span class='line'><span class="n">Compiled</span> <span class="n">from</span> <span class="s">&quot;OuterClass.java&quot;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OuterClass</span><span class="n">$InnerClass</span> <span class="kd">extends</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">{</span>
</span><span class='line'><span class="kd">final</span> <span class="n">OuterClass</span> <span class="k">this</span><span class="n">$0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">OuterClass$InnerClass</span><span class="o">(</span><span class="n">OuterClass</span><span class="o">);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">aload_1</span>
</span><span class='line'>   <span class="mi">2</span><span class="o">:</span>  <span class="n">putfield</span> <span class="err">#</span><span class="mi">10</span><span class="o">;</span> <span class="c1">//Field this$0:LOuterClass;</span>
</span><span class='line'>   <span class="mi">5</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">6</span><span class="o">:</span>  <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">12</span><span class="o">;</span> <span class="c1">//Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>   <span class="mi">9</span><span class="o">:</span>  <span class="k">return</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">printOuterClassPrivateFields</span><span class="o">();</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="k">new</span>  <span class="err">#</span><span class="mi">20</span><span class="o">;</span> <span class="c1">//class java/lang/StringBuilder</span>
</span><span class='line'>   <span class="mi">3</span><span class="o">:</span>  <span class="n">dup</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="n">ldc</span>  <span class="err">#</span><span class="mi">22</span><span class="o">;</span> <span class="c1">//String language=</span>
</span><span class='line'>   <span class="mi">6</span><span class="o">:</span>  <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">24</span><span class="o">;</span> <span class="c1">//Method java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:(Ljava/lang/String;)V</span>
</span><span class='line'>   <span class="mi">9</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">10</span><span class="o">:</span> <span class="n">getfield</span> <span class="err">#</span><span class="mi">10</span><span class="o">;</span> <span class="c1">//Field this$0:LOuterClass;</span>
</span><span class='line'>   <span class="mi">13</span><span class="o">:</span> <span class="n">invokestatic</span> <span class="err">#</span><span class="mi">27</span><span class="o">;</span> <span class="c1">//Method OuterClass.access$0:(LOuterClass;)Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">16</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">33</span><span class="o">;</span> <span class="c1">//Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>   <span class="mi">19</span><span class="o">:</span> <span class="n">ldc</span>  <span class="err">#</span><span class="mi">37</span><span class="o">;</span> <span class="c1">//String ;region=</span>
</span><span class='line'>   <span class="mi">21</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">33</span><span class="o">;</span> <span class="c1">//Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>   <span class="mi">24</span><span class="o">:</span> <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">25</span><span class="o">:</span> <span class="n">getfield</span> <span class="err">#</span><span class="mi">10</span><span class="o">;</span> <span class="c1">//Field this$0:LOuterClass;</span>
</span><span class='line'>   <span class="mi">28</span><span class="o">:</span> <span class="n">invokestatic</span> <span class="err">#</span><span class="mi">39</span><span class="o">;</span> <span class="c1">//Method OuterClass.access$1:(LOuterClass;)Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">31</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">33</span><span class="o">;</span> <span class="c1">//Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>   <span class="mi">34</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">42</span><span class="o">;</span> <span class="c1">//Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">37</span><span class="o">:</span> <span class="n">astore_1</span>
</span><span class='line'>   <span class="mi">38</span><span class="o">:</span> <span class="n">getstatic</span>    <span class="err">#</span><span class="mi">46</span><span class="o">;</span> <span class="c1">//Field java/lang/System.out:Ljava/io/PrintStream;</span>
</span><span class='line'>   <span class="mi">41</span><span class="o">:</span> <span class="n">aload_1</span>
</span><span class='line'>   <span class="mi">42</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">52</span><span class="o">;</span> <span class="c1">//Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
</span><span class='line'>   <span class="mi">45</span><span class="o">:</span> <span class="k">return</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>下面代码调用access$0的代码,其目的是得到OuterClass的language 私有属性。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">13</span><span class="o">:</span>   <span class="n">invokestatic</span> <span class="err">#</span><span class="mi">27</span><span class="o">;</span> <span class="c1">//Method OuterClass.access$0:(LOuterClass;)Ljava/lang/String;</span>
</span></code></pre></td></tr></table></div></figure>


<p>下面代码调用了access$1的代码，其目的是得到OutherClass的region 私有属性。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">28</span><span class="o">:</span>   <span class="n">invokestatic</span> <span class="err">#</span><span class="mi">39</span><span class="o">;</span> <span class="c1">//Method OuterClass.access$1:(LOuterClass;)Ljava/lang/String;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意：在内部类构造的时候，会将外部类的引用传递进来，并且作为内部类的一个属性，所以内部类会持有一个其外部类的引用。</strong><br/>
this$0就是内部类持有的外部类引用，通过构造方法传递引用并赋值。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">final</span> <span class="n">OuterClass</span> <span class="k">this</span><span class="n">$0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">OuterClass$InnerClass</span><span class="o">(</span><span class="n">OuterClass</span><span class="o">);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">aload_1</span>
</span><span class='line'>   <span class="mi">2</span><span class="o">:</span>  <span class="n">putfield</span> <span class="err">#</span><span class="mi">10</span><span class="o">;</span> <span class="c1">//Field this$0:LOuterClass;</span>
</span><span class='line'>   <span class="mi">5</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">6</span><span class="o">:</span>  <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">12</span><span class="o">;</span> <span class="c1">//Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>   <span class="mi">9</span><span class="o">:</span>  <span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>


<h3>小结</h3>

<p>这部分private看上去失效可，实际上并没有失效，因为当内部类调用外部类的私有属性时，其真正的执行是调用了编译器生成的属性的静态方法（即acess$0,access$1等）来获取这些属性值。这一切都是编译器的特殊处理。</p>

<h2>这次也失效？</h2>

<p>如果说上面的写法很常用，那么这样的写法是不是很少接触，但是却可以运行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AnotherOuterClass</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">InnerClass</span> <span class="n">inner</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AnotherOuterClass</span><span class="o">().</span><span class="na">new</span> <span class="n">InnerClass</span><span class="o">();</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;InnerClass Filed = &quot;</span> <span class="o">+</span> <span class="n">inner</span><span class="o">.</span><span class="na">x</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">class</span> <span class="nc">InnerClass</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>和上面一样，使用javap反编译看一下。不过这次我们先看一下InnerClass的结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">16</span><span class="o">:</span><span class="mi">03</span> <span class="n">$</span> <span class="n">javap</span> <span class="o">-</span><span class="n">c</span> <span class="n">AnotherOuterClass</span><span class="err">\</span><span class="n">$InnerClass</span>
</span><span class='line'><span class="n">Compiled</span> <span class="n">from</span> <span class="s">&quot;AnotherOuterClass.java&quot;</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">AnotherOuterClass</span><span class="n">$InnerClass</span> <span class="kd">extends</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">{</span>
</span><span class='line'><span class="kd">final</span> <span class="n">AnotherOuterClass</span> <span class="k">this</span><span class="n">$0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">AnotherOuterClass$InnerClass</span><span class="o">(</span><span class="n">AnotherOuterClass</span><span class="o">);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">aload_1</span>
</span><span class='line'>   <span class="mi">2</span><span class="o">:</span>  <span class="n">putfield</span> <span class="err">#</span><span class="mi">12</span><span class="o">;</span> <span class="c1">//Field this$0:LAnotherOuterClass;</span>
</span><span class='line'>   <span class="mi">5</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">6</span><span class="o">:</span>  <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">14</span><span class="o">;</span> <span class="c1">//Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>   <span class="mi">9</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">10</span><span class="o">:</span> <span class="n">bipush</span>   <span class="mi">10</span>
</span><span class='line'>   <span class="mi">12</span><span class="o">:</span> <span class="n">putfield</span> <span class="err">#</span><span class="mi">17</span><span class="o">;</span> <span class="c1">//Field x:I</span>
</span><span class='line'>   <span class="mi">15</span><span class="o">:</span> <span class="k">return</span>
</span><span class='line'>
</span><span class='line'><span class="kd">static</span> <span class="kt">int</span> <span class="n">access$0</span><span class="o">(</span><span class="n">AnotherOuterClass$InnerClass</span><span class="o">);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">getfield</span> <span class="err">#</span><span class="mi">17</span><span class="o">;</span> <span class="c1">//Field x:I</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="n">ireturn</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>又出现了，编译器又自动生成了一个获取私有属性的后门方法access$0一次来获取x的值。</p>

<p>AnotherOuterClass.class的反编译结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">16</span><span class="o">:</span><span class="mi">08</span> <span class="n">$</span> <span class="n">javap</span> <span class="o">-</span><span class="n">c</span> <span class="n">AnotherOuterClass</span>
</span><span class='line'><span class="n">Compiled</span> <span class="n">from</span> <span class="s">&quot;AnotherOuterClass.java&quot;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AnotherOuterClass</span> <span class="kd">extends</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Object</span><span class="o">{</span>
</span><span class='line'><span class="kd">public</span> <span class="nf">AnotherOuterClass</span><span class="o">();</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="n">aload_0</span>
</span><span class='line'>   <span class="mi">1</span><span class="o">:</span>  <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">8</span><span class="o">;</span> <span class="c1">//Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="k">return</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">[]);</span>
</span><span class='line'>  <span class="nl">Code:</span>
</span><span class='line'>   <span class="mi">0</span><span class="o">:</span>  <span class="k">new</span>  <span class="err">#</span><span class="mi">16</span><span class="o">;</span> <span class="c1">//class AnotherOuterClass$InnerClass</span>
</span><span class='line'>   <span class="mi">3</span><span class="o">:</span>  <span class="n">dup</span>
</span><span class='line'>   <span class="mi">4</span><span class="o">:</span>  <span class="k">new</span>  <span class="err">#</span><span class="mi">1</span><span class="o">;</span> <span class="c1">//class AnotherOuterClass</span>
</span><span class='line'>   <span class="mi">7</span><span class="o">:</span>  <span class="n">dup</span>
</span><span class='line'>   <span class="mi">8</span><span class="o">:</span>  <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">18</span><span class="o">;</span> <span class="c1">//Method &quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>   <span class="mi">11</span><span class="o">:</span> <span class="n">dup</span>
</span><span class='line'>   <span class="mi">12</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">19</span><span class="o">;</span> <span class="c1">//Method java/lang/Object.getClass:()Ljava/lang/Class;</span>
</span><span class='line'>   <span class="mi">15</span><span class="o">:</span> <span class="n">pop</span>
</span><span class='line'>   <span class="mi">16</span><span class="o">:</span> <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">23</span><span class="o">;</span> <span class="c1">//Method AnotherOuterClass$InnerClass.&quot;&lt;init&gt;&quot;:(LAnotherOuterClass;)V</span>
</span><span class='line'>   <span class="mi">19</span><span class="o">:</span> <span class="n">astore_1</span>
</span><span class='line'>   <span class="mi">20</span><span class="o">:</span> <span class="n">getstatic</span>    <span class="err">#</span><span class="mi">26</span><span class="o">;</span> <span class="c1">//Field java/lang/System.out:Ljava/io/PrintStream;</span>
</span><span class='line'>   <span class="mi">23</span><span class="o">:</span> <span class="k">new</span>  <span class="err">#</span><span class="mi">32</span><span class="o">;</span> <span class="c1">//class java/lang/StringBuilder</span>
</span><span class='line'>   <span class="mi">26</span><span class="o">:</span> <span class="n">dup</span>
</span><span class='line'>   <span class="mi">27</span><span class="o">:</span> <span class="n">ldc</span>  <span class="err">#</span><span class="mi">34</span><span class="o">;</span> <span class="c1">//String InnerClass Filed =</span>
</span><span class='line'>   <span class="mi">29</span><span class="o">:</span> <span class="n">invokespecial</span>    <span class="err">#</span><span class="mi">36</span><span class="o">;</span> <span class="c1">//Method java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:(Ljava/lang/String;)V</span>
</span><span class='line'>   <span class="mi">32</span><span class="o">:</span> <span class="n">aload_1</span>
</span><span class='line'>   <span class="mi">33</span><span class="o">:</span> <span class="n">invokestatic</span> <span class="err">#</span><span class="mi">39</span><span class="o">;</span> <span class="c1">//Method AnotherOuterClass$InnerClass.access$0:(LAnotherOuterClass$InnerClass;)I</span>
</span><span class='line'>   <span class="mi">36</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">43</span><span class="o">;</span> <span class="c1">//Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;</span>
</span><span class='line'>   <span class="mi">39</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">47</span><span class="o">;</span> <span class="c1">//Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span>
</span><span class='line'>   <span class="mi">42</span><span class="o">:</span> <span class="n">invokevirtual</span>    <span class="err">#</span><span class="mi">51</span><span class="o">;</span> <span class="c1">//Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
</span><span class='line'>   <span class="mi">45</span><span class="o">:</span> <span class="k">return</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中这句调用就是外部类通过内部类的实例获取私有属性x的操作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">33</span><span class="o">:</span>   <span class="n">invokestatic</span> <span class="err">#</span><span class="mi">39</span><span class="o">;</span> <span class="c1">//Method AnotherOuterClass$InnerClass.access$0:(LAnotherOuterClass$InnerClass;)I</span>
</span></code></pre></td></tr></table></div></figure>


<h3>再来个总结</h3>

<p>其中<a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-6.html#jls-6.6.1">java官方文档</a> 有这样一句话</p>

<blockquote><p>if the member or constructor is declared private, then access is permitted if and only if it occurs within the body of the top level class (§7.6) that encloses the declaration of the member or constructor.</p></blockquote>

<p>意思是 如果（内部类的）成员和构造方法设定成了私有修饰符，当且仅当其外部类访问时是允许的。</p>

<h2>如何让内部类私有成员不被外部访问</h2>

<p>相信看完上面两部分，你会觉得，内部类的私有成员想不被外部类访问都很困难吧，谁让编译器“爱管闲事”呢，其实也是可以做到的。那就是使用匿名内部类。</p>

<p>由于mRunnable对象的类型为Runnable，而不是匿名内部类的类型（我们无法正常拿到），而Runanble中没有x这个属性，所以mRunnable.x是不被允许的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PrivateToOuter</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Runnable</span> <span class="n">mRunnable</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Runnable</span><span class="o">(){</span>
</span><span class='line'>      <span class="kd">private</span> <span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">10</span><span class="o">;</span>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
</span><span class='line'>      <span class="n">PrivateToOuter</span> <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PrivateToOuter</span><span class="o">();</span>
</span><span class='line'>      <span class="c1">//System.out.println(&quot;anonymous class private filed= &quot;+ p.mRunnable.x); //not allowed</span>
</span><span class='line'>      <span class="n">p</span><span class="o">.</span><span class="na">mRunnable</span><span class="o">.</span><span class="na">run</span><span class="o">();</span> <span class="c1">// allowed</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>最后总结</h2>

<ul>
<li>在本文中，private表面上看上去失效了，但实际上是没有的，而是在调用时通过间接的方法来获取私有的属性。</li>
<li>Java的内部类构造时持有对外部类的应用，C++不会，这一点和C++不一样。</li>
</ul>


<h3>深入Java细节的书籍</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0011F7WU4/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F7WU4&linkCode=as2&tag=droidyue-23">Java编程思想</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011F7WU4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B001PTGR52/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B001PTGR52&linkCode=as2&tag=droidyue-23">Sun 公司核心技术丛书:Effective Java中文版</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B001PTGR52" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00D2ID4PK/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00D2ID4PK&linkCode=as2&tag=droidyue-23">深入理解Java虚拟机:JVM高级特性与最佳实践</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00D2ID4PK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebView处理网页位置请求]]></title>
    <link href="http://droidyue.com/blog/2014/10/01/handle-geolocation-request-in-webview/"/>
    <updated>2014-10-01T17:23:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/10/01/handle-geolocation-request-in-webview</id>
    <content type="html"><![CDATA[<p>随着移动设备的激增，LBS（Location Based Service）已然成为趋势，其最关键的还是获取设备的位置信息。native代码获取位置信息轻轻松松可以搞定，实际上网页获取位置信息也不是那么困难。</p>

<p>在HTML5中，提供了一套定位用户信息的接口，当然这个位置信息是通过客户端，准确说是浏览器获取的。</p>

<!--more-->


<p>注意，位置信息属于个人隐私的范围，只有经过用户同意之后才能获取到信息。</p>

<h2>网页如何实现请求位置信息</h2>

<p>使用getCurrentPosition()方法来请求位置信息。<br/>
下面是一个很简单的示例，来展示用户位置信息的经度和纬度。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>    <span class="nt">&lt;body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;demo&quot;</span><span class="nt">&gt;</span>Click the button to get your coordinates:<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">&quot;getLocation()&quot;</span><span class="nt">&gt;</span>Try It<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;script&gt;</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;demo&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">function</span> <span class="nx">getLocation</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">console</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s2">&quot;getLocation working&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">geolocation</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">navigator</span><span class="p">.</span><span class="nx">geolocation</span><span class="p">.</span><span class="nx">getCurrentPosition</span><span class="p">(</span><span class="nx">showPosition</span><span class="p">,</span><span class="nx">showError</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">x</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;Geolocation is not supported by this browser.&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">function</span> <span class="nx">showPosition</span><span class="p">(</span><span class="nx">position</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">x</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;Latitude: &quot;</span> <span class="o">+</span> <span class="nx">position</span><span class="p">.</span><span class="nx">coords</span><span class="p">.</span><span class="nx">latitude</span> <span class="o">+</span> <span class="s2">&quot;&lt;br&gt;Longitude: &quot;</span> <span class="o">+</span> <span class="nx">position</span><span class="p">.</span><span class="nx">coords</span><span class="p">.</span><span class="nx">longitude</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="kd">function</span> <span class="nx">showError</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">switch</span><span class="p">(</span><span class="nx">error</span><span class="p">.</span><span class="nx">code</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">case</span> <span class="nx">error</span><span class="p">.</span><span class="nx">PERMISSION_DENIED</span><span class="o">:</span>
</span><span class='line'>              <span class="nx">x</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;User denied the request for Geolocation.&quot;</span>
</span><span class='line'>              <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="k">case</span> <span class="nx">error</span><span class="p">.</span><span class="nx">POSITION_UNAVAILABLE</span><span class="o">:</span>
</span><span class='line'>              <span class="nx">x</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;Location information is unavailable.&quot;</span>
</span><span class='line'>              <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="k">case</span> <span class="nx">error</span><span class="p">.</span><span class="nx">TIMEOUT</span><span class="o">:</span>
</span><span class='line'>              <span class="nx">x</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;The request to get user location timed out.&quot;</span>
</span><span class='line'>              <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="k">case</span> <span class="nx">error</span><span class="p">.</span><span class="nx">UNKNOWN_ERROR</span><span class="o">:</span>
</span><span class='line'>              <span class="nx">x</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&quot;An unknown error occurred.&quot;</span>
</span><span class='line'>              <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>    <span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>示例阐述</h3>

<ul>
<li> 检测getLocation方法是否可用</li>
<li> 如果可以调用getCurrentPosition方法，否则提示浏览器不支持</li>
<li> 如果getCurrentPosition获取信息成功，返回一个坐标系的对象，并将这个对象作为参数传递到showPosition方法,如果失败，调用showError方法，并将错误码作为showError方法的参数。</li>
<li> showPosition方法展示经度和纬度信息</li>
<li> showError方法用来处理请求错误</li>
</ul>


<p>上述部分参考自<a href="http://www.w3schools.com/HTML/html5_geolocation.asp">html5_geolocation w3cschool</a>，更多高级操作请访问左侧链接。</p>

<h2>WebView如何返回给网页</h2>

<h3>大致操作步骤</h3>

<ul>
<li>在manifest中申请android.permission.ACCESS_FINE_LOCATION 或 android.permission.ACCESS_COARSE_LOCATION 权限。两者都有更好。</li>
<li>设置webivew开启javascript功能，地理定位功能，设置物理定位数据库路径</li>
<li>在onGeolocationPermissionsShowPrompt处理物理位置请求，常用的是提示用户，让用户决定是否允许。</li>
</ul>


<h3>使用的API</h3>

<ul>
<li>android.permission.ACCESS_FINE_LOCATION 通过GPS，基站，Wifi等获取<strong>精确的</strong>位置信息。</li>
<li>android.permission.ACCESS_COARSE_LOCATION 通过基站，Wifi等获取<strong>错略的</strong>位置信息。</li>
<li>onGeolocationPermissionsShowPrompt 位置信息请求回调，通常在这里弹出选择是否赋予权限的对话框</li>
<li>GeolocationPermissions.Callback.invoke(String origin, boolean allow, boolean remember)决定是否真正提供给网页信息，可根据用户的选择结果选择处理。

<h3>实现代码</h3></li>
</ul>


<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">final</span> <span class="n">WebView</span> <span class="n">webView</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WebView</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'><span class="n">addContentView</span><span class="o">(</span><span class="n">webView</span><span class="o">,</span>  <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">,</span> <span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">)</span>  <span class="o">);</span>
</span><span class='line'><span class="n">WebSettings</span> <span class="n">settings</span> <span class="o">=</span> <span class="n">webView</span><span class="o">.</span><span class="na">getSettings</span><span class="o">();</span>
</span><span class='line'><span class="n">settings</span><span class="o">.</span><span class="na">setJavaScriptEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'><span class="n">settings</span><span class="o">.</span><span class="na">setGeolocationEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'><span class="n">settings</span><span class="o">.</span><span class="na">setGeolocationDatabasePath</span><span class="o">(</span><span class="n">getFilesDir</span><span class="o">().</span><span class="na">getPath</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'><span class="n">webView</span><span class="o">.</span><span class="na">setWebChromeClient</span><span class="o">(</span><span class="k">new</span> <span class="n">WebChromeClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onGeolocationPermissionsHidePrompt</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onGeolocationPermissionsHidePrompt</span><span class="o">();</span>
</span><span class='line'>      <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;onGeolocationPermissionsHidePrompt&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onGeolocationPermissionsShowPrompt</span><span class="o">(</span><span class="kd">final</span> <span class="n">String</span> <span class="n">origin</span><span class="o">,</span>
</span><span class='line'>                  <span class="kd">final</span> <span class="n">Callback</span> <span class="n">callback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">);</span>
</span><span class='line'>      <span class="n">builder</span><span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&quot;Allow to access location information?&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">OnClickListener</span> <span class="n">dialogButtonOnClickListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">DialogInterface</span> <span class="n">dialog</span><span class="o">,</span> <span class="kt">int</span> <span class="n">clickedButton</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">DialogInterface</span><span class="o">.</span><span class="na">BUTTON_POSITIVE</span> <span class="o">==</span> <span class="n">clickedButton</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">callback</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">origin</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">DialogInterface</span><span class="o">.</span><span class="na">BUTTON_NEGATIVE</span> <span class="o">==</span> <span class="n">clickedButton</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">callback</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">origin</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">};</span>
</span><span class='line'>      <span class="n">builder</span><span class="o">.</span><span class="na">setPositiveButton</span><span class="o">(</span><span class="s">&quot;Allow&quot;</span><span class="o">,</span> <span class="n">dialogButtonOnClickListener</span><span class="o">);</span>
</span><span class='line'>      <span class="n">builder</span><span class="o">.</span><span class="na">setNegativeButton</span><span class="o">(</span><span class="s">&quot;Deny&quot;</span><span class="o">,</span> <span class="n">dialogButtonOnClickListener</span><span class="o">);</span>
</span><span class='line'>      <span class="n">builder</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onGeolocationPermissionsShowPrompt</span><span class="o">(</span><span class="n">origin</span><span class="o">,</span> <span class="n">callback</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;onGeolocationPermissionsShowPrompt&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span><span class='line'><span class="n">webView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="s">&quot;file:///android_asset/geolocation.html&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>疑问解答</h2>

<h3>I/SqliteDatabaseCpp(21863): sqlite returned: error code = 14</h3>

<p>原因是你没有设置setGeolocationDatabasePath，按照上面例子设置即可。</p>

<h3>点击之后没有任何变化</h3>

<ul>
<li>检查代码是否按照上面一样，是否有错误。</li>
<li>在第一次请求的是否，需要的反应时间比较长。</li>
</ul>


<h3>检测定位服务是否可用</h3>

<p>当GPS_PROVIDER和NETWORK_PROVIDER有一者可用，定位服务就可以用，当两者都不能用时，即定位服务不可以用。<br/>
注意PASSIVE_PROVIDER不能作为定位服务可用的标志。因为这个provider只会返回其他Provider提供的位置信息，自己无法定位。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">testGeolocationOK</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">LocationManager</span> <span class="n">manager</span> <span class="o">=</span> <span class="o">(</span><span class="n">LocationManager</span><span class="o">)</span><span class="n">getSystemService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">LOCATION_SERVICE</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">gpsProviderOK</span> <span class="o">=</span> <span class="n">manager</span><span class="o">.</span><span class="na">isProviderEnabled</span><span class="o">(</span><span class="n">LocationManager</span><span class="o">.</span><span class="na">GPS_PROVIDER</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">networkProviderOK</span> <span class="o">=</span> <span class="n">manager</span><span class="o">.</span><span class="na">isProviderEnabled</span><span class="o">(</span><span class="n">LocationManager</span><span class="o">.</span><span class="na">NETWORK_PROVIDER</span><span class="o">);</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">geolocationOK</span> <span class="o">=</span> <span class="n">gpsProviderOK</span> <span class="o">&amp;&amp;</span> <span class="n">networkProviderOK</span><span class="o">;</span>
</span><span class='line'>      <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;gpsProviderOK = &quot;</span> <span class="o">+</span> <span class="n">gpsProviderOK</span> <span class="o">+</span> <span class="s">&quot;; networkProviderOK = &quot;</span> <span class="o">+</span> <span class="n">networkProviderOK</span> <span class="o">+</span> <span class="s">&quot;; geoLocationOK=&quot;</span> <span class="o">+</span> <span class="n">geolocationOK</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>跳转到位置设置界面</h3>

<p>我们只需要发送一个简单的隐式intent即可启动位置设置界面</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">Settings</span><span class="o">.</span><span class="na">ACTION_LOCATION_SOURCE_SETTINGS</span><span class="o">);</span>
</span><span class='line'><span class="n">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>示例代码</h2>

<p><a href="http://pan.baidu.com/s/1gdrHIin">百度云盘</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B007RSKTXQ/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B007RSKTXQ&linkCode=as2&tag=droidyue-23">程序员装B必备：黑轴机械键盘</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B007RSKTXQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00E7XVAZA/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00E7XVAZA&linkCode=as2&tag=droidyue-23">位置信息服务(LBS)关键技术及应用</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00E7XVAZA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00KHG1006/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KHG1006&linkCode=as2&tag=droidyue-23">基于语义Web的LBS服务架构及其服务发现算法研究</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00KHG1006" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[实时预览Markdown利器]]></title>
    <link href="http://droidyue.com/blog/2014/10/01/great-markdown-viewer-as-a-chrome-extension/"/>
    <updated>2014-10-01T09:21:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/10/01/great-markdown-viewer-as-a-chrome-extension</id>
    <content type="html"><![CDATA[<p>使用MBP15寸有点高不成低不就，接显示器分辨率下降（浪费Retina屏），不接显示器屏幕不是很大。</p>

<p>常用的markdown编辑器设置为左侧编辑器（Editor），右边实时查看器（Viewer）。受制于屏幕尺寸，editor和viewer都显示不完整，于是尝试找一个浏览器渲染markdown文件的插件。于是就发现了markdown-reader。</p>

<!--more-->


<h2>功能点</h2>

<ul>
<li>支持读取markdown文件（http,https,file等协议）</li>
<li>文件变化自动加载刷新</li>
<li>代码高亮</li>
<li>显示内容边框</li>
<li>支持table扩展</li>
</ul>


<h2>示例效果</h2>

<p><img src="http://droidyueimg.qiniudn.com/markdown_view_sample.png" title="markdown reader" ></p>

<h2>使用心得</h2>

<p>很不错的一款插件，支持file协议，检测到文件变化很迅速，目测比百度网盘还要快，排版很棒。</p>

<h2>地址</h2>

<ul>
<li><a href="https://chrome.google.com/webstore/detail/markdown-reader/gpoigdifkoadgajcincpilkjmejcaanc">Chrome Store 地址</a></li>
<li><a href="https://github.com/yaniswang/markdownReader">Github开源仓库</a></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0051EEQWS/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0051EEQWS&linkCode=as2&tag=droidyue-23">别告诉我你会记笔记</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0051EEQWS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B006BPPKZ8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B006BPPKZ8&linkCode=as2&tag=droidyue-23">超级整理术:工作效率是整理出来的</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B006BPPKZ8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B004O9F71K/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B004O9F71K&linkCode=as2&tag=droidyue-23">番茄工作法图解:简单易行的时间管理方法</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B004O9F71K" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用WebView实现网页的i18n]]></title>
    <link href="http://droidyue.com/blog/2014/09/30/i18n-web-page-using-webview-in-android/"/>
    <updated>2014-09-30T21:44:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/30/i18n-web-page-using-webview-in-android</id>
    <content type="html"><![CDATA[<p>软件如果想在全球获得更多的用户，国际化与本地化（internationalization and localization 简称：i18n 和L10n）是非常必要的。本文将介绍一个很geeky的方法来利用webview实现html的i18n。</p>

<!--more-->


<h2>基本概念</h2>

<p>国际化是指在设计软件，将软件与特定语言及地区脱钩的过程。当软件被移植到不同的语言及地区时，软件本身不用做内部工程上的改变或修正。本地化则是指当移植软件时，加上与特定区域设置有关的信息和翻译文件的过程。</p>

<p>国际化和本地化之间的区别虽然微妙，但却很重要。国际化意味着产品有适用于任何地方的“潜力”；本地化则是为了更适合于“特定”地方的使用，而另外增添的特色。用一项产品来说，国际化只需做一次，但本地化则要针对不同的区域各做一次。 这两者之间是互补的，并且两者合起来才能让一个系统适用于各地。</p>

<p>上述摘自<a href="http://zh.wikipedia.org/wiki/%E5%9B%BD%E9%99%85%E5%8C%96%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%8C%96">维基百科 国际化与本地化</a></p>

<h2>问题</h2>

<p>如何实现网页的国际化和本地化，支持更多的语言呢？最简单的逻辑可能类似如下伪代码实现</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">isChinese</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">lable</span><span class="p">.</span><span class="nx">innerText</span> <span class="o">=</span> <span class="s2">&quot;中文&quot;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">isEnglish</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">lable</span><span class="p">.</span><span class="nx">innerText</span> <span class="o">=</span> <span class="s2">&quot;English&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是这样是很有问题的，如果增加了语言必然要修改代码代码，违背了对修改关闭的原则。所以上述并不是一种很好的方法</p>

<h2>更Hacky的实现</h2>

<p>实现思路主要是借助强大的Android系统的资源适配机制（基于设备设备的信息Locale等匹配最合适的资源）。貌似这个是Chrome中网页实现i18n的逻辑。实现步骤主要如下</p>

<ul>
<li>Android程序提供必要多个Locale的资源</li>
<li>将网页需要的文字资源组成JSON交换格式</li>
<li>WebView注入一个变量，变量内容为上一步的JSON数据</li>
<li>网页实现读取资源，为元素设置内容</li>
<li>加载网页</li>
</ul>


<h3>提供多个Locale文字资源</h3>

<h4>values/strings.xml</h4>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;resources&gt;</span>
</span><span class='line'>    <span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&quot;city_beijing&quot;</span><span class="nt">&gt;</span>Beijing<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>    <span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&quot;country_china&quot;</span><span class="nt">&gt;</span>China<span class="nt">&lt;/string&gt;</span>
</span><span class='line'><span class="nt">&lt;/resources&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>values-zh-rCN/strings.xml</h4>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;resources&gt;</span>
</span><span class='line'>    <span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&quot;city_beijing&quot;</span><span class="nt">&gt;</span>北京<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>    <span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&quot;country_china&quot;</span><span class="nt">&gt;</span>中国<span class="nt">&lt;/string&gt;</span>
</span><span class='line'><span class="nt">&lt;/resources&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>接下来的代码</h3>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">WebView</span> <span class="n">myWebView</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WebView</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'><span class="n">addContentView</span><span class="o">(</span><span class="n">myWebView</span><span class="o">,</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">,</span> <span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">));</span>
</span><span class='line'><span class="c1">//将网页需要的文字资源组成JSON交换格式</span>
</span><span class='line'><span class="n">JSONObject</span> <span class="n">jsObj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">();</span>
</span><span class='line'><span class="k">try</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">jsObj</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;country&quot;</span><span class="o">,</span> <span class="n">getString</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">string</span><span class="o">.</span><span class="na">country_china</span><span class="o">));</span>
</span><span class='line'>  <span class="n">jsObj</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;city&quot;</span><span class="o">,</span> <span class="n">getString</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">string</span><span class="o">.</span><span class="na">city_beijing</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">JSONException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">//WebView注入一个变量，变量内容为上一步的JSON数据</span>
</span><span class='line'><span class="n">String</span> <span class="n">injectString</span> <span class="o">=</span> <span class="s">&quot;var textRes = &quot;</span> <span class="o">+</span> <span class="n">jsObj</span><span class="o">;</span>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;injuectString = &quot;</span> <span class="o">+</span> <span class="n">injectString</span><span class="o">);</span>
</span><span class='line'><span class="n">WebSettings</span> <span class="n">settings</span> <span class="o">=</span> <span class="n">myWebView</span><span class="o">.</span><span class="na">getSettings</span><span class="o">();</span>
</span><span class='line'><span class="n">settings</span><span class="o">.</span><span class="na">setJavaScriptEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'><span class="n">myWebView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="s">&quot;javascript:&quot;</span> <span class="o">+</span> <span class="n">injectString</span><span class="o">);</span>
</span><span class='line'><span class="n">myWebView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="s">&quot;file:///android_asset/location.html&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>网页实现</h3>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>      <span class="nt">&lt;title&gt;</span>i18n Test<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>      <span class="nt">&lt;label</span> <span class="na">id=</span><span class="s">&quot;country&quot;</span><span class="nt">&gt;&lt;/label&gt;</span>
</span><span class='line'>      <span class="nt">&lt;lable</span> <span class="na">id=</span><span class="s">&quot;city&quot;</span><span class="nt">&gt;&lt;/lable&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;country&#39;</span><span class="p">).</span><span class="nx">innerText</span><span class="o">=</span> <span class="nx">textRes</span><span class="p">.</span><span class="nx">country</span>
</span><span class='line'>      <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;city&#39;</span><span class="p">).</span><span class="nx">innerText</span> <span class="o">=</span> <span class="nx">textRes</span><span class="p">.</span><span class="nx">city</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>结果</h3>

<ul>
<li>当系统语言为中文简体环境下网页显示<strong>中国 北京</strong></li>
<li>当系统语言为非中文简体环境下网页显示<strong>China Beijing</strong></li>
</ul>


<h3>Demo源码下载</h3>

<p><a href="http://pan.baidu.com/s/1sjwNamL">@百度网盘</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00ASIN7G8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ASIN7G8&linkCode=as2&tag=droidyue-23">这样才可以精通Android</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ASIN7G8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B002JCU2TG/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B002JCU2TG&linkCode=as2&tag=droidyue-23">瞬间之美:Web界面设计如何让用户心动</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B002JCU2TG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一脚本：js设置链接为新标签打开]]></title>
    <link href="http://droidyue.com/blog/2014/09/29/open-url-in-new-tab-using-javascript/"/>
    <updated>2014-09-29T21:59:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/29/open-url-in-new-tab-using-javascript</id>
    <content type="html"><![CDATA[<p>由于Markdown在编辑Octopress文章的链接时无法指定打开方式，所以很多时候需要使用html写。后来想了一下，为什么不通过javascript把超链接的打开方式默认成新标签实现呢。</p>

<!--more-->


<p>JQuery中提供了一个DOM元素插入事件 DOMNodeInserted ，我们可以通过监听这个事件，对没有target属性值的a标签设置其target为_blank。这样就实现了默认新标签打开了。</p>

<h3>脚本代码</h3>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/*To use the  DOMNodeInserted event listening, jquery is required*/</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;DOMNodeInserted&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;a[href^=&quot;http&quot;]&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span>
</span><span class='line'>        <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">,</span> <span class="s1">&#39;_blank&#39;</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>示例</h3>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;//code.jquery.com/jquery-1.11.0.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;https://rawgit.com/androidyue/weekly-scripts/master/javascript/target_blank_link.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;body&gt;</span>
</span><span class='line'>          <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://droidyue.com&quot;</span><span class="nt">&gt;</span>droidyue<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上述示例在浏览器加载之后，就会对a标签添加target=&ldquo;_blank&#8221;属性。</p>

<p><a href="https://github.com/androidyue/weekly-scripts/blob/master/javascript/target_blank_link.js">每周一脚本@Github</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0089TDFNS/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0089TDFNS&linkCode=as2&tag=droidyue-23">锋利的jQuery</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0089TDFNS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00BQ7RMW0/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00BQ7RMW0&linkCode=as2&tag=droidyue-23">编写可维护的JavaScript</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00BQ7RMW0" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00B14IGUK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00B14IGUK&linkCode=as2&tag=droidyue-23">安全技术大系:Web前端黑客技术揭秘</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00B14IGUK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Refused to execute script from because its MIME type (text/plain) is not executable, and strict MIME type checking is enabled]]></title>
    <link href="http://droidyue.com/blog/2014/09/27/refused-to-execute-script-from-because-its-mime-type-text-slash-plain-is-not-executable-and-strict-mime-type-checking-is-enabled/"/>
    <updated>2014-09-27T17:08:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/27/refused-to-execute-script-from-because-its-mime-type-text-slash-plain-is-not-executable-and-strict-mime-type-checking-is-enabled</id>
    <content type="html"><![CDATA[<p>今天又与这个问题相遇了,Orz,还是研究一下解决方法和出现原因吧。<br/>
刚刚在github上传了一个js文件，想让这个文件被其他网页引用，于是贴出了这个文件的raw版本的地址。但是却就遇到了这样的问题。</p>

<!--more-->


<p>这就是出现错误的代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://droidyue-tools.qiniudn.com/jquery.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://raw.githubusercontent.com/androidyue/weekly-scripts/master/javascript/target_blank_link.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://droidyue.com&quot;</span><span class="nt">&gt;</span>droidyue.com<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>解决方法</h2>

<p>将上面的链接中的<font color="red">raw.githubusercontent.com</font>换成<font color="red">rawgit.com</font>即可，此例中的网址最终为 <b><a href="https://rawgit.com/androidyue/weekly-scripts/master/javascript/target_blank_link.js">https://rawgit.com/androidyue/weekly-scripts/master/javascript/target_blank_link.js</a></b></p>

<h2>原因</h2>

<p>因为raw.githubusercontent.com在Response中设置了<strong>X-Content-Type-Options:nosniff</strong>，告诉浏览器强制检查资源的MIME，进行加载。</p>

<p>下面就是未处理的HTTP Response</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>Date: Sat, 27 Sep 2014 09:27:12 GMT
</span><span class='line'>Server: Apache
</span><span class='line'>Access-Control-Allow-Origin: https://render.githubusercontent.com
</span><span class='line'>Content-Security-Policy: default-src <span class="s1">&#39;none&#39;</span>
</span><span class='line'>X-XSS-Protection: 1; <span class="nv">mode</span><span class="o">=</span>block
</span><span class='line'>X-Frame-Options: deny
</span><span class='line'>X-Content-Type-Options: nosniff
</span><span class='line'>Strict-Transport-Security: max-age<span class="o">=</span>31536000
</span><span class='line'>ETag: <span class="s2">&quot;4f10b14e4a81a195976ea05787287a019c8bcf6f&quot;</span>
</span><span class='line'>Content-Type: text/plain; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Cache-Control: max-age<span class="o">=</span>300
</span><span class='line'>Content-Encoding: gzip
</span><span class='line'>Content-Length: 204
</span><span class='line'>Accept-Ranges: bytes
</span><span class='line'>Via: 1.1 varnish
</span><span class='line'>X-Served-By: cache-lax1426-LAX
</span><span class='line'>X-Cache: HIT
</span><span class='line'>X-Cache-Hits: 1
</span><span class='line'>Vary: Authorization,Accept-Encoding
</span><span class='line'>Expires: Sat, 27 Sep 2014 09:32:12 GMT
</span><span class='line'>Source-Age: 44
</span><span class='line'>Keep-Alive: <span class="nv">timeout</span><span class="o">=</span>10, <span class="nv">max</span><span class="o">=</span>50
</span><span class='line'>Connection: Keep-Alive
</span></code></pre></td></tr></table></div></figure>


<h3>X-Content-Type-Options:nosniff 是神马</h3>

<p>  1 如果服务器发送响应头 &ldquo;X-Content-Type-Options: nosniff&#8221;，则 script 和 styleSheet 元素会拒绝包含错误的 MIME 类型的响应。这是一种安全功能，有助于防止基于 MIME类型混淆的攻击。</p>

<p>  2 服务器发送含有 &ldquo;X-Content-Type-Options: nosniff&rdquo; 标头的响应时，此更改会影响浏览器的行为。</p>

<p>  3 如果通过 styleSheet 参考检索到的响应中接收到 &ldquo;nosniff&rdquo; 指令，则 Windows Internet Explorer 不会加载“stylesheet”文件，除非 MIME 类型匹配 &ldquo;text/css&#8221;。</p>

<p>  4 如果通过 script 参考检索到的响应中接收到 &ldquo;nosniff&rdquo; 指令，则 Internet Explorer 不会加载“script”文件，除非 MIME 类型匹配以下值之一：</p>

<ul>
<li>&ldquo;application/ecmascript&rdquo;</li>
<li>&ldquo;application/javascript&rdquo;</li>
<li>&ldquo;application/x-javascript&rdquo;</li>
<li>&ldquo;text/ecmascript&rdquo;</li>
<li>&ldquo;text/javascript&rdquo;</li>
<li>&ldquo;text/jscript&rdquo;</li>
<li>&ldquo;text/x-javascript&rdquo;</li>
<li>&ldquo;text/vbs&rdquo;</li>
<li>&ldquo;text/vbscript&rdquo;</li>
</ul>


<p>该部分参考<a href="http://msdn.microsoft.com/zh-cn/library/ie/gg622941(v=vs.85).aspx">减少 MIME 类型的安全风险</a></p>

<h3>进阶书籍</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00GOM5IL4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00GOM5IL4&linkCode=as2&tag=droidyue-23">深入浅出Node.js</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00GOM5IL4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0097CON2S/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0097CON2S&linkCode=as2&tag=droidyue-23">JavaScript语言精粹</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0097CON2S" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00BQ7RMW0/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00BQ7RMW0&linkCode=as2&tag=droidyue-23">编写可维护的JavaScript</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00BQ7RMW0" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MissingFormatArgumentException: Format specifier 's']]></title>
    <link href="http://droidyue.com/blog/2014/09/27/missingformatargumentexception-format-specifier-s/"/>
    <updated>2014-09-27T10:09:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/27/missingformatargumentexception-format-specifier-s</id>
    <content type="html"><![CDATA[<p>贴出一个简单的异常，分析一下原因，以及推荐一个相对好一些的替代方法。
如下，如果我们进行字符串格式化提供的值的数量少于字符串格式符（%s）的数量，就会抛出MissingFormatArgumentException异常。</p>

<!--more-->


<h3>错误代码</h3>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">format</span> <span class="o">=</span> <span class="s">&quot;%s/%s&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">format</span><span class="o">,</span> <span class="s">&quot;a&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>崩溃信息</h3>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Exception</span> <span class="n">in</span> <span class="n">thread</span> <span class="s">&quot;main&quot;</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">MissingFormatArgumentException</span><span class="o">:</span> <span class="n">Format</span> <span class="n">specifier</span> <span class="sc">&#39;s&#39;</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Formatter</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">Unknown</span> <span class="n">Source</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Formatter</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">Unknown</span> <span class="n">Source</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">Unknown</span> <span class="n">Source</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">Concatenation</span><span class="o">.</span><span class="na">testFormat</span><span class="o">(</span><span class="n">Concatenation</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">17</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">Concatenation</span><span class="o">.</span><span class="na">main</span><span class="o">(</span><span class="n">Concatenation</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">4</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>替代方法</h3>

<p>相比字符串的格式化操作，使用字符串的替换更加安全，避免因为疏忽或者考虑不全等带来的崩溃问题。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="s">&quot;%country%/%city%&quot;</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;%country%&quot;</span><span class="o">,</span> <span class="s">&quot;China&quot;</span><span class="o">).</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;%city%&quot;</span><span class="o">,</span> <span class="s">&quot;Beijing&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0084ASO7E/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0084ASO7E&linkCode=as2&tag=droidyue-23">数学之美</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0084ASO7E" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00D36S64K/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00D36S64K&linkCode=as2&tag=droidyue-23">像计算机科学家一样思考Java</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00D36S64K" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00HQW9FMO/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00HQW9FMO&linkCode=as2&tag=droidyue-23">微信公众平台应用开发:方法、技巧与案例</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00HQW9FMO" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一脚本：批量对多个文件增加前缀]]></title>
    <link href="http://droidyue.com/blog/2014/09/22/weekly-script-add-prefix-to-mutiple-files-in-ruby/"/>
    <updated>2014-09-22T17:03:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/22/weekly-script-add-prefix-to-mutiple-files-in-ruby</id>
    <content type="html"><![CDATA[<p>最近从设计师那里get了超多的图，结果都是1.png，2.png这样的文件名，自己还需要将这些文件变成可读的文件名，不想一个一个得修改，于是就写了一个简单的脚本，实现批量对多个文件增加前缀的操作，后期修改了一下，分享一下。</p>

<!--more-->


<h2>代码</h2>

<figure class='code'><figcaption><span>lineos:false  add_prefix_files.rb</span><a href='https://raw.githubusercontent.com/androidyue/weekly-scripts/master/ruby/add_prefix_files.rb'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="n">srcDir</span><span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">prefix</span><span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;*&#39;</span>
</span><span class='line'><span class="n">pattern</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="k">if</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'><span class="no">Dir</span><span class="o">[</span><span class="n">srcDir</span> <span class="o">+</span> <span class="s1">&#39;/&#39;</span> <span class="o">+</span> <span class="n">pattern</span> <span class="o">].</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">child</span><span class="o">|</span>
</span><span class='line'>    <span class="n">childName</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">child</span><span class="p">)</span>
</span><span class='line'>    <span class="n">destChildName</span> <span class="o">=</span> <span class="n">prefix</span>  <span class="o">+</span> <span class="n">childName</span>
</span><span class='line'>    <span class="n">destChild</span> <span class="o">=</span> <span class="n">child</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="n">childName</span><span class="p">,</span> <span class="n">destChildName</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s1">&#39;mv %s %s&#39;</span><span class="sx">%[child, destChild]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>如何使用</h2>

<h3>使用的方法</h3>

<ul>
<li><strong>ruby add_prefix_files.rb dest_folder prefix pattern</strong></li>
<li>dest_folder 必选 操作进行的基础目录，并不一定总是直接父目录</li>
<li>prefix      必须 前缀名称  建议结尾以_结束</li>
<li>pattern     可选，如不填写为dest_folder的直接子文件（含目录），否则应用提供的pattern匹配</li>
</ul>


<h3>使用示例</h3>

<p>对当前目录下所有文件增加test_前缀。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">~</span><span class="sr">/rubydir/</span><span class="n">tools</span><span class="o">/</span><span class="n">add_prefix_files</span><span class="o">.</span><span class="n">rb</span> <span class="o">.</span><span class="n">/</span> <span class="n">test_</span>
</span></code></pre></td></tr></table></div></figure>


<p>对当前目录下res/drawable-hdpi/所有的png文件，增加test_前缀</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">~</span><span class="sr">/rubydir/</span><span class="n">tools</span><span class="o">/</span><span class="n">add_prefix_files</span><span class="o">.</span><span class="n">rb</span> <span class="o">.</span><span class="n">/</span> <span class="n">test_</span>  <span class="s2">&quot;res/drawable-hdpi/*.png&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/0596009658/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=0596009658&linkCode=as2&tag=droidyue-23">Learning the Bash Shell</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=0596009658" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0096EXMS8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0096EXMS8&linkCode=as2&tag=droidyue-23">Linux命令行与shell脚本编程大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0096EXMS8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00N75YP74/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00N75YP74&linkCode=as2&tag=droidyue-23">穿布鞋的马云:决定阿里巴巴生死的27个节点</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00N75YP74" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[获取shell脚本所在目录]]></title>
    <link href="http://droidyue.com/blog/2014/09/21/determine-shell-script-located-directory/"/>
    <updated>2014-09-21T17:48:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/21/determine-shell-script-located-directory</id>
    <content type="html"><![CDATA[<p>前几天写的<a href="https://portal.qiniu.com/signup?code=3l8cqx1u74rbm" target="_blank">七牛</a>的参赛demo，用bash写了一个便捷安装的脚本，涉及到了路径相关的判断，从<a href="http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in" target="_blank">stackoverflow</a>，加上自己的实践整理一下。</p>

<!--more-->


<h3>简单版</h3>

<p>下面是一个最简单的实现，可以解决大多数问题，缺陷是对于软链接显示的是软链接所在的目录</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nv">DIR</span><span class="o">=</span><span class="s2">&quot;$( cd &quot;</span><span class="k">$(</span> dirname <span class="s2">&quot;$0&quot;</span>  <span class="k">)</span><span class="s2">&quot; &amp;&amp; pwd  )&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>完善版</h3>

<p>这个版本解决了使用<code>ln -s target linkName</code>创造软链接无法正确取到真实脚本的问题。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nv">SOURCE</span><span class="o">=</span><span class="s2">&quot;$0&quot;</span>
</span><span class='line'><span class="k">while</span> <span class="o">[</span> -h <span class="s2">&quot;$SOURCE&quot;</span>  <span class="o">]</span>; <span class="k">do</span> <span class="c"># resolve $SOURCE until the file is no longer a symlink</span>
</span><span class='line'>    <span class="nv">DIR</span><span class="o">=</span><span class="s2">&quot;$( cd -P &quot;</span><span class="k">$(</span> dirname <span class="s2">&quot;$SOURCE&quot;</span>  <span class="k">)</span><span class="s2">&quot; &amp;&amp; pwd  )&quot;</span>
</span><span class='line'>    <span class="nv">SOURCE</span><span class="o">=</span><span class="s2">&quot;$(readlink &quot;</span><span class="nv">$SOURCE</span><span class="s2">&quot;)&quot;</span>
</span><span class='line'>    <span class="o">[[</span> <span class="nv">$SOURCE</span> !<span class="o">=</span> /*  <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nv">SOURCE</span><span class="o">=</span><span class="s2">&quot;$DIR/$SOURCE&quot;</span> <span class="c"># if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'><span class="nv">DIR</span><span class="o">=</span><span class="s2">&quot;$( cd -P &quot;</span><span class="k">$(</span> dirname <span class="s2">&quot;$SOURCE&quot;</span>  <span class="k">)</span><span class="s2">&quot; &amp;&amp; pwd  )&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/0596009658/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=0596009658&linkCode=as2&tag=droidyue-23">Learning the Bash Shell</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=0596009658" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0096EXMS8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0096EXMS8&linkCode=as2&tag=droidyue-23">Linux命令行与shell脚本编程大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0096EXMS8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00N75YP74/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00N75YP74&linkCode=as2&tag=droidyue-23">穿布鞋的马云:决定阿里巴巴生死的27个节点</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00N75YP74" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android中Java和JavaScript交互]]></title>
    <link href="http://droidyue.com/blog/2014/09/20/interaction-between-java-and-javascript-in-android/"/>
    <updated>2014-09-20T21:37:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/20/interaction-between-java-and-javascript-in-android</id>
    <content type="html"><![CDATA[<p>Android提供了一个很强大的WebView控件用来处理Web网页，而在网页中，JavaScript又是一个很举足轻重的脚本。本文将介绍如何实现Java代码和Javascript代码的相互调用。</p>

<!--more-->


<h2>如何实现</h2>

<p>实现Java和js交互十分便捷。通常只需要以下几步。</p>

<ul>
<li>WebView开启JavaScript脚本执行</li>
<li>WebView设置供JavaScript调用的交互接口。</li>
<li>客户端和网页端编写调用对方的代码。</li>
</ul>


<h2>本例代码</h2>

<p>为了便于讲解，先贴出全部代码</p>

<h3>Java代码</h3>

<figure class='code'><figcaption><span>lineos:false </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">javajsinteractiondemo</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.annotation.SuppressLint</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.Log</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.Menu</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.webkit.JavascriptInterface</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.webkit.WebChromeClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.webkit.WebSettings</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.webkit.WebView</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.webkit.WebViewClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">LOGTAG</span> <span class="o">=</span> <span class="s">&quot;MainActivity&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="nd">@SuppressLint</span><span class="o">(</span><span class="s">&quot;JavascriptInterface&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>      <span class="kd">final</span> <span class="n">WebView</span> <span class="n">myWebView</span> <span class="o">=</span> <span class="o">(</span><span class="n">WebView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">myWebView</span><span class="o">);</span>
</span><span class='line'>      <span class="n">WebSettings</span> <span class="n">settings</span> <span class="o">=</span> <span class="n">myWebView</span><span class="o">.</span><span class="na">getSettings</span><span class="o">();</span>
</span><span class='line'>      <span class="n">settings</span><span class="o">.</span><span class="na">setJavaScriptEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>      <span class="n">myWebView</span><span class="o">.</span><span class="na">addJavascriptInterface</span><span class="o">(</span><span class="k">new</span> <span class="n">JsInteration</span><span class="o">(),</span> <span class="s">&quot;control&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">myWebView</span><span class="o">.</span><span class="na">setWebChromeClient</span><span class="o">(</span><span class="k">new</span> <span class="n">WebChromeClient</span><span class="o">()</span> <span class="o">{});</span>
</span><span class='line'>      <span class="n">myWebView</span><span class="o">.</span><span class="na">setWebViewClient</span><span class="o">(</span><span class="k">new</span> <span class="n">WebViewClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPageFinished</span><span class="o">(</span><span class="n">WebView</span> <span class="n">view</span><span class="o">,</span> <span class="n">String</span> <span class="n">url</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="kd">super</span><span class="o">.</span><span class="na">onPageFinished</span><span class="o">(</span><span class="n">view</span><span class="o">,</span> <span class="n">url</span><span class="o">);</span>
</span><span class='line'>              <span class="n">testMethod</span><span class="o">(</span><span class="n">myWebView</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>      <span class="n">myWebView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="s">&quot;file:///android_asset/js_java_interaction.html&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">testMethod</span><span class="o">(</span><span class="n">WebView</span> <span class="n">webView</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">call</span> <span class="o">=</span> <span class="s">&quot;javascript:sayHello()&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">call</span> <span class="o">=</span> <span class="s">&quot;javascript:alertMessage(\&quot;&quot;</span> <span class="o">+</span> <span class="s">&quot;content&quot;</span> <span class="o">+</span> <span class="s">&quot;\&quot;)&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">call</span> <span class="o">=</span> <span class="s">&quot;javascript:toastMessage(\&quot;&quot;</span> <span class="o">+</span> <span class="s">&quot;content&quot;</span> <span class="o">+</span> <span class="s">&quot;\&quot;)&quot;</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">call</span> <span class="o">=</span> <span class="s">&quot;javascript:sumToJava(1,2)&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">webView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">call</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">JsInteration</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>      <span class="nd">@JavascriptInterface</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">toastMessage</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span> <span class="n">message</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="nd">@JavascriptInterface</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSumResult</span><span class="o">(</span><span class="kt">int</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;onSumResult result=&quot;</span> <span class="o">+</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>前端网页代码</h3>

<figure class='code'><figcaption><span>lineos:false js_java_interaction.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">sayHello</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;Hello&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">alertMessage</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">toastMessage</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">window</span><span class="p">.</span><span class="nx">control</span><span class="p">.</span><span class="nx">toastMessage</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">sumToJava</span><span class="p">(</span><span class="nx">number1</span><span class="p">,</span> <span class="nx">number2</span><span class="p">){</span>
</span><span class='line'>       <span class="nb">window</span><span class="p">.</span><span class="nx">control</span><span class="p">.</span><span class="nx">onSumResult</span><span class="p">(</span><span class="nx">number1</span> <span class="o">+</span> <span class="nx">number2</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'>Java-Javascript Interaction In Android
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>调用示例</h2>

<h3>js调用Java</h3>

<p>调用格式为window.jsInterfaceName.methodName(parameterValues)
此例中我们使用的是control作为注入接口名称。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>function toastMessage(message) {
</span><span class='line'>  window.control.toastMessage(message)
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>function sumToJava(number1, number2){
</span><span class='line'>   window.control.onSumResult(number1 + number2)
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<h3>Java调用JS</h3>

<p>webView调用js的基本格式为webView.loadUrl(&ldquo;javascript:methodName(parameterValues)&rdquo;)</p>

<h4>调用js无参无返回值函数</h4>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">call</span> <span class="o">=</span> <span class="s">&quot;javascript:sayHello()&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">webView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">call</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用js有参无返回值函数</h4>

<p>注意对于字符串作为参数值需要进行转义双引号。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">call</span> <span class="o">=</span> <span class="s">&quot;javascript:alertMessage(\&quot;&quot;</span> <span class="o">+</span> <span class="s">&quot;content&quot;</span> <span class="o">+</span> <span class="s">&quot;\&quot;)&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">webView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">call</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用js有参数有返回值的函数</h4>

<p>Android在4.4之前并没有提供直接调用js函数并获取值的方法，所以在此之前，常用的思路是 java调用js方法，js方法执行完毕，再次调用java代码将值返回。</p>

<h5>1.Java调用js代码</h5>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">call</span> <span class="o">=</span> <span class="s">&quot;javascript:sumToJava(1,2)&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">webView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">call</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h5>2.js函数处理，并将结果通过调用java方法返回</h5>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">sumToJava</span><span class="p">(</span><span class="nx">number1</span><span class="p">,</span> <span class="nx">number2</span><span class="p">){</span>
</span><span class='line'>       <span class="nb">window</span><span class="p">.</span><span class="nx">control</span><span class="p">.</span><span class="nx">onSumResult</span><span class="p">(</span><span class="nx">number1</span> <span class="o">+</span> <span class="nx">number2</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>3.Java在回调方法中获取js函数返回值</h5>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@JavascriptInterface</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSumResult</span><span class="o">(</span><span class="kt">int</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;onSumResult result=&quot;</span> <span class="o">+</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4><font color="blue">4.4处理</font></h4>

<p>Android 4.4之后使用evaluateJavascript即可。这里展示一个简单的交互示例
具有返回值的js方法</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>function getGreetings() {
</span><span class='line'>      return 1;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>java代码时用evaluateJavascript方法调用</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">testEvaluateJavascript</span><span class="o">(</span><span class="n">WebView</span> <span class="n">webView</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">webView</span><span class="o">.</span><span class="na">evaluateJavascript</span><span class="o">(</span><span class="s">&quot;getGreetings()&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">ValueCallback</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onReceiveValue</span><span class="o">(</span><span class="n">String</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;onReceiveValue value=&quot;</span> <span class="o">+</span> <span class="n">value</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}});</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出结果</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I/MainActivity<span class="o">(</span> 1432<span class="o">)</span>: onReceiveValue <span class="nv">value</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>注意</p>

<ul>
<li>上面限定了结果返回结果为String，对于简单的类型会尝试转换成字符串返回，对于复杂的数据类型，建议以字符串形式的json返回。</li>
<li>evaluateJavascript方法必须在UI线程（主线程）调用，因此onReceiveValue也执行在主线程。</li>
</ul>


<h2>疑问解答</h2>

<h3><font color="red">Alert无法弹出</font></h3>

<p>你应该是没有设置WebChromeClient,按照以下代码设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">myWebView</span><span class="o">.</span><span class="na">setWebChromeClient</span><span class="o">(</span><span class="k">new</span> <span class="n">WebChromeClient</span><span class="o">()</span> <span class="o">{});</span>
</span></code></pre></td></tr></table></div></figure>


<h3><font color="red">Uncaught ReferenceError: functionName is not defined</font></h3>

<p>问题出现原因，<strong>网页的js代码没有加载完成</strong>，就调用了js方法。解决方法是在网页加载完成之后调用js方法</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">myWebView</span><span class="o">.</span><span class="na">setWebViewClient</span><span class="o">(</span><span class="k">new</span> <span class="n">WebViewClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPageFinished</span><span class="o">(</span><span class="n">WebView</span> <span class="n">view</span><span class="o">,</span> <span class="n">String</span> <span class="n">url</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onPageFinished</span><span class="o">(</span><span class="n">view</span><span class="o">,</span> <span class="n">url</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">//在这里执行你想调用的js函数</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3><font color="red">Uncaught TypeError: Object [object Object] has no method</font></h3>

<h4>安全限制问题</h4>

<p>如果只在4.2版本以上的机器出问题，那么就是系统处于安全限制的问题了。Android文档这样说的</p>

<blockquote><p>Caution: If you&rsquo;ve set your targetSdkVersion to 17 or higher, you must add the @JavascriptInterface annotation to any method that you want available your web page code (the method must also be public). If you do not provide the annotation, then the method will not accessible by your web page when running on Android 4.2 or higher.</p></blockquote>

<p>中文大意为</p>

<blockquote><p>警告：如果你的程序目标平台是17或者是更高，你必须要在暴露给网页可调用的方法（这个方法必须是公开的）加上@JavascriptInterface注释。如果你不这样做的话，在4.2以以后的平台上，网页无法访问到你的方法。</p></blockquote>

<h5>两种解决方法</h5>

<ul>
<li>将targetSdkVersion设置成17或更高，引入@JavascriptInterface注释</li>
<li>自己创建一个注释接口名字为@JavascriptInterface，然后将其引入。注意这个接口不能混淆。</li>
</ul>


<p>注，创建@JavascriptInterface代码</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="nd">@interface</span> <span class="n">JavascriptInterface</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>代码混淆问题</h4>

<p>如果在没有混淆的版本运行正常，在混淆后的版本的代码运行错误，并提示Uncaught TypeError: Object [object Object] has no method，那就是你没有做混淆例外处理。
在混淆文件加入类似这样的代码</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span><span class="n">keep</span> <span class="k">class</span> <span class="n">com</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">javajsinteractiondemo</span><span class="vg">$JsInteration</span> <span class="p">{</span>
</span><span class='line'>    <span class="o">*</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><font color="red">All WebView methods must be called on the same thread</font></h3>

<p>过滤日志曾发现过这个问题。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">E</span><span class="o">/</span><span class="n">StrictMode</span><span class="o">(</span> <span class="mi">1546</span><span class="o">):</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Throwable</span><span class="o">:</span> <span class="n">A</span> <span class="n">WebView</span> <span class="n">method</span> <span class="n">was</span> <span class="n">called</span> <span class="n">on</span> <span class="n">thread</span> <span class="err">&#39;</span><span class="n">JavaBridge</span><span class="err">&#39;</span><span class="o">.</span> <span class="n">All</span> <span class="n">WebView</span> <span class="n">methods</span> <span class="n">must</span> <span class="n">be</span> <span class="n">called</span> <span class="n">on</span> <span class="n">the</span> <span class="n">same</span> <span class="n">thread</span><span class="o">.</span> <span class="o">(</span><span class="n">Expected</span> <span class="n">Looper</span> <span class="n">Looper</span> <span class="o">(</span><span class="n">main</span><span class="o">,</span> <span class="n">tid</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span><span class="mi">528712</span><span class="n">d4</span><span class="o">}</span> <span class="n">called</span> <span class="n">on</span> <span class="n">Looper</span> <span class="o">(</span><span class="n">JavaBridge</span><span class="o">,</span> <span class="n">tid</span> <span class="mi">121</span><span class="o">)</span> <span class="o">{</span><span class="mi">52</span><span class="n">b6678c</span><span class="o">},</span> <span class="n">FYI</span> <span class="n">main</span> <span class="n">Looper</span> <span class="n">is</span> <span class="n">Looper</span> <span class="o">(</span><span class="n">main</span><span class="o">,</span> <span class="n">tid</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span><span class="mi">528712</span><span class="n">d4</span><span class="o">})</span>
</span><span class='line'><span class="n">E</span><span class="o">/</span><span class="n">StrictMode</span><span class="o">(</span> <span class="mi">1546</span><span class="o">):</span>   <span class="n">at</span> <span class="n">android</span><span class="o">.</span><span class="na">webkit</span><span class="o">.</span><span class="na">WebView</span><span class="o">.</span><span class="na">checkThread</span><span class="o">(</span><span class="n">WebView</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">2063</span><span class="o">)</span>
</span><span class='line'><span class="n">E</span><span class="o">/</span><span class="n">StrictMode</span><span class="o">(</span> <span class="mi">1546</span><span class="o">):</span>   <span class="n">at</span> <span class="n">android</span><span class="o">.</span><span class="na">webkit</span><span class="o">.</span><span class="na">WebView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">WebView</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">794</span><span class="o">)</span>
</span><span class='line'><span class="n">E</span><span class="o">/</span><span class="n">StrictMode</span><span class="o">(</span> <span class="mi">1546</span><span class="o">):</span>   <span class="n">at</span> <span class="n">com</span><span class="o">.</span><span class="na">xxx</span><span class="o">.</span><span class="na">xxxx</span><span class="o">.</span><span class="na">xxxx</span><span class="o">.</span><span class="na">xxxx</span><span class="o">.</span><span class="na">xxxxxxx</span><span class="n">$JavaScriptInterface</span><span class="o">.</span><span class="na">onCanGoBackResult</span><span class="o">(</span><span class="n">xxxx</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">96</span><span class="o">)</span>
</span><span class='line'><span class="n">E</span><span class="o">/</span><span class="n">StrictMode</span><span class="o">(</span> <span class="mi">1546</span><span class="o">):</span>   <span class="n">at</span> <span class="n">com</span><span class="o">.</span><span class="na">android</span><span class="o">.</span><span class="na">org</span><span class="o">.</span><span class="na">chromium</span><span class="o">.</span><span class="na">base</span><span class="o">.</span><span class="na">SystemMessageHandler</span><span class="o">.</span><span class="na">nativeDoRunLoopOnce</span><span class="o">(</span><span class="n">Native</span> <span class="n">Method</span><span class="o">)</span>
</span><span class='line'><span class="n">E</span><span class="o">/</span><span class="n">StrictMode</span><span class="o">(</span> <span class="mi">1546</span><span class="o">):</span>   <span class="n">at</span> <span class="n">com</span><span class="o">.</span><span class="na">android</span><span class="o">.</span><span class="na">org</span><span class="o">.</span><span class="na">chromium</span><span class="o">.</span><span class="na">base</span><span class="o">.</span><span class="na">SystemMessageHandler</span><span class="o">.</span><span class="na">handleMessage</span><span class="o">(</span><span class="n">SystemMessageHandler</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">27</span><span class="o">)</span>
</span><span class='line'><span class="n">E</span><span class="o">/</span><span class="n">StrictMode</span><span class="o">(</span> <span class="mi">1546</span><span class="o">):</span>   <span class="n">at</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Handler</span><span class="o">.</span><span class="na">dispatchMessage</span><span class="o">(</span><span class="n">Handler</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">102</span><span class="o">)</span>
</span><span class='line'><span class="n">E</span><span class="o">/</span><span class="n">StrictMode</span><span class="o">(</span> <span class="mi">1546</span><span class="o">):</span>   <span class="n">at</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Looper</span><span class="o">.</span><span class="na">loop</span><span class="o">(</span><span class="n">Looper</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">136</span><span class="o">)</span>
</span><span class='line'><span class="n">E</span><span class="o">/</span><span class="n">StrictMode</span><span class="o">(</span> <span class="mi">1546</span><span class="o">):</span>   <span class="n">at</span> <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">HandlerThread</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">HandlerThread</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">61</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>在js调用后的Java回调线程并不是主线程。如打印日志可验证</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">ThreadInfo</span><span class="o">=</span>Thread<span class="o">[</span>WebViewCoreThread,5,main<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>解决上述的异常，将webview操作放在主线程中即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">webView</span><span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">webView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">YOUR_URL</span><span class="o">).</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00LVHTI9U/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00LVHTI9U&linkCode=as2&tag=droidyue-23">第一行代码:Android</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00LVHTI9U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0097CON2S/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0097CON2S&linkCode=as2&tag=droidyue-23">JavaScript语言精粹</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0097CON2S" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00B14IGUK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00B14IGUK&linkCode=as2&tag=droidyue-23">安全技术大系:Web前端黑客技术揭秘</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00B14IGUK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一脚本：过滤单个Android程序日志]]></title>
    <link href="http://droidyue.com/blog/2014/09/15/weekly-scripts-grep-android-application-log-in-terminal/"/>
    <updated>2014-09-15T18:55:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/15/weekly-scripts-grep-android-application-log-in-terminal</id>
    <content type="html"><![CDATA[<p>在Android软件开发中，增加日志的作用很重要，便于我们了解程序的执行情况和数据。Eclipse开发工具会提供了可视化的工具，但是还是感觉终端效率会高一些，于是自己写了一个python的脚本来通过包名来过滤某一程序的日志。</p>

<h3>原理</h3>

<p>通过包名得到对应的进程ID（可能多个），然后使用adb logcat 过滤进程ID即可得到对应程序的日志。</p>

<!--more-->


<h3>源码</h3>

<figure class='code'><figcaption><span>lineos:false</span><a href='https://raw.githubusercontent.com/androidyue/weekly-scripts/master/python/logcatPkg.py'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c">#coding:utf-8</span>
</span><span class='line'><span class="c">#This script is aimed to grep logs by application(User should input a packageName and then we look up for the process ids then separate logs by process ids).</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="n">packageName</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'><span class="n">command</span> <span class="o">=</span> <span class="s">&quot;adb shell ps | grep </span><span class="si">%s</span><span class="s"> | awk &#39;{print $2}&#39;&quot;</span><span class="o">%</span><span class="p">(</span><span class="n">packageName</span><span class="p">)</span>
</span><span class='line'><span class="n">p</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">popen</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
</span><span class='line'><span class="c">##for some applications,there are multiple processes,so we should get all the process id</span>
</span><span class='line'><span class="n">pid</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span><span class='line'><span class="n">filters</span> <span class="o">=</span> <span class="n">pid</span>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="n">pid</span> <span class="o">!=</span> <span class="s">&quot;&quot;</span><span class="p">):</span>
</span><span class='line'>    <span class="n">pid</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pid</span> <span class="o">!=</span> <span class="s">&#39;&#39;</span><span class="p">):</span>
</span><span class='line'>        <span class="n">filters</span> <span class="o">=</span> <span class="n">filters</span> <span class="o">+</span>  <span class="s">&quot;|&quot;</span> <span class="o">+</span> <span class="n">pid</span>
</span><span class='line'>        <span class="c">#print &#39;command = %s;filters=%s&#39;%(command, filters)</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">filters</span> <span class="o">!=</span> <span class="s">&#39;&#39;</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>    <span class="n">cmd</span> <span class="o">=</span> <span class="s">&#39;adb logcat | grep --color=always -E &quot;</span><span class="si">%s</span><span class="s">&quot; &#39;</span><span class="o">%</span><span class="p">(</span><span class="n">filters</span><span class="p">)</span>
</span><span class='line'>    <span class="n">os</span><span class="o">.</span><span class="n">system</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用方法</h3>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python logcatPkg.py com.mx.browser
</span></code></pre></td></tr></table></div></figure>


<h3>最新代码</h3>

<p> <a href="https://raw.githubusercontent.com/androidyue/weekly-scripts/master/python/logcatPkg.py" target="_blank">locatPkg.py</a></p>

<h3>不足</h3>

<ul>
<li> 当脚本执行后，Android程序如果关闭或者重新启动，导致进程ID变化，无法自动继续输出日志，只能再次执行此脚本。</li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00KVLDS20/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KVLDS20&linkCode=as2&tag=droidyue-23">仅用两周就能自制脚本语言？</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00KVLDS20" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B002A2LQR2/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B002A2LQR2&linkCode=as2&tag=droidyue-23">一个不错的Shell脚本学习指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B002A2LQR2" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B005YWYH6C/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B005YWYH6C&linkCode=as2&tag=droidyue-23">Windows 7脚本编程和命令行工具指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B005YWYH6C" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的七牛参赛作品]]></title>
    <link href="http://droidyue.com/blog/2014/09/13/my-work-for-qiniu-demo/"/>
    <updated>2014-09-13T13:19:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/13/my-work-for-qiniu-demo</id>
    <content type="html"><![CDATA[<p>使用Ocopress写博客将近一年多了，大概几个月前同事给我推荐了<a href="https://portal.qiniu.com/signup?code=3l8cqx1u74rbm" target="_blank">七牛</a>做网站的静态文件存储服务，于是果断尝试了一下，发现真实不错。速度不错，而且有免费套餐。很是支持。最近发现七牛有一个demo大赛，于是果断参加了。</p>

<!--more-->


<h2>痛点</h2>

<ul>
<li>域名Godaddy购买，无法备案，不能使用七牛的独立域名绑定</li>
<li>服务器为github pages， 有300M空间限制，所以只能把静态文件放到七牛</li>
<li>每次写带图片等资源的博客，都需要先上传到七牛，然后得到外链地址，贴回到博客，过于繁琐啦。</li>
</ul>


<h2>解决思路</h2>

<p>由于ocotpress程序是将markdown文档转换成纯静态的HTML网页，我们可以在这个转换过程之前或者期间将图片等资源自动上传到七牛服务器，然后替换这些资源的地址为已上传文件的外链。</p>

<h2>实现细节</h2>

<ul>
<li>通过rb-inotify检测文件变化，新文件会直接上传，已经上传过的文件则覆盖更新。避免在生成html网页时大量拥挤上传</li>
<li>进行rake generate时，对没有上传的文件进行上传</li>
<li>通过sqlite数据库，记录文件路径和最后修改时间进行验证。</li>
</ul>


<h2>好处</h2>

<ul>
<li>节省了博客在github中的空间占用，让github空间限制几乎不再存在。只剩纯文本了，能占用多少空间</li>
<li>提高了在国内的访问的速度</li>
<li>使用更多的七牛的服务，比如防盗链等功能。</li>
</ul>


<h2>安装</h2>

<p>如果尚未安装Octopress，请参考<a href="http://blog.segmentfault.com/yaashion_xiang/1190000000364677" target="_blank">本文</a>安装。</p>

<h3>超级简单的一步安装</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>YOUR_OCTOPRESS_ROOT_DIR
</span><span class='line'>curl -o /tmp/install.sh https://gitcafe.com/androidyue/octopress_qiniu/raw/master/install.sh <span class="o">&amp;&amp;</span> bash /tmp/install.sh
</span></code></pre></td></tr></table></div></figure>


<h3>配置文件</h3>

<p>安装过程中，会使用vi打开一个配置文件，文件内容为，文件路径位于家目录下的.qiniu.ini。按照自己的实际情况填写配置即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#Qiniu Config File</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Project</span>
</span><span class='line'><span class="o">[</span>octopress<span class="o">]</span>
</span><span class='line'><span class="c">#Your Bucket to Store Images In Octopress</span>
</span><span class='line'><span class="nv">image_bucket</span> <span class="o">=</span> <span class="s2">&quot;your_bucket&quot;</span>
</span><span class='line'><span class="c">#Your Image Folder Path to store the files locally. Usually it&#39;s #{OCTORESS_DIRECTORY}/public/images/</span>
</span><span class='line'><span class="nv">image_dir</span> <span class="o">=</span> <span class="s2">&quot;image_dir_in_octopress&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Auth Info</span>
</span><span class='line'><span class="c">#Generate two following two keys in Qiniu Web Portal</span>
</span><span class='line'><span class="o">[</span>auth<span class="o">]</span>
</span><span class='line'><span class="nv">access_key</span> <span class="o">=</span> <span class="s2">&quot;your_access_key&quot;</span>
</span><span class='line'><span class="nv">secret_key</span> <span class="o">=</span> <span class="s2">&quot;your_secret_key&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>启动程序</h2>

<p>配置完成，轻松执行一个脚本就可以启动监控文件变化自动上传的程序了。当检测目录有文件变化时就会自动上传到七牛的文件服务器。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>YOUR_OCTOPRESS_ROOT_DIR/startQiniu.sh
</span></code></pre></td></tr></table></div></figure>


<h2>文件介绍</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>.
</span><span class='line'>|-- install.sh  <span class="c">#快捷安装脚本</span>
</span><span class='line'>|-- octopress   <span class="c">#覆盖octopress程序的目录</span>
</span><span class='line'>|   <span class="sb">`</span>-- plugins
</span><span class='line'>|       <span class="sb">`</span>-- image_tag.rb <span class="c"># 覆盖Octopress 程序自带的image_tag，实现图片上传到七牛</span>
</span><span class='line'>|-- qiniu       <span class="c">#工具程序的主目录</span>
</span><span class='line'>|   |-- qiniuCLI.rb    <span class="c">#命令行工具，这个工具是所有上传下载请求的对外处理程序，本工具中所有的请求都是直接调用这个工具。</span>
</span><span class='line'>|   |-- .qiniu_config_template.ini <span class="c">#配置文件模板，不要对这个文件直接配置，请使用家目录下的.qiniu.ini进行配置</span>
</span><span class='line'>|   |-- qiniuCore.rb   <span class="c">#最主要的处理脚本。支持从ini文件读取配置，数据库存储文件的上传信息，调用七牛的SDK来完成文件的上传和下载。</span>
</span><span class='line'>|   |-- .qiniu.db      <span class="c">#数据库文件，存储上传的记录</span>
</span><span class='line'>|   |-- qiniuFileNotifier.rb  <span class="c">#监控配置目录变化，自动上传或者覆盖文件。</span>
</span><span class='line'>|   <span class="sb">`</span>-- .setupQiniu.rb <span class="c">#安装需要的gem，复制配置文件到家目录</span>
</span><span class='line'>|-- README.md  <span class="c">#说明文件</span>
</span><span class='line'><span class="sb">`</span>-- startQiniu.sh <span class="c">#检查安装情况并启动文件监控自动上传启动程序</span>
</span></code></pre></td></tr></table></div></figure>


<h2>源码地址</h2>

<ul>
<li><a href="https://gitcafe.com/androidyue/octopress_qiniu" target="_blank">我的七牛参赛作品</a></li>
</ul>


<h3>解答问题</h3>

<ul>
<li>提问：为什么配置文件放在家目录下</li>
<li><p>回答：配置文件中包含了七牛的accessKey和accessSecret，默认的ocotpress受git管理，为了避免将配置文件误加入git管理，传到服务器端造成前面的accessKey和acessSecret泄露，所以放到家目录下。</p></li>
<li><p>提问：既然文件都上传到了，是不是可以删除掉存储到public/images/的文件</p></li>
<li>回答：当然可以，因为生成的网页的图片地址为七牛的外链地址，目前程序没有做主动删除文件的操作。</li>
</ul>


<h3>投票地址</h3>

<p>我的作品名称<strong>octopress_qiniu</strong></p>

<p><a href="http://campaign.gitcafe.com/qiniu-demo?page=11">投票地址</a></p>

<p>最后希望大家多多支持，投我一票哈。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android根据资源名获取资源ID]]></title>
    <link href="http://droidyue.com/blog/2014/09/12/get-resource-id-by-name-in-android/"/>
    <updated>2014-09-12T22:12:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/12/get-resource-id-by-name-in-android</id>
    <content type="html"><![CDATA[<p>接触过Android开发的同学们都知道在Android中访问程序资源基本都是通过资源ID来访问。这样开发起来很简单，并且可以不去考虑各种分辨率，语言等不同资源显式指定。</p>

<!--more-->


<h2>痛点</h2>

<p>但是，有时候也会有一些问题，比如我们根据服务器端的值取图片，但是服务器端绝对不会返回给我们的是资源id，最多是一种和文件名相关联的值，操作资源少的时候，可以维护一个容器进行值与资源ID的映射，但是多的话，就需要另想办法了。</p>

<h3>便捷的方法</h3>

<p>在这种情况下，使用文件名来得到资源ID显得事半功倍。
通过调用Resources的getIdentifier可以很轻松地得到资源ID。
几个简单的示例</p>

<figure class='code'><figcaption><span>lineos:false </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Resources</span> <span class="n">res</span> <span class="o">=</span> <span class="n">getResources</span><span class="o">();</span>
</span><span class='line'><span class="kd">final</span> <span class="n">String</span> <span class="n">packageName</span> <span class="o">=</span> <span class="n">getPackageName</span><span class="o">();</span>
</span><span class='line'><span class="kt">int</span> <span class="n">imageResId</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="s">&quot;ic_launcher&quot;</span><span class="o">,</span> <span class="s">&quot;drawable&quot;</span><span class="o">,</span> <span class="n">packageName</span><span class="o">);</span>
</span><span class='line'><span class="kt">int</span> <span class="n">imageResIdByAnotherForm</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="n">packageName</span> <span class="o">+</span> <span class="s">&quot;:drawable/ic_launcher&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'><span class="kt">int</span> <span class="n">musicResId</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="s">&quot;test&quot;</span><span class="o">,</span> <span class="s">&quot;raw&quot;</span><span class="o">,</span> <span class="n">packageName</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'><span class="kt">int</span> <span class="n">notFoundResId</span> <span class="o">=</span> <span class="n">res</span><span class="o">.</span><span class="na">getIdentifier</span><span class="o">(</span><span class="s">&quot;activity_main&quot;</span><span class="o">,</span> <span class="s">&quot;drawable&quot;</span><span class="o">,</span> <span class="n">packageName</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">LOGTAG</span><span class="o">,</span> <span class="s">&quot;testGetResourceIds imageResId = &quot;</span> <span class="o">+</span> <span class="n">imageResId</span>
</span><span class='line'>              <span class="o">+</span> <span class="s">&quot;;imageResIdByAnotherForm = &quot;</span> <span class="o">+</span> <span class="n">imageResIdByAnotherForm</span>
</span><span class='line'>              <span class="o">+</span> <span class="s">&quot;;musicResId=&quot;</span> <span class="o">+</span> <span class="n">musicResId</span>
</span><span class='line'>              <span class="o">+</span> <span class="s">&quot;;notFoundResId =&quot;</span> <span class="o">+</span> <span class="n">notFoundResId</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I/MainActivity<span class="o">(</span> 4537<span class="o">)</span>: testGetResourceIds <span class="nv">imageResId</span> <span class="o">=</span> 2130837504;imageResIdByAnotherForm <span class="o">=</span> 2130837504;musicResId<span class="o">=</span>2130968576;notFoundResId <span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<h2>看一看API</h2>

<h3>直接API</h3>

<ul>
<li>这个方法用来使用资源名来获取资源ID</li>
<li>完整的资源名为<code>package:type/entry</code>，如果资源名这个参数有完整地指定，后面的defType和defPackage可以省略。</li>
<li>defType和defPackage省略时，需要将其设置成null</li>
<li>注意这个方法不提倡，因为直接通过资源ID访问资源会更加效率高</li>
<li>如果资源没有找到，返回0,在Android资源ID中0不是合法的资源ID。</li>
</ul>


<figure class='code'><figcaption><span>lineos:false android.content.res.Resources.class</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Return a resource identifier for the given resource name.  A fully</span>
</span><span class='line'><span class="cm">     * qualified resource name is of the form &quot;package:type/entry&quot;.  The first</span>
</span><span class='line'><span class="cm">     * two components (package and type) are optional if defType and</span>
</span><span class='line'><span class="cm">     * defPackage, respectively, are specified here.</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * &lt;p&gt;Note: use of this function is discouraged.  It is much more</span>
</span><span class='line'><span class="cm">     * efficient to retrieve resources by identifier than by name.</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @param name The name of the desired resource.</span>
</span><span class='line'><span class="cm">     * @param defType Optional default resource type to find, if &quot;type/&quot; is</span>
</span><span class='line'><span class="cm">     *                not included in the name.  Can be null to require an</span>
</span><span class='line'><span class="cm">     *                explicit type.</span>
</span><span class='line'><span class="cm">     * @param defPackage Optional default package to find, if &quot;package:&quot; is</span>
</span><span class='line'><span class="cm">     *                   not included in the name.  Can be null to require an</span>
</span><span class='line'><span class="cm">     *                   explicit package.</span>
</span><span class='line'><span class="cm">     * </span>
</span><span class='line'><span class="cm">     * @return int The associated resource identifier.  Returns 0 if no such</span>
</span><span class='line'><span class="cm">     *         resource was found.  (0 is not a valid resource ID.)</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getIdentifier</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">String</span> <span class="n">defType</span><span class="o">,</span> <span class="n">String</span> <span class="n">defPackage</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Ignore</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">mAssets</span><span class="o">.</span><span class="na">getResourceIdentifier</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">defType</span><span class="o">,</span> <span class="n">defPackage</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>间接API</h3>

<p>实际上上述API调用的是AssetManager.class中的native方法。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Retrieve the resource identifier for the given resource name.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="cm">/*package*/</span> <span class="kd">native</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">getResourceIdentifier</span><span class="o">(</span><span class="n">String</span> <span class="n">type</span><span class="o">,</span>
</span><span class='line'>                                                       <span class="n">String</span> <span class="n">name</span><span class="o">,</span>
</span><span class='line'>                                                       <span class="n">String</span> <span class="n">defPackage</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00J4DXWDG/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00J4DXWDG&linkCode=as2&tag=droidyue-23">Android编程权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00J4DXWDG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011F7WU4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F7WU4&linkCode=as2&tag=droidyue-23">收藏必备：Java编程思想</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011F7WU4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011C2P7W/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011C2P7W&linkCode=as2&tag=droidyue-23">经典著作：人月神话</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011C2P7W" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[十分钟掌握SQLite操作]]></title>
    <link href="http://droidyue.com/blog/2014/09/08/learn-sqlite-in-a-very-fast-way/"/>
    <updated>2014-09-08T20:45:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/08/learn-sqlite-in-a-very-fast-way</id>
    <content type="html"><![CDATA[<p>最近用Ruby写了一个七牛的demo参赛作品，使用了sqlite3，用到很多操作，利用假期的时间，简单做一个快速掌握SQLite命令的小入门。</p>

<p>SQLite是一个开放源代码的数据库引擎，具有独立，无服务器依赖，零配置，支持事务等特点。SQLite一直以轻量级为特点，在移动和嵌入式设备上使用广泛，官方称其是世界上部署最广泛的数据库引擎。</p>

<!--more-->


<p>本文主要侧重部分常用操作命令的介绍。试图以最简单的示例来展示如何操作。</p>

<h2>强大的命令集</h2>

<p>首先我们看一下sqlite3提供了哪些强大的命令。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .help
</span><span class='line'>.backup ?DB? FILE      Backup DB <span class="o">(</span>default <span class="s2">&quot;main&quot;</span><span class="o">)</span> to FILE
</span><span class='line'>.bail ON|OFF           Stop after hitting an error.  Default OFF
</span><span class='line'>.databases             List names and files of attached databases
</span><span class='line'>.dump ?TABLE? ...      Dump the database in an SQL text format
</span><span class='line'>                         If TABLE specified, only dump tables matching
</span><span class='line'>                         LIKE pattern TABLE.
</span><span class='line'>.echo ON|OFF           Turn <span class="nb">command echo </span>on or off
</span><span class='line'>.exit                  Exit this program
</span><span class='line'>.explain ?ON|OFF?      Turn output mode suitable <span class="k">for </span>EXPLAIN on or off.
</span><span class='line'>                         With no args, it turns EXPLAIN on.
</span><span class='line'>.header<span class="o">(</span>s<span class="o">)</span> ON|OFF      Turn display of headers on or off
</span><span class='line'>.help                  Show this message
</span><span class='line'>.import FILE TABLE     Import data from FILE into TABLE
</span><span class='line'>.indices ?TABLE?       Show names of all indices
</span><span class='line'>                         If TABLE specified, only show indices <span class="k">for </span>tables
</span><span class='line'>                         matching LIKE pattern TABLE.
</span><span class='line'>.load FILE ?ENTRY?     Load an extension library
</span><span class='line'>.log FILE|off          Turn logging on or off.  FILE can be stderr/stdout
</span><span class='line'>.mode MODE ?TABLE?     Set output mode where MODE is one of:
</span><span class='line'>                         csv      Comma-separated values
</span><span class='line'>                         column   Left-aligned columns.  <span class="o">(</span>See .width<span class="o">)</span>
</span><span class='line'>                         html     HTML &lt;table&gt; code
</span><span class='line'>                         insert   SQL insert statements <span class="k">for </span>TABLE
</span><span class='line'>                         line     One value per line
</span><span class='line'>                         list     Values delimited by .separator string
</span><span class='line'>                         tabs     Tab-separated values
</span><span class='line'>                         tcl      TCL list elements
</span><span class='line'>.nullvalue STRING      Print STRING in place of NULL values
</span><span class='line'>.output FILENAME       Send output to FILENAME
</span><span class='line'>.output stdout         Send output to the screen
</span><span class='line'>.prompt MAIN CONTINUE  Replace the standard prompts
</span><span class='line'>.quit                  Exit this program
</span><span class='line'>.read FILENAME         Execute SQL in FILENAME
</span><span class='line'>.restore ?DB? FILE     Restore content of DB <span class="o">(</span>default <span class="s2">&quot;main&quot;</span><span class="o">)</span> from FILE
</span><span class='line'>.schema ?TABLE?        Show the CREATE statements
</span><span class='line'>                         If TABLE specified, only show tables matching
</span><span class='line'>                         LIKE pattern TABLE.
</span><span class='line'>.separator STRING      Change separator used by output mode and .import
</span><span class='line'>.show                  Show the current values <span class="k">for </span>various settings
</span><span class='line'>.stats ON|OFF          Turn stats on or off
</span><span class='line'>.tables ?TABLE?        List names of tables
</span><span class='line'>                         If TABLE specified, only list tables matching
</span><span class='line'>                         LIKE pattern TABLE.
</span><span class='line'>.timeout MS            Try opening locked tables <span class="k">for </span>MS milliseconds
</span><span class='line'>.vfsname ?AUX?         Print the name of the VFS stack
</span><span class='line'>.width NUM1 NUM2 ...   Set column widths <span class="k">for</span> <span class="s2">&quot;column&quot;</span> mode
</span><span class='line'>.timer ON|OFF          Turn the CPU timer measurement on or off
</span><span class='line'>sqlite&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>以&#8221;.&ldquo;开始的命令规则</h2>

<p>看到了上面的全部命令，可以观察到，所有的命令都是以&#8221;.&ldquo;开始的。而常用的SQL语句是格式自由的，并且可以跨越多行，空白字符（whitespace）和注释可以出现在任何地方。而SQLite中以.开始的命令有更多的限制，具体如下</p>

<ul>
<li>所有命令以 <strong>.</strong> 开始，并且 <strong>.</strong> 的左侧不包含任何空白字符</li>
<li>所有命令必须全部包含在一行输入行中</li>
<li>所有命令不能出现在SQL语句之中</li>
<li>命令不识别注释</li>
</ul>


<h2>常用操作</h2>

<h3>创建一个数据库文件</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#找一个不存在的文件</span>
</span><span class='line'>09:35:16-androidyue/tmp<span class="nv">$ </span>cat test.db
</span><span class='line'>cat: test.db: No such file or directory
</span><span class='line'>
</span><span class='line'><span class="c">#使用sqlite3 想要创建的数据库文件</span>
</span><span class='line'>09:35:28-androidyue/tmp<span class="nv">$ </span>sqlite3 test.db
</span><span class='line'>
</span><span class='line'><span class="c">#进入sqlite，执行建表语句</span>
</span><span class='line'>sqlite&gt; CREATE TABLE qn_uploaded<span class="o">(</span>filePath VARCHAR<span class="o">(</span>255<span class="o">)</span>, bucket VARCHAR<span class="o">(</span>63<span class="o">)</span>,  lastModified FLOAT<span class="o">)</span>;
</span><span class='line'><span class="c">#退出SQLite</span>
</span><span class='line'>sqlite&gt; .exit
</span><span class='line'>
</span><span class='line'><span class="c">#查看指定的文件，创建成功</span>
</span><span class='line'>09:42:26-androidyue/tmp<span class="nv">$ </span>cat test.db
</span><span class='line'>09:44:45-androidyue/tmp<span class="nv">$ </span>dedqn_uploadedCREATE TABLE qn_uploaded<span class="o">(</span>filePath VARCHAR<span class="o">(</span>255<span class="o">)</span>, bucket VARCHAR<span class="o">(</span>63<span class="o">)</span>,  lastModified FLOAT<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>打开已存在的数据库文件</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>22:56:15-androidyue~ <span class="nv">$ </span>sqlite3 database_file.db
</span></code></pre></td></tr></table></div></figure>


<h3>查看数据库</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .databases
</span><span class='line'>seq  name             file
</span><span class='line'>---  ---------------  ----------------------------------------------------------
</span><span class='line'>0    main             /home/androidyue/qiniu/.qiniu.db
</span><span class='line'>1    temp
</span></code></pre></td></tr></table></div></figure>


<h3>查看数据表</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .tables
</span><span class='line'>qn_uploaded
</span></code></pre></td></tr></table></div></figure>


<h3>查看建表语句</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .schema qn_uploaded
</span><span class='line'>CREATE TABLE qn_uploaded<span class="o">(</span>filePath VARCHAR<span class="o">(</span>255<span class="o">)</span>, bucket VARCHAR<span class="o">(</span>63<span class="o">)</span>,  lastModified FLOAT<span class="o">)</span>;
</span></code></pre></td></tr></table></div></figure>


<h3>显示字段名称</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#没有开启</span>
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png|droidyue|1410096518.43964
</span><span class='line'>
</span><span class='line'><span class="c">#开启之后</span>
</span><span class='line'>sqlite&gt; .header on
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>filePath|bucket|lastModified
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png|droidyue|1410096518.43964
</span></code></pre></td></tr></table></div></figure>


<h3>导出数据表结构和数据(文本形式)</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .dump qn_uploaded
</span><span class='line'>PRAGMA <span class="nv">foreign_keys</span><span class="o">=</span>OFF;
</span><span class='line'>BEGIN TRANSACTION;
</span><span class='line'>CREATE TABLE qn_uploaded<span class="o">(</span>filePath VARCHAR<span class="o">(</span>255<span class="o">)</span>, bucket VARCHAR<span class="o">(</span>63<span class="o">)</span>,  lastModified FLOAT<span class="o">)</span>;
</span><span class='line'>INSERT INTO <span class="s2">&quot;qn_uploaded&quot;</span> VALUES<span class="o">(</span><span class="s1">&#39;/home/androidyue/Documents/octopress/public/images/dotted-border.png&#39;</span>,<span class="s1">&#39;droidyue&#39;</span>,1410096552.54864<span class="o">)</span>;
</span><span class='line'>COMMIT;
</span></code></pre></td></tr></table></div></figure>


<h2>调整输出</h2>

<p>sqlite3程序可以使用八种不同的格式显示结果。 这些格式是&#8221;csv&#8221;, &ldquo;column&rdquo;, &ldquo;html&rdquo;, &ldquo;insert&rdquo;, &ldquo;line&rdquo;, &ldquo;list&rdquo;, &ldquo;tabs&rdquo;, and &ldquo;tcl&rdquo;. 你可以使用<strong>.mode</strong>命令来进行切换输出格式</p>

<p>默认的输出模式list，使用了list模式，每条查询结果记录都会输出到一行，每一列使用一个分割符分割，默认的分割符是 &ldquo;<strong>|</strong>&#8220;，list模式有一个常用的使用情况，就是当你想对查询结果记性额外处理（比如AWK处理）时，会事半功倍。</p>

<h3>列表模式输出</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png|droidyue|1410096518.43964
</span></code></pre></td></tr></table></div></figure>


<h3>修改列表模式分割符</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .separator <span class="s2">&quot;, &quot;</span>
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png, droidyue, 1410096518.43964
</span></code></pre></td></tr></table></div></figure>


<h3>使用Line模式</h3>

<p>每行的输出格式为 <code>字段名 =  字段值</code></p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .mode line
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>    <span class="nv">filePath</span> <span class="o">=</span> /home/androidyue/Documents/octopress/public//images/email.png
</span><span class='line'>      <span class="nv">bucket</span> <span class="o">=</span> droidyue
</span><span class='line'><span class="nv">lastModified</span> <span class="o">=</span> 1410096518.43964
</span></code></pre></td></tr></table></div></figure>


<h3>使用列模式</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .mode column
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png  droidyue    1410096518.43964
</span><span class='line'>/home/androidyue/Documents/octopress/public/images/rss.png     droidyue    1410096552.54764
</span></code></pre></td></tr></table></div></figure>


<h2>输出内容</h2>

<h3>输出结果</h3>

<p>默认情况下，所有的查询结果都是都是作为标准的输出展示。使用.output可以将输出结果定向到文件中。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sqlite&gt; .output /tmp/test.txt
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from qn_uploaded;
</span><span class='line'>sqlite&gt; .exit
</span><span class='line'>17:48:54-androidyue~/Documents/octopress/qiniu <span class="o">(</span>master<span class="o">)</span><span class="nv">$ </span>cat /tmp/test.txt
</span><span class='line'>file  bucket         last
</span><span class='line'>----  -------------  ----
</span><span class='line'>/home/androidyue/Documents/octopress/public//images/email.png  droidyue       1410096518.43964
</span><span class='line'>/home/androidyue/Documents/octopress/public/images/rss.png  droidyue       1410096552.54764
</span></code></pre></td></tr></table></div></figure>


<h2>备份和恢复</h2>

<h3>备份</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#语法 .backup ?DB? FILE      Backup DB (default &quot;main&quot;) to FILE</span>
</span><span class='line'>sqlite&gt; .backup main /tmp/main.txt
</span></code></pre></td></tr></table></div></figure>


<h3>恢复</h3>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#语法.restore ?DB? FILE     Restore content of DB (default &quot;main&quot;) from FILE</span>
</span><span class='line'>.restore main  /tmp/main.txt
</span></code></pre></td></tr></table></div></figure>


<h3>其他</h3>

<ul>
<li> <a href="http://www.amazon.cn/gp/product/B00COG3W58/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00COG3W58&linkCode=as2&tag=droidyue-23">SQL必知必会</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00COG3W58" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B006K2EHL0/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B006K2EHL0&linkCode=as2&tag=droidyue-23">SQLite权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B006K2EHL0" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00457W5DO/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00457W5DO&linkCode=as2&tag=droidyue-23">揭示facebook上市背后的秘密</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00457W5DO" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[来傲游浏览器工作]]></title>
    <link href="http://droidyue.com/blog/2014/09/01/wanna-work-at-maxthon/"/>
    <updated>2014-09-01T12:16:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/01/wanna-work-at-maxthon</id>
    <content type="html"><![CDATA[<p>帮公司发布一下一些职位的招聘，未来的小伙伴赶紧投递简历哈。投递给我，会有更大的面试特权哈。发送简历给我 andrewallanwallace#gmail.com, 请将#替换成@。</p>

<p>还等什么，快到碗里来。</p>

<!--more-->


<h2>高级Android开发工程师</h2>

<h3>岗位职责</h3>

<ul>
<li>负责安卓平台上的应用开发；</li>
</ul>


<h3>岗位要求</h3>

<ul>
<li>五年以上开发经验；</li>
<li>两年以上Android SDK及 NDK使用经验；</li>
<li>精通JAVA，有面向对象编程的思想；</li>
<li>优秀的分析解决问题的能力；</li>
<li>良好的口头及书面沟通技巧；</li>
<li>领导跨部门核心项目团队的能力。</li>
</ul>


<h3>有以下经验者更佳</h3>

<ul>
<li>熟悉OpenGL；</li>
<li>熟悉C/C++;</li>
<li>有其他移动平台(如iOS)开发经验者优先；</li>
<li>能适应产品快速发布的环境，有敏捷开发经验者更佳；</li>
<li>有TDD经验及结对编程经验者优先。</li>
</ul>


<h2>iOS 开发工程师 (浏览器方向)</h2>

<h3>岗位职责</h3>

<ul>
<li>负责iOS平台浏览器以及相关应用的开发测试和维护.</li>
</ul>


<h3>岗位要求</h3>

<ul>
<li>3年以上开发经验; 1年以上iOS或者Mac应用开发经验;</li>
<li>熟悉CocoaTouch框架, 深入了解Objective-C, 有良好的编程习惯;</li>
<li>对技术有浓厚兴趣, 有较好的产品敏感度, 善于沟通, 良好的团队合作精神;</li>
<li>良好的分析和解决问题的能力;</li>
</ul>


<h3>有以下经验者更佳：</h3>

<ul>
<li>对c/c++有深入了解, 有1年以上实际相关开发经验;</li>
<li>熟悉javascript/css, 有实际的开发经验;</li>
<li>了解webkit和iOS网络架构;</li>
<li>有其他移动平台相关开发经验.</li>
</ul>


<h2>Linux应用运维工程师</h2>

<h3>岗位职责</h3>

<ul>
<li>负责上线应用部署，故障定位，业务优化</li>
</ul>


<h3>岗位要求</h3>

<ul>
<li>二年以上互联网公司相关工作经验；</li>
<li>至少能够编写一种脚本语言(Bash,Perl,Python) ，了解代码版本管理系统 （SVN、Git）；</li>
<li>至少熟练运用一种 Linux 发行版本 （CentOS、Debian、Ubuntu、Arch、Gentoo）；</li>
<li>理解并能熟练运用 iptables、apache、nginx、LVS、nagios、zabbix、cacti等常见的开源软件；</li>
<li>有高度的责任心、较强的沟通能力和良好的团队合作精神做事细致；</li>
<li>主动性强，善于主动思考问题，并提出自己的解决思路。</li>
</ul>


<h2>高级Linux运维工程师</h2>

<h3>岗位职责</h3>

<ul>
<li>负责国内外服务器的系统、应用运维工作，包括系统监控、系统升级、系统安全、性能优化等；</li>
<li>参与公共类运维支撑平台的建设；</li>
<li>参与部门运维自动化实施；</li>
<li>运维相关的新技术研究；</li>
<li>负责公司内部mysql数据库管理工作(主要是日常数据库维护工作) 。</li>
</ul>


<h3>岗位要求</h3>

<ul>
<li>两年以上服务器维护经验，了解互联网运用架构，管理过50台以上Linux服务器经验；</li>
<li>有一定的开发能力（能使用shell、perl,python等脚本语言）；</li>
<li>有高度的责任心、较强的沟通能力和良好的团队合作精神做事细致，主动性强，善于主动思考问题，并提出自己的解决思路；</li>
<li>有维护mysql的数据库的经验(熟悉mysql主从原理及myisam,innodb存储引擎原理)。</li>
</ul>


<p>同时，这些职位也同时在热招，测试工程师，安卓开发工程师，网页设计师（游戏），游戏客服，手机推广专员，前端工程师，服务器开发工程师，更多详细内容，请参考<a href="http://www.maxthon.cn/jobs/" target="_blank">来傲游工作</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java细节：字符串的拼接]]></title>
    <link href="http://droidyue.com/blog/2014/08/30/java-details-string-concatenation/"/>
    <updated>2014-08-30T18:18:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/30/java-details-string-concatenation</id>
    <content type="html"><![CDATA[<p>工作日忙于项目的逻辑实现，周六有点时间，从书柜里拿出厚厚的英文版<em>Thinking In Java</em>，读到了字符串对象的拼接。参考着这本书做个翻译，加上自己思考的东西，写上这篇文章记录一下。</p>

<!--more-->


<h2>不可变的String对象</h2>

<p>在Java中,String对象是不可变的(Immutable)。在代码中，可以创建多个某一个String对象的别名。但是这些别名都是的引用是相同的。<br/>
比如s1和s2都是&#8221;droidyue.com&#8221;对象的别名，别名保存着到真实对象的引用。所以s1 = s2</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">s1</span> <span class="o">=</span> <span class="s">&quot;droidyue.com&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">s2</span> <span class="o">=</span> <span class="n">s1</span><span class="o">;</span>
</span><span class='line'><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;s1 and s2 has the same reference =&quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">s1</span> <span class="o">==</span> <span class="n">s2</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Java中仅有的重载运算符</h2>

<p>在Java中，唯一被重载的运算符就是字符串的拼接相关的。<code>+</code>,<code>+=</code>。除此之外，Java设计者不允许重载其他的运算符。</p>

<h2>拼接剖析</h2>

<h3>真的有性能代价么</h3>

<p>了解了上面两点，可能会有这样的思考，既然Sting对象不可变，那么多个（三个及以上）字符串拼接必然产生多余的中间String对象。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span> <span class="n">userName</span> <span class="o">=</span> <span class="s">&quot;Andy&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">age</span> <span class="o">=</span> <span class="s">&quot;24&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">job</span> <span class="o">=</span> <span class="s">&quot;Developer&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">info</span> <span class="o">=</span> <span class="n">userName</span> <span class="o">+</span> <span class="n">age</span> <span class="o">+</span> <span class="n">job</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>要得到上面的info，就会userName和age拼接生成临时一个String对象t1,内容为<code>Andy24</code>，然后有t1和job拼接生成最终我们需要的info对象，这其中，产生了一个中间的t1，而且t1创建之后，没有主动回收，势必会占一定的空间。如果是一个很多(假设上百个，多见于对对象的toString的调用)字符串的拼接，那么代价就更大了，性能一下会降低很多。</p>

<h3>编译器的优化处理</h3>

<p>真的会有上面的性能代价么，字符串拼接这么常用，没有特殊的处理优化么，答案是有的，这个优化进行在编译器编译.java到bytecode时。</p>

<p>一个Java程序如果想运行起来，需要经过两个时期，编译时和运行时。在编译时，Java 编译器(Compiler)将java文件转换成字节码。在运行时，Java虚拟机（JVM）运行编译时生成的字节码。通过这样两个时期，Java做到了所谓的一处编译，处处运行。</p>

<p>我们实验一下编译期都做了哪些优化，我们制造一段可能会出现性能代价的代码。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Concatenation</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">userName</span> <span class="o">=</span> <span class="s">&quot;Andy&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">age</span> <span class="o">=</span> <span class="s">&quot;24&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">job</span> <span class="o">=</span> <span class="s">&quot;Developer&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">info</span> <span class="o">=</span> <span class="n">userName</span> <span class="o">+</span> <span class="n">age</span> <span class="o">+</span> <span class="n">job</span><span class="o">;</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">info</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>对Concatenation.java进行编译一下。得到Concatenation.class</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>javac Concatenation.java
</span></code></pre></td></tr></table></div></figure>


<p>然后我们使用javap反编译一下编译出来的Concatenation.class文件。<code>javap -c Concatenation.class</code>。如果没有找到javap命令，请考虑将javap所在目录加入环境变量或者使用javap的完整路径。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>17:22:04-androidyue~/workspace_adt/strings/src<span class="nv">$ </span>javap -c Concatenation.class
</span><span class='line'>Compiled from <span class="s2">&quot;Concatenation.java&quot;</span>
</span><span class='line'>public class Concatenation <span class="o">{</span>
</span><span class='line'>  public Concatenation<span class="o">()</span>;
</span><span class='line'>    Code:
</span><span class='line'>       0: aload_0
</span><span class='line'>       1: invokespecial <span class="c">#1                  // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>       4: <span class="k">return        </span>
</span><span class='line'>
</span><span class='line'><span class="k">  </span>public static void main<span class="o">(</span>java.lang.String<span class="o">[])</span>;
</span><span class='line'>    Code:
</span><span class='line'>       0: ldc           <span class="c">#2                  // String Andy</span>
</span><span class='line'>       2: astore_1
</span><span class='line'>       3: ldc           <span class="c">#3                  // String 24</span>
</span><span class='line'>       5: astore_2
</span><span class='line'>       6: ldc           <span class="c">#4                  // String Developer</span>
</span><span class='line'>       8: astore_3
</span><span class='line'>       9: new           <span class="c">#5                  // class java/lang/StringBuilder</span>
</span><span class='line'>      12: dup
</span><span class='line'>      13: invokespecial <span class="c">#6                  // Method java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>      16: aload_1
</span><span class='line'>      17: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      20: aload_2
</span><span class='line'>      21: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      24: aload_3
</span><span class='line'>      25: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      28: invokevirtual <span class="c">#8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span>
</span><span class='line'>      31: astore        4
</span><span class='line'>      33: getstatic     <span class="c">#9                  // Field java/lang/System.out:Ljava/io/PrintStream;</span>
</span><span class='line'>      36: aload         4
</span><span class='line'>      38: invokevirtual <span class="c">#10                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
</span><span class='line'>      41: <span class="k">return</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中，ldc，astore等为java字节码的指令，类似汇编指令。后面的注释使用了Java相关的内容进行了说明。
我们可以看到上面有很多StringBuilder,但是我们在Java代码里并没有显示地调用，这就是Java编译器做的优化，当Java编译器遇到字符串拼接的时候，会创建一个StringBuilder对象，后面的拼接，实际上是调用StringBuilder对象的append方法。这样就不会有我们上面担心的问题了。</p>

<h3>仅靠编译器优化？</h3>

<p>既然编译器帮我们做了优化，是不是仅仅依靠编译器的优化就够了呢，当然不是。 <br/>
下面我们看一段未优化性能较低的代码</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span>  <span class="nf">implicitUseStringBuilder</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">values</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span> <span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">result</span> <span class="o">+=</span> <span class="n">values</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用javac编译，使用javap查看</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>public void implicitUseStringBuilder<span class="o">(</span>java.lang.String<span class="o">[])</span>;
</span><span class='line'>    Code:
</span><span class='line'>       0: ldc           <span class="c">#11                 // String </span>
</span><span class='line'>       2: astore_2
</span><span class='line'>       3: iconst_0
</span><span class='line'>       4: istore_3
</span><span class='line'>       5: iload_3
</span><span class='line'>       6: aload_1
</span><span class='line'>       7: arraylength
</span><span class='line'>       8: if_icmpge     38
</span><span class='line'>      11: new           <span class="c">#5                  // class java/lang/StringBuilder</span>
</span><span class='line'>      14: dup
</span><span class='line'>      15: invokespecial <span class="c">#6                  // Method java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>      18: aload_2
</span><span class='line'>      19: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      22: aload_1
</span><span class='line'>      23: iload_3
</span><span class='line'>      24: aaload
</span><span class='line'>      25: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      28: invokevirtual <span class="c">#8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;</span>
</span><span class='line'>      31: astore_2
</span><span class='line'>      32: iinc          3, 1
</span><span class='line'>      35: goto          5
</span><span class='line'>      38: getstatic     <span class="c">#9                  // Field java/lang/System.out:Ljava/io/PrintStream;</span>
</span><span class='line'>      41: aload_2
</span><span class='line'>      42: invokevirtual <span class="c">#10                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>
</span><span class='line'>      45: <span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>8: if_icmpge     38</code> 和<code>35: goto          5</code>构成了一个循环。<code>8: if_icmpge     38</code>的意思是如果JVM操作数栈的整数对比大于等于（i &lt; values.length的相反结果）成立，则跳到第38行（System.out）。<code>35: goto          5</code>则表示直接跳到第5行。</p>

<p>但是这里面有一个很重要的就是StringBuilder对象创建发生在循环之间，也就是意味着有多少次循环会创建多少个StringBuilder对象，这样明显不好。赤裸裸地低水平代码啊。</p>

<p>稍微优化一下，瞬间提升逼格。</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">explicitUseStringBuider</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">StringBuilder</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>  <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">values</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span> <span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">values</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>对应的编译后的信息</p>

<figure class='code'><figcaption><span>fileos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>public void explicitUseStringBuider<span class="o">(</span>java.lang.String<span class="o">[])</span>;
</span><span class='line'>    Code:
</span><span class='line'>       0: new           <span class="c">#5                  // class java/lang/StringBuilder</span>
</span><span class='line'>       3: dup
</span><span class='line'>       4: invokespecial <span class="c">#6                  // Method java/lang/StringBuilder.&quot;&lt;init&gt;&quot;:()V</span>
</span><span class='line'>       7: astore_2
</span><span class='line'>       8: iconst_0
</span><span class='line'>       9: istore_3
</span><span class='line'>      10: iload_3
</span><span class='line'>      11: aload_1
</span><span class='line'>      12: arraylength
</span><span class='line'>      13: if_icmpge     30
</span><span class='line'>      16: aload_2
</span><span class='line'>      17: aload_1
</span><span class='line'>      18: iload_3
</span><span class='line'>      19: aaload
</span><span class='line'>      20: invokevirtual <span class="c">#7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;</span>
</span><span class='line'>      23: pop
</span><span class='line'>      24: iinc          3, 1
</span><span class='line'>      27: goto          10
</span><span class='line'>      30: <span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>


<p>从上面可以看出，<code>13: if_icmpge     30</code>和<code>27: goto          10</code>构成了一个loop循环，而<code>0: new           #5</code>位于循环之外，所以不会多次创建StringBuilder.</p>

<p>总的来说，我们在循环体中需要尽量避免隐式或者显式创建StringBuilder. 所以那些了解代码如何编译，内部如何执行的人，写的代码档次都比较高。</p>

<p>以上文章，如有错误，请批评指正 。</p>

<h3>推荐阅读</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B0011F7WU4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F7WU4&linkCode=as2&tag=droidyue-23">Java编程思想(第4版)</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011F7WU4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011C3CVA/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011C3CVA&linkCode=as2&tag=droidyue-23">Java编程思想（英文版）</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011C3CVA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00D2ID4PK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00D2ID4PK&linkCode=as2&tag=droidyue-23">深入理解Java虚拟机:JVM高级特性与最佳实践</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00D2ID4PK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[也说CSS之not：为样式加入例外处理]]></title>
    <link href="http://droidyue.com/blog/2014/08/30/add-exceptions-in-applying-css/"/>
    <updated>2014-08-30T11:37:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/30/add-exceptions-in-applying-css</id>
    <content type="html"><![CDATA[<p>使用Octopress作为日常的博客发布工具，在加入多说评论的时候遇到了一个问题，顺带接触了css中的not选择，<strong>用来将某些Css选择器加入例外，不应用指定的css样式</strong>。</p>

<!--more-->


<h2>用法</h2>

<p> :not(selector),参数selector为css中的选择器，可以是元素，类，id等。如不清楚，可以查阅<a href="http://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank">CSS3 选择器</a>了解详细。</p>

<p> 语法</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/*单个使用*/</span>
</span><span class='line'> <span class="nd">:not</span><span class="o">(</span><span class="nt">selector</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">property</span><span class="o">:</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c">/*多个使用*/</span>
</span><span class='line'> <span class="nd">:not</span><span class="o">(</span><span class="nt">selector1</span><span class="o">)</span><span class="nd">:not</span><span class="o">(</span><span class="nt">selector2</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">property</span><span class="o">:</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>例子</h2>

<p>下面代码，所有的li元素都有一个样式，就是背景色设置为红色，这里我们把class为special和id为specialLi的li元素加入例外，不应用这个样式，我们就可以这样做。</p>

<figure class='code'><figcaption><span>lineos:false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">li</span><span class="nd">:not</span><span class="o">(</span><span class="nc">.special</span><span class="o">)</span><span class="nd">:not</span><span class="o">(</span><span class="nf">#specialLi</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">background-color</span><span class="o">:</span> <span class="nb">red</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="nt">&lt;/style&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'><span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;special&quot;</span><span class="nt">&gt;</span>Android<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;</span>Chrome<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li</span> <span class="na">id=</span><span class="s">&quot;specialLi&quot;</span><span class="nt">&gt;</span>Google Glass<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果就是如下这样</p>

<ul>
<li class="special">Android</li>
<li style="background-color:red">Chrome</li>
<li id="specialLi">Google Glass</li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B008HN791U/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B008HN791U&linkCode=as2&tag=droidyue-23">CSS禅意花园</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B008HN791U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011F5SIC/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F5SIC&linkCode=as2&tag=droidyue-23">典藏经典：CSS权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011F5SIC" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00ASVF4Y8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ASVF4Y8&linkCode=as2&tag=droidyue-23">HTML5与CSS3设计模式</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ASVF4Y8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[龟兔赛跑中为什么要用兔子]]></title>
    <link href="http://droidyue.com/blog/2014/08/30/story-thinking-guituisaipao/"/>
    <updated>2014-08-30T10:09:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/30/story-thinking-guituisaipao</id>
    <content type="html"><![CDATA[<p>龟兔赛跑的童话故事，想必是家喻户晓，前几天很好奇，为什么要故事要使用兔子，为什么不使用狗狼或者人类作为角色呢？</p>

<p>下面不妨替我慢慢讲解</p>

<p>龟兔赛跑这篇故事摘自古希腊的文学著作《伊索寓言》，《伊索寓言》的一系列故事，大都篇辐短小，却能阐述大道理，深具哲理。</p>

<!--more-->


<p>《伊索寓言》里面的角色大多是拟人化的动物，它们用人的方式来表现行为举
止，作者借以形象化地说出某种思想、道德观或生活经验，使读者从中得到教育。</p>

<p>《伊索寓言》中，有关狮子、豺狼、毒蛇、鳄鱼和狐狸象征著统治者，他们残暴专横，对人民姿意巧取横夺。是不是有点像古代诗人写诗的时候常用到的借古讽今的手法啊。</p>

<p>上面可以说明为什么不使用人类的了。那么为什么又要兔子呢？其实兔子本身有着某种象征。</p>

<p>野兔在体育界的某些项目中被认为是速度的象征，一些以速度见长的运动员被冠以野兔的花名，如澳洲著名网球运动员休伊特</p>

<p>相信看到上面就明白了为什么用兔子了吧。所以兔子作为赛跑先天优势者和先天劣势者乌龟赛跑是可以被理解的。</p>

<p>最重要的应该是我们从这篇故事中学到的启发和思考。</p>

<p>这个故事的教训有两面：</p>

<ul>
<li>先天优势者：要虚心学习，谦虚做人，不要轻敌，因为骄兵必败，只有时刻都保持谦卑之心，才能保持头脑清醒，从而使做事更为成功。</li>
<li>先天弱势者：勿自暴自弃，保持自信，只有坚持目标，努力不懈，最后才可能成功。</li>
</ul>


<p>如果你有更好的解释，请告诉我哈。</p>

<h3>参考链接</h3>

<ul>
<li><a href="http://zh.wikipedia.org/wiki/%E9%BE%9C%E5%85%94%E8%B3%BD%E8%B7%91" target="_blank">龟兔赛跑@维基百科</a></li>
<li><a href="http://zh.wikipedia.org/zh-cn/%E5%85%94" target="_blank">兔子@维基百科</a></li>
<li><a href="http://zh.wikipedia.org/wiki/%E4%BC%8A%E7%B4%A2%E5%AF%93%E8%A8%80" target="_blank">伊索寓言@维基百科</a></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00AH8Z384/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00AH8Z384&linkCode=as2&tag=droidyue-23">如何提问最好</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00AH8Z384" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B003SRH9M4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003SRH9M4&linkCode=as2&tag=droidyue-23">经典译林:伊索寓言全集</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B003SRH9M4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00AR8JWA4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00AR8JWA4&linkCode=as2&tag=droidyue-23">清醒思考的艺术:你最好让别人去犯的52种思维错误</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00AR8JWA4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[技术小黑屋]]></title>
  <link href="https://droidyue.com/atom.xml" rel="self"/>
  <link href="https://droidyue.com/"/>
  <updated>2021-02-03T12:51:05+08:00</updated>
  <id>https://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[10年程序员都不一定搞清楚的文件路径]]></title>
    <link href="https://droidyue.com/blog/2021/02/03/the-file-paths-you-may-not-know/"/>
    <updated>2021-02-03T12:48:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/02/03/the-file-paths-you-may-not-know</id>
    <content type="html"><![CDATA[<p>在 Java 中，文件是很常用的概念，这其中文件路径是一个很基础的内容，因为文件的创建，读取，写入和删除等操作都是依赖于文件路径的。但是你仔细看一下Java中 <code>File</code>的 API 你会发现有这样三个方法返回路径。</p>

<ul>
<li>getPath（获取路径）</li>
<li>getAbsolutePath（获取绝对路径）</li>
<li>getCanonicalPath（获取规范路径）</li>
</ul>


<!--more-->


<p>了解这其中的差异，我们可以先看一看通用的路径的概念，即相对路径，绝对路径和规范路径。</p>

<h2>文件路径中的特殊字符</h2>

<ul>
<li><code>.</code>  用来代表当前的目录</li>
<li><code>..</code> 用来代表父目录</li>
<li><code>/</code>  为Linux/Mac等操作系统的路径分隔符</li>
<li><code>\</code>  为 Windows 路径分隔符</li>
<li><code>:</code>  为 Windows磁盘分割符,比如<code>C:</code></li>
</ul>


<h2>相对路径</h2>

<ul>
<li>相对路径指的是某个文件相对于<code>当前目录</code>的路径</li>
</ul>


<h3>举个例子</h3>

<p>有两个文件，路径为</p>

<ul>
<li>文件 <code>/tmp/a/a.txt</code></li>
<li>目录 <code>/tmp/b/</code></li>
</ul>


<p>那么
  * 文件(<code>a.txt</code>)相对当前目录(<code>b</code>)的相对路径就是<code>../a/a.txt</code></p>

<h2>绝对路径</h2>

<ul>
<li>绝对路径指的是从文件系统的根目录到当前文件的路径。</li>
<li>其中Windows的文件系统根目录可以是<code>C:</code>或者<code>D:</code>等</li>
<li>Linux和Mac 等系统的根目录是<code>/</code></li>
<li>另外，对于同一个文件，可以存在多个不同的绝对路径。</li>
</ul>


<h3>同一文件的多个绝对路径</h3>

<p>假设<code>C</code>盘下有<code>temp</code>和<code>temp1</code>两个目录</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp1</span>
</span></code></pre></td></tr></table></div></figure>


<p>那么这些都是指向同一个文件的绝对路径，且都是合法的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">test</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">test</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">TEST</span><span class="o">.</span><span class="na">TXT</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="o">.</span><span class="err">\</span><span class="n">test</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="nl">C:</span><span class="err">\</span><span class="n">temp1</span><span class="err">\</span><span class="o">..</span><span class="err">\</span><span class="n">temp</span><span class="err">\</span><span class="n">test</span><span class="o">.</span><span class="na">txt</span>
</span></code></pre></td></tr></table></div></figure>


<p>备注： Windows下路径不区分大小写。</p>

<h2>Canonical路径 规范路径</h2>

<ul>
<li>规范路径是从文件系统的根目录到当前文件的唯一的路径。</li>
<li>规范路径不像绝对路径那样有多个不同的值指向同一文件。</li>
<li>规范路径是绝对路径，但是绝对路径不一定是规范路径。</li>
<li>规范路径中移除了<code>.</code>和<code>..</code>等特殊字符</li>
</ul>


<p>举一个例子</p>

<p>一个相对路径为<code>.././Java.txt</code>的文件，</p>

<ul>
<li>它的绝对路径是 <code>/Users/androidyue/Documents/projects/PathSamples/.././Java.txt</code></li>
<li>它的规范路径是 <code>/Users/androidyue/Documents/projects/Java.txt</code></li>
</ul>


<p>备注：Canonical <code>kə-ˈnä-ni-kəl</code> 发音类似 可囊尼口</p>

<h2>回到 Java File方法中</h2>

<ul>
<li><code>getPath</code> 返回的路径可能是相对路径，也可能是绝对路径。</li>
<li><code>getAbsolutePath</code> 返回的路径是绝对路径</li>
<li><code>getCanonicalPath</code> 返回的路径是唯一的规范路径。</li>
</ul>


<h2>多说无益，上代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PathDemo</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Path of the given file :&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">File</span> <span class="n">child</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;.././Java.txt&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">displayPath</span><span class="o">(</span><span class="n">child</span><span class="o">);</span>
</span><span class='line'>        <span class="n">File</span> <span class="n">parent</span> <span class="o">=</span> <span class="n">child</span><span class="o">.</span><span class="na">getParentFile</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Path of the parent folder :&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">displayPath</span><span class="o">(</span><span class="n">parent</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">File</span> <span class="n">anotherFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;a.txt&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Path of another file(a.txt)&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">displayPath</span><span class="o">(</span><span class="n">anotherFile</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">File</span> <span class="n">anotherAbsFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;/tmp/a.txt&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Path of another file(/tmp/a.txt)&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">displayPath</span><span class="o">(</span><span class="n">anotherAbsFile</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">displayPath</span><span class="o">(</span><span class="n">File</span> <span class="n">testFile</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;path : &quot;</span> <span class="o">+</span> <span class="n">testFile</span><span class="o">.</span><span class="na">getPath</span><span class="o">());</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;absolute path : &quot;</span> <span class="o">+</span> <span class="n">testFile</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;canonical path : &quot;</span> <span class="o">+</span> <span class="n">testFile</span><span class="o">.</span><span class="na">getCanonicalPath</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行后，输出的日志为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Path</span> <span class="n">of</span> <span class="n">the</span> <span class="n">given</span> <span class="n">file</span> <span class="o">:</span>
</span><span class='line'><span class="n">path</span> <span class="o">:</span> <span class="o">.././</span><span class="n">Java</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">absolute</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">PathSamples</span><span class="o">/.././</span><span class="n">Java</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">canonical</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">Java</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">Path</span> <span class="n">of</span> <span class="n">the</span> <span class="n">parent</span> <span class="n">folder</span> <span class="o">:</span>
</span><span class='line'><span class="n">path</span> <span class="o">:</span> <span class="o">../.</span>
</span><span class='line'><span class="n">absolute</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">PathSamples</span><span class="o">/../.</span>
</span><span class='line'><span class="n">canonical</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span>
</span><span class='line'><span class="n">Path</span> <span class="n">of</span> <span class="n">another</span> <span class="nf">file</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span><span class="o">)</span>
</span><span class='line'><span class="n">path</span> <span class="o">:</span> <span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">absolute</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">PathSamples</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">canonical</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">projects</span><span class="o">/</span><span class="n">PathSamples</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">Path</span> <span class="n">of</span> <span class="n">another</span> <span class="nf">file</span><span class="o">(/</span><span class="n">tmp</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span><span class="o">)</span>
</span><span class='line'><span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">absolute</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'><span class="n">canonical</span> <span class="n">path</span> <span class="o">:</span> <span class="o">/</span><span class="kd">private</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">a</span><span class="o">.</span><span class="na">txt</span>
</span><span class='line'>
</span><span class='line'><span class="n">Process</span> <span class="n">finished</span> <span class="n">with</span> <span class="n">exit</span> <span class="n">code</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="https://javarevisited.blogspot.com/2014/08/difference-between-getpath-getabsolutepath-getcanonicalpath-java.html">https://javarevisited.blogspot.com/2014/08/difference-between-getpath-getabsolutepath-getcanonicalpath-java.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac下关于DNS服务器的终端操作汇总]]></title>
    <link href="https://droidyue.com/blog/2021/01/25/change-network-connection-dns-server-on-mac-os/"/>
    <updated>2021-01-25T12:13:00+08:00</updated>
    <id>https://droidyue.com/blog/2021/01/25/change-network-connection-dns-server-on-mac-os</id>
    <content type="html"><![CDATA[<p>Mac中有时候我们需要调整DNS来处理一些事情，作为终端控，使用终端调整DNS顺理成章，如下为一些关于DNS服务器终端处理的记录。</p>

<!--more-->


<h2>获取网络服务</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">listallnetworkservices</span>
</span><span class='line'><span class="n">An</span> <span class="nf">asterisk</span> <span class="o">(*)</span> <span class="n">denotes</span> <span class="n">that</span> <span class="n">a</span> <span class="n">network</span> <span class="n">service</span> <span class="n">is</span> <span class="n">disabled</span><span class="o">.</span>
</span><span class='line'><span class="n">USB</span> <span class="mi">10</span><span class="o">/</span><span class="mi">100</span><span class="o">/</span><span class="mi">1000</span> <span class="n">LAN</span>
</span><span class='line'><span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span>
</span></code></pre></td></tr></table></div></figure>


<h2>获取WIFI的DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">getdnsservers</span> <span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span>
</span><span class='line'><span class="mf">8.8</span><span class="o">.</span><span class="mf">8.8</span>
</span></code></pre></td></tr></table></div></figure>


<h2>获取<code>USB 10/100/1000 LAN</code>的DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">getdnsservers</span> <span class="s">&quot;USB 10/100/1000 LAN&quot;</span>
</span><span class='line'><span class="n">There</span> <span class="n">aren</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">any</span> <span class="n">DNS</span> <span class="n">Servers</span> <span class="n">set</span> <span class="n">on</span> <span class="n">USB</span> <span class="mi">10</span><span class="o">/</span><span class="mi">100</span><span class="o">/</span><span class="mi">1000</span> <span class="n">LAN</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>设置WIFI DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">setdnsservers</span> <span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span> <span class="mf">114.114</span><span class="o">.</span><span class="mf">114.114</span>
</span></code></pre></td></tr></table></div></figure>


<h2>设置WIFI 多个DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">setdnsservers</span> <span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span> <span class="mf">8.8</span><span class="o">.</span><span class="mf">8.8</span> <span class="mf">114.114</span><span class="o">.</span><span class="mf">114.114</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用空格分别多个DNS服务器地址</p>

<h2>清空WIFI DNS服务器地址</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">networksetup</span> <span class="o">-</span><span class="n">setdnsservers</span> <span class="n">Wi</span><span class="o">-</span><span class="n">Fi</span> <span class="n">Empty</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[URL中的 # 原来是这个意思]]></title>
    <link href="https://droidyue.com/blog/2020/11/24/hash-symbol-in-url/"/>
    <updated>2020-11-24T18:30:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/11/24/hash-symbol-in-url</id>
    <content type="html"><![CDATA[<p>URL 是我们进行网络活动中很重要的概念，一个URL中可以包含域名，路径和参数等，</p>

<h2>一个典型的 URL</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">https:</span><span class="c1">//www.example.com/fruits.html?from=google#apple</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>这其中包含了</p>

<ul>
<li>协议： https</li>
<li>域名:  www.example.com</li>
<li>路径文件名: fruits.html</li>
<li>参数: from=google</li>
<li>片段： apple</li>
</ul>


<h2>#片段是什么</h2>

<ul>
<li>URL 中的 <code>#</code> 指的是一个片段</li>
<li>URL 片段 往往用来告知浏览器约定的一个滑动位置</li>
<li>如果一个 URL 指向了一个文档，那么片段指向的就是文档的某个内容区间。</li>
</ul>


<h2># 作用范围</h2>

<ul>
<li>会被本地浏览器处理</li>
<li>不会被服务器端接收处理</li>
</ul>


<h3>所以</h3>

<ul>
<li><code>www.example.com/fruits.html#apple</code></li>
<li><code>www.example.com/fruits.html#orange</code></li>
</ul>


<p>对应的情况是</p>

<ul>
<li>对于浏览器，上面的链接指向同一文档，但是具有不同的滑动位置</li>
<li>对于服务器，上面的链接指向同一文档，没有其他信息了。</li>
</ul>


<h2># 还能怎么用</h2>

<ul>
<li>考虑到在浏览器可以获取片段信息，我们可以利用 Javascript做一些事情</li>
<li>网页应用可以使用片段来实现参数控制，做到不刷新页面，展示不同的内容</li>
</ul>


<p>如下为 JavaScript获取片段的示例代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span>
</span></code></pre></td></tr></table></div></figure>


<h2>SEO 的影响</h2>

<p>基于上面的理解，<code>www.example.com/fruits.html#apple</code>和<code>www.example.com/fruits.html#orange</code> 会被搜索引擎当成一个链接。</p>

<p>如果不想被搜索引擎如上处理，有两种方式</p>

<ul>
<li>使用不同的网页链接如<code>www.example.com/fruits_apple.html</code>和<code>www.example.com/fruits_orange.html</code></li>
<li>使用<code>#!</code>，即<code>www.example.com/fruits.html#!apple</code>和<code>www.example.com/fruits.html#!orange</code>  这种方式，可能只是Google 支持，其他搜索引擎待验证。</li>
</ul>


<h2>参考内容</h2>

<ul>
<li><a href="https://www.oho.com/blog/explained-60-seconds-hash-symbols-urls-and-seo">https://www.oho.com/blog/explained-60-seconds-hash-symbols-urls-and-seo</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何自定义一个 Gradle 任务]]></title>
    <link href="https://droidyue.com/blog/2020/11/14/create-a-custom-gradle-task/"/>
    <updated>2020-11-14T20:28:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/11/14/create-a-custom-gradle-task</id>
    <content type="html"><![CDATA[<p>很多的项目是基于 gradle 构建，而且依托 gradle 的强大能力，我们可以实现更多的功能。比如像今天这样，我们会介绍如何创建一个自定义的 gradle 任务。</p>

<h2>修改文件</h2>

<ul>
<li>（Android 项目）app 模块下的 build.gradle 为例</li>
</ul>


<!--more-->


<h2>增加PrintInfoTask</h2>

<p>增加自定义的Task 分为两步</p>

<ul>
<li>增加Class声明 <code>PrintInfoTask</code></li>
<li>创建task <code>printInfo</code></li>
</ul>


<p>具体实施代码如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 定义类</span>
</span><span class='line'><span class="kd">class</span> <span class="nc">PrintInfoTask</span> <span class="kd">extends</span> <span class="n">DefaultTask</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@TaskAction</span>
</span><span class='line'>    <span class="n">def</span> <span class="nf">printInfo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">println</span> <span class="s">&quot;printInfoTask&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//声明 task</span>
</span><span class='line'><span class="n">task</span> <span class="nf">printInfo</span><span class="o">(</span><span class="nl">type:</span> <span class="n">PrintInfoTask</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中</p>

<ul>
<li><code>@TaskAction</code> 注解的方法，会在任务执行的时候，被自动调用。</li>
</ul>


<h2>如何执行</h2>

<p>使用我们上面创建的 <code>printInfo</code> 作为任务名执行就可以了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">./</span><span class="n">gradlew</span> <span class="n">printInfo</span>
</span></code></pre></td></tr></table></div></figure>


<h2>引入变量</h2>

<p>为了让定义的任务可以配置，我们往往需要引入变量来实现。</p>

<h2>外部变量无法直接使用</h2>

<p>我们尝试在 <code>printInfo</code> 中引入<code>rootProject</code>，如下修改</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">PrintInfoTask</span> <span class="kd">extends</span> <span class="n">DefaultTask</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@TaskAction</span>
</span><span class='line'>    <span class="n">def</span> <span class="nf">printInfo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">println</span> <span class="s">&quot;printInfoTask ${rootProject}&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="nf">printInfo</span><span class="o">(</span><span class="nl">type:</span> <span class="n">PrintInfoTask</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是当我们在执行的时候，发现有问题，如下的错误信息。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">➜</span>  <span class="n">GradleTaskSample</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">printInfo</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">Task</span> <span class="o">:</span><span class="nl">app:</span><span class="n">printInfo</span> <span class="n">FAILED</span>
</span><span class='line'>
</span><span class='line'><span class="nl">FAILURE:</span> <span class="n">Build</span> <span class="n">failed</span> <span class="n">with</span> <span class="n">an</span> <span class="n">exception</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="nl">Where:</span>
</span><span class='line'><span class="n">Build</span> <span class="n">file</span> <span class="err">&#39;</span><span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">androidyue</span><span class="o">/</span><span class="n">AndroidStudioProjects</span><span class="o">/</span><span class="n">GradleTaskSample</span><span class="o">/</span><span class="n">app</span><span class="o">/</span><span class="n">build</span><span class="o">.</span><span class="na">gradle</span><span class="err">&#39;</span> <span class="nl">line:</span> <span class="mi">31</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="n">What</span> <span class="n">went</span> <span class="nl">wrong:</span>
</span><span class='line'><span class="n">Execution</span> <span class="n">failed</span> <span class="k">for</span> <span class="n">task</span> <span class="err">&#39;</span><span class="o">:</span><span class="nl">app:</span><span class="n">printInfo</span><span class="err">&#39;</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">Could</span> <span class="n">not</span> <span class="n">get</span> <span class="n">unknown</span> <span class="n">property</span> <span class="err">&#39;</span><span class="n">rootProject</span><span class="err">&#39;</span> <span class="k">for</span> <span class="n">task</span> <span class="err">&#39;</span><span class="o">:</span><span class="nl">app:</span><span class="n">printInfo</span><span class="err">&#39;</span> <span class="n">of</span> <span class="n">type</span> <span class="n">PrintInfoTask</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="nl">Try:</span>
</span><span class='line'><span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">stacktrace</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">stack</span> <span class="n">trace</span><span class="o">.</span> <span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">info</span> <span class="n">or</span> <span class="o">--</span><span class="n">debug</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">more</span> <span class="n">log</span> <span class="n">output</span><span class="o">.</span> <span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">scan</span> <span class="n">to</span> <span class="n">get</span> <span class="n">full</span> <span class="n">insights</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="n">Get</span> <span class="n">more</span> <span class="n">help</span> <span class="n">at</span> <span class="nl">https:</span><span class="c1">//help.gradle.org</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">FAILED</span> <span class="n">in</span> <span class="mi">607</span><span class="n">ms</span>
</span><span class='line'><span class="mi">1</span> <span class="n">actionable</span> <span class="nl">task:</span> <span class="mi">1</span> <span class="n">executed</span>
</span></code></pre></td></tr></table></div></figure>


<h2>外部变量传入才能用</h2>

<p>上面部分提示找不到<code>rootProject</code>属性，因为对于外部的属性，需要以传入属性的方式来实现，如下修改。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">PrintInfoTask</span> <span class="kd">extends</span> <span class="n">DefaultTask</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Input</span>
</span><span class='line'>    <span class="n">Project</span> <span class="n">project</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@TaskAction</span>
</span><span class='line'>    <span class="n">def</span> <span class="nf">printInfo</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">println</span> <span class="s">&quot;printInfoTask ${project}&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="nf">printInfo</span><span class="o">(</span><span class="nl">type:</span> <span class="n">PrintInfoTask</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">project</span> <span class="o">=</span> <span class="n">rootProject</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们的修改是</p>

<ul>
<li><code>PrintInfoTask</code>中增加 <code>project</code> 属性，用来接收外部传入的对应值，使用<code>@Input</code> 表明 Task中需要输入的属性</li>
<li>在<code>task printInfo</code> 中增加赋值语句 <code>project = rootProject</code>，其中<code>rootProject</code>为根项目的内容。</li>
</ul>


<p>再次执行，就没有问题了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="err">➜</span>  <span class="n">GradleTaskSample</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">printInfo</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="n">Task</span> <span class="o">:</span><span class="nl">app:</span><span class="n">printInfo</span>
</span><span class='line'><span class="n">printInfoTask</span> <span class="n">root</span> <span class="n">project</span> <span class="err">&#39;</span><span class="n">GradleTaskSample</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span> <span class="n">in</span> <span class="mi">592</span><span class="n">ms</span>
</span><span class='line'><span class="mi">1</span> <span class="n">actionable</span> <span class="nl">task:</span> <span class="mi">1</span> <span class="n">executed</span>
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="https://docs.gradle.org/current/userguide/custom_tasks.html">https://docs.gradle.org/current/userguide/custom_tasks.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复WebView资源未找到导致的崩溃问题]]></title>
    <link href="https://droidyue.com/blog/2020/11/06/fix-resources-notfoundexception-string-resource-id-number-0x2040003-android-issue/"/>
    <updated>2020-11-06T20:06:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/11/06/fix-resources-notfoundexception-string-resource-id-number-0x2040003-android-issue</id>
    <content type="html"><![CDATA[<p>近期 应用新增了很多的崩溃，分析特征，发现崩溃集中在5.0-5.1.1系统上，崩溃的日志如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Caused by: android.content.res.Resources<span class="nv">$NotFoundException</span>: String resource ID <span class="c">#0x2040003</span>
</span><span class='line'>at android.content.res.Resources.getText<span class="o">(</span>Resources.java:318<span class="o">)</span>
</span><span class='line'>at android.content.res.VivoResources.getText<span class="o">(</span>VivoResources.java:123<span class="o">)</span>
</span><span class='line'>at android.content.res.Resources.getString<span class="o">(</span>Resources.java:404<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.content.browser.ContentViewCore.setContainerView<span class="o">(</span>ContentViewCore.java:694<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.content.browser.ContentViewCore.initialize<span class="o">(</span>ContentViewCore.java:618<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.android_webview.AwContents.createAndInitializeContentViewCore<span class="o">(</span>AwContents.java:631<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.android_webview.AwContents.setNewAwContents<span class="o">(</span>AwContents.java:780<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.android_webview.AwContents.&lt;init&gt;<span class="o">(</span>AwContents.java:619<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.android_webview.AwContents.&lt;init&gt;<span class="o">(</span>AwContents.java:556<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium.initForReal<span class="o">(</span>WebViewChromium.java:312<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium.access<span class="nv">$100</span><span class="o">(</span>WebViewChromium.java:96<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium<span class="nv">$1</span>.run<span class="o">(</span>WebViewChromium.java:264<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium<span class="nv">$WebViewChromiumRunQueue</span>.drainQueue<span class="o">(</span>WebViewChromium.java:123<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium<span class="nv">$WebViewChromiumRunQueue$1</span>.run<span class="o">(</span>WebViewChromium.java:110<span class="o">)</span>
</span><span class='line'>at com.android.org.chromium.base.ThreadUtils.runOnUiThread<span class="o">(</span>ThreadUtils.java:144<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium<span class="nv">$WebViewChromiumRunQueue</span>.addTask<span class="o">(</span>WebViewChromium.java:107<span class="o">)</span>
</span><span class='line'>at com.android.webview.chromium.WebViewChromium.init<span class="o">(</span>WebViewChromium.java:261<span class="o">)</span>
</span><span class='line'>at android.webkit.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:554<span class="o">)</span>
</span><span class='line'>at android.webkit.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:489<span class="o">)</span>
</span><span class='line'>at android.webkit.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:472<span class="o">)</span>
</span><span class='line'>at android.webkit.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:459<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView<span class="nv">$a</span>.&lt;init&gt;<span class="o">(</span>WebView.java:2968<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:567<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:329<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:323<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:318<span class="o">)</span>
</span><span class='line'>at com.tencent.smtt.sdk.WebView.&lt;init&gt;<span class="o">(</span>WebView.java:313<span class="o">)</span>
</span><span class='line'>at com.xxxx.webview.X5WebView.&lt;init&gt;<span class="o">(</span>X5WebView.java:36<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.Fragment.performCreateView<span class="o">(</span>Fragment.java:2600<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.moveToState<span class="o">(</span>FragmentManagerImpl.java:881<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.moveFragmentToExpectedState<span class="o">(</span>FragmentManagerImpl.java:1238<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.moveToState<span class="o">(</span>FragmentManagerImpl.java:1303<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.BackStackRecord.executeOps<span class="o">(</span>BackStackRecord.java:439<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.executeOps<span class="o">(</span>FragmentManagerImpl.java:2079<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.executeOpsTogether<span class="o">(</span>FragmentManagerImpl.java:1869<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.removeRedundantOperationsAndExecute<span class="o">(</span>FragmentManagerImpl.java:1824<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.execPendingActions<span class="o">(</span>FragmentManagerImpl.java:1727<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.dispatchStateChange<span class="o">(</span>FragmentManagerImpl.java:2663<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentManagerImpl.dispatchActivityCreated<span class="o">(</span>FragmentManagerImpl.java:2613<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentController.dispatchActivityCreated<span class="o">(</span>FragmentController.java:246<span class="o">)</span>
</span><span class='line'>at androidx.fragment.app.FragmentActivity.onStart<span class="o">(</span>FragmentActivity.java:542<span class="o">)</span>
</span><span class='line'>at androidx.appcompat.app.AppCompatActivity.onStart<span class="o">(</span>AppCompatActivity.java:201<span class="o">)</span>
</span><span class='line'>at android.app.Instrumentation.callActivityOnStart<span class="o">(</span>Instrumentation.java:1245<span class="o">)</span>
</span><span class='line'>at android.app.Activity.performStart<span class="o">(</span>Activity.java:6099<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread.performLaunchActivity<span class="o">(</span>ActivityThread.java:2367<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread.handleLaunchActivity<span class="o">(</span>ActivityThread.java:2466<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread.access<span class="nv">$900</span><span class="o">(</span>ActivityThread.java:175<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread<span class="nv">$H</span>.handleMessage<span class="o">(</span>ActivityThread.java:1369<span class="o">)</span>
</span><span class='line'>at android.os.Handler.dispatchMessage<span class="o">(</span>Handler.java:102<span class="o">)</span>
</span><span class='line'>at android.os.Looper.loop<span class="o">(</span>Looper.java:135<span class="o">)</span>
</span><span class='line'>at android.app.ActivityThread.main<span class="o">(</span>ActivityThread.java:5418<span class="o">)</span>
</span><span class='line'>at java.lang.reflect.Method.invoke<span class="o">(</span>Native Method<span class="o">)</span>
</span><span class='line'>at java.lang.reflect.Method.invoke<span class="o">(</span>Method.java:372<span class="o">)</span>
</span><span class='line'>at com.android.internal.os.ZygoteInit<span class="nv">$MethodAndArgsCaller</span>.run<span class="o">(</span>ZygoteInit.java:1037<span class="o">)</span>
</span><span class='line'>at com.android.internal.os.ZygoteInit.main<span class="o">(</span>ZygoteInit.java:832<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>貌似感觉没有解决办法，后来在这里<a href="https://stackoverflow.com/a/58695635">https://stackoverflow.com/a/58695635</a>  找到了解决办法</p>

<h2>解决方法</h2>

<ul>
<li>针对出问题的系统（5.0-5.1.1）使用ApplicationContext 处理</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">object</span> <span class="n">WebViewWorkaroundAssistant</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fun</span> <span class="nf">getWorkaroundContext</span><span class="o">(</span><span class="nl">context:</span> <span class="n">Context</span><span class="o">):</span> <span class="n">Context</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">//修复Caused by: android.content.res.Resources$NotFoundException: String resource ID #0x2040003</span>
</span><span class='line'>        <span class="c1">//https://stackoverflow.com/a/58695635</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">if</span> <span class="o">(</span><span class="n">Build</span><span class="o">.</span><span class="na">VERSION</span><span class="o">.</span><span class="na">SDK_INT</span> <span class="o">&lt;</span> <span class="n">Build</span><span class="o">.</span><span class="na">VERSION_CODES</span><span class="o">.</span><span class="na">M</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">context</span><span class="o">.</span><span class="na">applicationContext</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">context</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">X5WebView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">WebViewWorkaroundAssistant</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">getWorkaroundContext</span><span class="o">(</span><span class="n">context</span><span class="o">));</span>
</span><span class='line'>        <span class="n">initUI</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>注意事项</h2>

<ul>
<li>当再次使用WebView.getContext时，得到的就是Application 上下文，而不是Activity的了。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[终端下双重过滤筛选内容]]></title>
    <link href="https://droidyue.com/blog/2020/10/20/double-find-content/"/>
    <updated>2020-10-20T20:38:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/10/20/double-find-content</id>
    <content type="html"><![CDATA[<p>很多时候，我们需要对文件内容进行查找，查找出包含某段字符串的文件，比如这样</p>

<p>我们使用这个命令可以查找包含Ruby字符的全部文件和行数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source </span>git:<span class="o">(</span>master<span class="o">)</span> grep  -E <span class="s2">&quot;Ruby&quot;</span> --exclude-dir<span class="o">={</span>.git,lib,.gradle,.idea,build,captures<span class="o">}</span>   . -R --color<span class="o">=</span>always -n
</span><span class='line'>./_posts/2014-09-08-learn-sqlite-in-a-very-fast-way.markdown:9:最近用Ruby写了一个七牛的demo参赛作品，使用了sqlite3，用到很多操作，利用假期的时间，简单做一个快速掌握SQLite命令的小入门。
</span><span class='line'>./_posts/2013-09-07-issues-about-installing-octopress.markdown:6:categories: Github OctoPress Ruby RVM
</span><span class='line'>./_posts/2016-04-10-jit-friendly-checker-for-android.markdown:117:###为什么用Ruby
</span><span class='line'>./_posts/2016-04-10-jit-friendly-checker-for-android.markdown:118:  * 答：有了idea时很纠结，因为不确定用什么语言实现，尤其是在Python和ruby之间，为此问了不少同学，最后“一意孤行”决定用Ruby了，不喜欢Python的强制对齐，超级喜欢Ruby的字符串模板。Ruby很简单，很人性化，相信你会喜欢的。
</span><span class='line'>./_posts/2014-09-22-weekly-script-add-prefix-to-mutiple-files-in-ruby.markdown:6:categories: Ruby, 效率, 每周1脚本
</span><span class='line'>./_posts/2014-08-21-file-code-sinppets-in-ruby.markdown:3:title: <span class="s2">&quot;Ruby常用文件操作&quot;</span>
</span><span class='line'>./_posts/2014-08-21-file-code-sinppets-in-ruby.markdown:6:categories: Ruby
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>那么问题来了，如果，我们想要查找出同时包含了Ruby和Android的文件路径，怎么办呢，其实不难</p>

<ul>
<li>确定好包含包含Ruby的文件路径</li>
<li>从上面的路径中查找是否包含 Android</li>
</ul>


<p>具体的实现如下</p>

<h2>脚本内容</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="n">dirToSearch</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">firstFilter</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="n">secondFilter</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">firstFilterCommand</span> <span class="o">=</span> <span class="s2">&quot;grep  -E &#39;</span><span class="si">#{</span><span class="n">firstFilter</span><span class="si">}</span><span class="s2">&#39; --exclude-dir={.git,lib,.gradle,.idea,build,captures} --exclude={*.png,*.jpg,*.jar}  </span><span class="si">#{</span><span class="n">dirToSearch</span><span class="si">}</span><span class="s2"> -R&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">firstFilterCommand</span>
</span><span class='line'><span class="sb">`</span><span class="si">#{</span><span class="n">firstFilterCommand</span><span class="si">}</span><span class="sb">`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span>
</span><span class='line'>    <span class="o">|</span><span class="n">line</span><span class="o">|</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="p">}</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span>
</span><span class='line'>    <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;Checking file </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="nb">system</span> <span class="s2">&quot;grep </span><span class="si">#{</span><span class="n">secondFilter</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> -n --color=always&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>执行结果</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  <span class="nb">source </span>git:<span class="o">(</span>master<span class="o">)</span> doubleGrep.rb ./ ruby Android
</span><span class='line'>grep  -E <span class="s1">&#39;ruby&#39;</span> --exclude-dir<span class="o">={</span>.git,lib,.gradle,.idea,build,captures<span class="o">}</span> --exclude<span class="o">={</span>*.png,*.jpg,*.jar<span class="o">}</span>  ./ -R
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Checking file .//_posts/2014-09-20-interaction-between-java-and-javascript-in-android.markdown
</span><span class='line'>3:title: <span class="s2">&quot;Android中Java和JavaScript交互&quot;</span>
</span><span class='line'>6:categories: Android Java JavaScript
</span><span class='line'>8:Android提供了一个很强大的WebView控件用来处理Web网页，而在网页中，JavaScript又是一个很举足轻重的脚本。本文将介绍如何实现Java代码和Javascript代码的相互调用。
</span><span class='line'>107:Java-Javascript Interaction In Android
</span><span class='line'>138:Android在4.4之前并没有提供直接调用js函数并获取值的方法，所以在此之前，常用的思路是 java调用js方法，js方法执行完毕，再次调用java代码将值返回。
</span><span class='line'>158:Android 4.4之后使用evaluateJavascript即可。这里展示一个简单的交互示例
</span><span class='line'>211:如果只在4.2版本以上的机器出问题，那么就是系统处于安全限制的问题了。Android文档这样说的
</span><span class='line'>212:&gt;Caution: If you<span class="err">&#39;</span>ve <span class="nb">set </span>your targetSdkVersion to 17 or higher, you must add the @JavascriptInterface annotation to any method that you want available your web page code <span class="o">(</span>the method must also be public<span class="o">)</span>. If you <span class="k">do </span>not provide the annotation, <span class="k">then </span>the method will not accessible by your web page when running on Android 4.2 or higher.
</span><span class='line'>268:  * &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://www.amazon.cn/gp/product/B00LVHTI9U/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00LVHTI9U&amp;linkCode=as2&amp;tag=droidyue-23&quot;</span>&gt;第一行代码:Android&lt;/a&gt;&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&amp;l=as2&amp;o=28&amp;a=B00LVHTI9U&quot;</span> <span class="nv">width</span><span class="o">=</span><span class="s2">&quot;1&quot;</span> <span class="nv">height</span><span class="o">=</span><span class="s2">&quot;1&quot;</span> <span class="nv">border</span><span class="o">=</span><span class="s2">&quot;0&quot;</span> <span class="nv">alt</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="nv">style</span><span class="o">=</span><span class="s2">&quot;border:none !important; margin:0px !important;&quot;</span> /&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Checking file .//_posts/2013-09-07-issues-about-installing-octopress.markdown
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Checking file .//_posts/2016-04-10-jit-friendly-checker-for-android.markdown
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[巧用Kotlin反射实现按值取名，调试做到多快好省]]></title>
    <link href="https://droidyue.com/blog/2020/05/31/using-kotlin-reflection-to-get-constant-variable-name-by-value/"/>
    <updated>2020-05-31T20:55:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/05/31/using-kotlin-reflection-to-get-constant-variable-name-by-value</id>
    <content type="html"><![CDATA[<h2>痛点</h2>

<p>我们经常会定义一些常量，比如</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ItemType</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_TEXT</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_IMG</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_VIDEO</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_AUDIO</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">TYPE_LINK</span> <span class="o">=</span> <span class="mi">4</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>当我们打印查看是哪种类型的时候，如果单纯是打印int值，并不能足够解释业务信息，所以，为了更好的输出信息，我们通常会这样做</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">fun</span> <span class="nf">inspectItemTypeUgly</span><span class="o">(</span><span class="nl">itemType:</span> <span class="n">Int</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">val</span> <span class="n">type</span> <span class="o">=</span> <span class="n">when</span><span class="o">(</span><span class="n">itemType</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_TEXT</span> <span class="o">-&gt;</span> <span class="s">&quot;text&quot;</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_AUDIO</span> <span class="o">-&gt;</span> <span class="s">&quot;audio&quot;</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_IMG</span> <span class="o">-&gt;</span> <span class="s">&quot;image&quot;</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_LINK</span> <span class="o">-&gt;</span> <span class="s">&quot;link&quot;</span>
</span><span class='line'>        <span class="n">ItemType</span><span class="o">.</span><span class="na">TYPE_VIDEO</span> <span class="o">-&gt;</span> <span class="s">&quot;video&quot;</span>
</span><span class='line'>        <span class="k">else</span> <span class="o">-&gt;</span> <span class="kc">null</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">println</span><span class="o">(</span><span class="s">&quot;inspect item type =${inspectItemTypeUgly(itemType)};originalValue=$itemType&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后这样调用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">val</span> <span class="n">itemType</span> <span class="o">=</span> <span class="n">getRandomItemType</span><span class="o">()</span>
</span><span class='line'><span class="n">print</span><span class="o">(</span><span class="n">inspectItemTypeUgly</span><span class="o">(</span><span class="n">itemType</span><span class="o">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样做能打印出更加有意义的信息，但是需要编写额外的将int转换成String的方法，可谓是费时费力。</p>

<h2>有没有好办法</h2>

<p>方法是有的。</p>

<p>比如我们定义<code>public static final int TYPE_TEXT = 0;</code>的时候，我们定义了常量名和常量值。那么</p>

<ul>
<li>我们可以利用变量值查找对应的变量名</li>
<li>借助 Kotlin便捷的特性和反射库，我们可以更好更轻松实现。</li>
</ul>


<h2>秀代码</h2>

<h3>针对 Java 类（接口）和普通的 Kotlin类</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">getConstantNameByValueFromNormalClass</span><span class="p">(</span><span class="n">kClass</span><span class="p">:</span> <span class="n">KClass</span><span class="p">&lt;*&gt;,</span> <span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kClass</span><span class="p">.</span><span class="n">staticProperties</span><span class="p">.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用示例</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">println</span><span class="p">(</span><span class="s">&quot;itemType=${ItemType::class.getConstantNameByValueFromNormalClass(itemType)}&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>针对 Kotlin object</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">getConstantNameByValueForObject</span><span class="p">(</span><span class="n">kClass</span><span class="p">:</span> <span class="n">KClass</span><span class="p">&lt;*&gt;,</span> <span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kClass</span><span class="p">.</span><span class="n">memberProperties</span><span class="p">.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用示例</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="c1">//定义常量在Object对象中</span>
</span><span class='line'><span class="n">object</span> <span class="n">ErrorCodes</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">const</span> <span class="k">val</span> <span class="n">ERROR_OK</span> <span class="p">=</span> <span class="m">0</span>
</span><span class='line'>    <span class="n">const</span> <span class="k">val</span> <span class="n">ERROR_INVALID_PARAM</span> <span class="p">=</span> <span class="m">1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//调用处</span>
</span><span class='line'><span class="n">println</span><span class="p">(</span><span class="s">&quot;errorCode=&quot;</span> <span class="p">+</span> <span class="n">ErrorCodes</span><span class="p">::</span><span class="n">class</span><span class="p">.</span><span class="n">getConstantNameByValueForObject</span><span class="p">(</span><span class="m">0</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h3>针对 Kotlin Top Level 变量的问题</h3>

<ul>
<li>对于 Kotlin变量定义，我们推荐是定义在top level层级。</li>
<li>但是 Kotlin无法直接访问到 top level 层级的类</li>
<li>我们需要借助一些变量来辅助获取 top level 层级的类</li>
<li>但是 Kotlin的反射无法top level类，所以我们必须使用java class</li>
</ul>


<h4>借助一个变量或者顶层类</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">const</span> <span class="k">val</span> <span class="n">SOURCE_REMOTE</span> <span class="p">=</span> <span class="m">0</span>
</span><span class='line'><span class="n">const</span> <span class="k">val</span> <span class="n">SOURCE_LOCAL</span> <span class="p">=</span> <span class="m">1</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="n">myConstantTopClass</span> <span class="p">=</span> <span class="n">object</span> <span class="p">:</span> <span class="n">Any</span><span class="p">()</span> <span class="p">{}.</span><span class="n">javaClass</span><span class="p">.</span><span class="n">enclosingClass</span>
</span></code></pre></td></tr></table></div></figure>


<h4>借助 Java class来获取常量（用KClass会抛出不支持异常）</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">Class</span><span class="p">&lt;*&gt;.</span><span class="n">getConstantNameByValues</span><span class="p">(</span><span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">declaredFields</span><span class="p">.</span><span class="n">mapNotNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">kotlinProperty</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>调用处</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">println</span><span class="p">(</span><span class="s">&quot;sourceType=&quot;</span> <span class="p">+</span> <span class="n">myConstantTopClass</span><span class="p">.</span><span class="n">getConstantNameByValues</span><span class="p">(</span><span class="m">0</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h2>总代码</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="n">import</span> <span class="n">kotlin</span><span class="p">.</span><span class="n">reflect</span><span class="p">.</span><span class="n">KClass</span>
</span><span class='line'><span class="n">import</span> <span class="n">kotlin</span><span class="p">.</span><span class="n">reflect</span><span class="p">.</span><span class="n">full</span><span class="p">.</span><span class="n">memberProperties</span>
</span><span class='line'><span class="n">import</span> <span class="n">kotlin</span><span class="p">.</span><span class="n">reflect</span><span class="p">.</span><span class="n">full</span><span class="p">.</span><span class="n">staticProperties</span>
</span><span class='line'><span class="n">import</span> <span class="n">kotlin</span><span class="p">.</span><span class="n">reflect</span><span class="p">.</span><span class="n">jvm</span><span class="p">.</span><span class="n">kotlinProperty</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">KClass</span><span class="p">&lt;*&gt;.</span><span class="n">findConstantNameByValue</span><span class="p">(</span><span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">isKotlinObject</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">getConstantNameByValueForObject</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">getConstantNameByValueFromNormalClass</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">getConstantNameByValueFromNormalClass</span><span class="p">(</span><span class="n">kClass</span><span class="p">:</span> <span class="n">KClass</span><span class="p">&lt;*&gt;,</span> <span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kClass</span><span class="p">.</span><span class="n">staticProperties</span><span class="p">.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">getConstantNameByValueForObject</span><span class="p">(</span><span class="n">kClass</span><span class="p">:</span> <span class="n">KClass</span><span class="p">&lt;*&gt;,</span> <span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kClass</span><span class="p">.</span><span class="n">memberProperties</span><span class="p">.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span> <span class="n">Class</span><span class="p">&lt;*&gt;.</span><span class="n">getConstantNameByValues</span><span class="p">(</span><span class="n">value</span><span class="p">:</span> <span class="n">T</span><span class="p">):</span> <span class="n">String</span><span class="p">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">value</span> <span class="p">?:</span> <span class="k">return</span> <span class="k">null</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">declaredFields</span><span class="p">.</span><span class="n">mapNotNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">kotlinProperty</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">filter</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">isFinal</span>
</span><span class='line'>    <span class="p">}.</span><span class="n">firstOrNull</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">it</span><span class="p">.</span><span class="n">getter</span><span class="p">.</span><span class="n">call</span><span class="p">()</span> <span class="p">==</span> <span class="n">value</span>
</span><span class='line'>    <span class="p">}?.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="n">KClass</span><span class="p">&lt;*&gt;.</span><span class="n">isKotlinObject</span><span class="p">():</span> <span class="n">Boolean</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="n">objectInstance</span> <span class="p">!=</span> <span class="k">null</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Android 工程增加依赖(Kotlin 反射库)</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">implementation</span> <span class="s">&quot;org.jetbrains.kotlin:kotlin-reflect:$kotlin_version&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>性能问题</h2>

<ul>
<li>都说，反射的话性能比较差，是的，但是也不是那么的差。</li>
<li>如果担心性能，可以限定在非release版本下执行</li>
</ul>


<h2>注意事项</h2>

<ul>
<li>这种方法不适合于代码混淆后进行处理</li>
<li>定义变量的地方，保持业务单一，不要出现多个变量名对应一个变量值的问题</li>
</ul>


<h2>完整代码</h2>

<ul>
<li><a href="https://github.com/androidyue/KotlinReflectionSample">https://github.com/androidyue/KotlinReflectionSample</a></li>
</ul>


<h2>Kotlin其他内容推荐</h2>

<ul>
<li><a href="https://droidyue.com/blog/2019/05/19/do-and-dont-in-kotlin/">编写地道的 Kotlin 代码</a></li>
<li><a href="https://droidyue.com/blog/2017/05/08/how-to-study-kotlin/">研究学习Kotlin的一些方法</a></li>
<li><a href="https://droidyue.com/blog/categories/kotlin/">更多Kotlin系列文章</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[十个超级实用的git命令]]></title>
    <link href="https://droidyue.com/blog/2020/05/19/cool-git-skills/"/>
    <updated>2020-05-19T12:32:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/05/19/cool-git-skills</id>
    <content type="html"><![CDATA[<p>git无疑已经成为了大家代码版本控制最多的工具了，这其中有不少人是使用终端来进行操作git。这里列出一些超级实用的git脚本，希望可以对大家开发有所帮助。</p>

<p>建议大家讲下面的脚本内容，都保存成脚本，然后设置执行权限，将所在目录加入环境变量，这样使用起来更加方便。</p>

<!--more-->


<h2>查看未合并到master的分支</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git branch --no-merged master
</span></code></pre></td></tr></table></div></figure>


<h2>列出最近修改过的分支</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git <span class="k">for</span>-each-ref --count<span class="o">=</span>30 --sort<span class="o">=</span>-committerdate refs/heads/ --format<span class="o">=</span><span class="s1">&#39;%(refname:short)&#39;</span>%
</span></code></pre></td></tr></table></div></figure>


<h2>启用新的vim编写提交信息</h2>

<p>执行前的准备（后续无需执行该脚本），设置vim为默认的编辑器</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git config --global core.editor <span class="s2">&quot;vim&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>每次执行的脚本</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git commit -a
</span></code></pre></td></tr></table></div></figure>


<h2>将未提交的修改丢弃，恢复到之前的干净状态</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git reset --hard
</span></code></pre></td></tr></table></div></figure>


<h2>撤销上一个git提交</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="c">#!/bin/bash</span>
</span><span class='line'> git reset HEAD~
</span></code></pre></td></tr></table></div></figure>


<h2>未提交情况下，取消对于某个文件的修改</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>git reset HEAD <span class="nv">$1</span> <span class="o">&amp;&amp;</span> git checkout <span class="nv">$1</span>
</span></code></pre></td></tr></table></div></figure>


<h2>查看暂存的差异</h2>

<p>用来查看当我们使用<code>git add</code>之后的内容的差异</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>git diff --cached
</span></code></pre></td></tr></table></div></figure>


<h2>切回上一个分支</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout -
</span></code></pre></td></tr></table></div></figure>


<h2>查找包含某个提交的分支列表</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch --contains  9666b5979<span class="o">(</span>commit <span class="nb">hash</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>查找包含某个提交的tag列表</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git tag --contains 9666b5979<span class="o">(</span>commit <span class="nb">hash</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用好 require,check,assert,写好 Kotlin 代码]]></title>
    <link href="https://droidyue.com/blog/2020/05/10/understanding-check-require-assert-in-kotlin/"/>
    <updated>2020-05-10T21:09:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/05/10/understanding-check-require-assert-in-kotlin</id>
    <content type="html"><![CDATA[<p>在编码的时候，我们需要做很多的检测判断，比如某个变量是否为<code>null</code>，某个成员属性是否为<code>true</code>，执行某个操作结果是否成功。比如像下面的这段代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">var</span> <span class="n">isDiskMounted</span> <span class="p">=</span> <span class="k">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="nf">createNewFile</span><span class="p">(</span><span class="n">file</span><span class="p">:</span> <span class="n">File</span><span class="p">?):</span> <span class="n">Boolean</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">if</span> <span class="p">(</span><span class="n">isDiskMounted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">file</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">file</span><span class="p">.</span><span class="n">createNewFile</span><span class="p">()</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">exists</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">true</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">println</span><span class="p">(</span><span class="s">&quot;Create file($file) failed&quot;</span><span class="p">)</span>
</span><span class='line'>                <span class="k">false</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">println</span><span class="p">(</span><span class="s">&quot;File($file) is null&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">false</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;Disk is not mounted&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>上面的代码实现了</p>

<ul>
<li>检测磁盘是否挂载</li>
<li>检测file参数是否为null</li>
<li>检测执行操作结果是否成功（file.exists()）</li>
</ul>


<p>但是上面的代码也有一些问题</p>

<ul>
<li>太多的if else 检测，层级产生，不够平</li>
<li>多个方法出口</li>
<li>更不容易发现异常和错误（有点类似fail safe模式）</li>
</ul>


<h2>使用今天的知识点改造</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="nf">createNewFileV2</span><span class="p">(</span><span class="n">file</span><span class="p">:</span> <span class="n">File</span><span class="p">?):</span> <span class="n">Boolean</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">check</span><span class="p">(</span><span class="n">isDiskMounted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;Disk is not mounted&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">requireNotNull</span><span class="p">(</span><span class="n">file</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;file is null&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">file</span><span class="p">.</span><span class="n">createNewFile</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">assert</span><span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">exists</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;createNewFileV2 file($file) does not exist&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>方法体没有多余层级，比较平</li>
<li>单个方法出口</li>
<li>更快更早发现问题（有点类似fail fast）</li>
<li><code>file.createNewFile()</code>执行时可以不需要再使用<code>file?.createNewFile()</code> 这一点是因为使用了<a href="https://droidyue.com/blog/2019/08/25/kotlin-contract-between-developers-and-the-compiler/">Contract</a>。</li>
</ul>


<h2>require</h2>

<ul>
<li><code>require(boolean)</code> 用来检测方法的参数，当参数boolean为false时，抛出<code>IllegalArgumentException</code></li>
</ul>


<h3>示例代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="nf">readFileContent</span><span class="p">(</span><span class="n">file</span><span class="p">:</span> <span class="n">File</span><span class="p">?):</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//判断file不能为null</span>
</span><span class='line'>    <span class="n">requireNotNull</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//判断文件必须可读，并提供错误的信息</span>
</span><span class='line'>    <span class="n">require</span><span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">canRead</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;readFileContent file($file) is not readable&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//read file content</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;Your file content&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>变种方法</h3>

<ul>
<li><code>fun require(value: Boolean)</code></li>
<li><code>fun require(value: Boolean, lazyMessage: () -&gt; Any)</code></li>
<li><code>fun &lt;T : Any&gt; requireNotNull(value: T?)</code></li>
<li><code>fun &lt;T : Any&gt; requireNotNull(value: T?, lazyMessage: () -&gt; Any)</code></li>
</ul>


<h2>check</h2>

<ul>
<li><code>check(boolean)</code>用来检测对象的状态（属性），如果boolean为false，抛出异常<code>IllegalStateException</code></li>
</ul>


<h3>示例代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">class</span> <span class="nc">Engine</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="n">isStarted</span> <span class="p">=</span> <span class="k">false</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">speedUp</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">check</span><span class="p">(</span><span class="n">isStarted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&quot;Engine is not started, cannot be speed up now&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//speed up the engine</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>变种方法</h3>

<ul>
<li><code>fun check(value: Boolean, lazyMessage: () -&gt; Any)</code></li>
<li><code>fun &lt;T : Any&gt; checkNotNull(value: T?)</code></li>
<li><code>fun &lt;T : Any&gt; checkNotNull(value: T?, lazyMessage: () -&gt; Any)</code></li>
</ul>


<h2>assert</h2>

<ul>
<li><code>assert(boolean)</code> 用来检测执行结果，当boolean为false时，抛出<code>AssertionError</code>。但是需要在开启对应的JVM选项时才生效。</li>
</ul>


<h3>示例代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="nf">makeFile</span><span class="p">(</span><span class="n">path</span><span class="p">:</span> <span class="n">String</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">val</span> <span class="n">file</span> <span class="p">=</span> <span class="n">File</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>    <span class="n">file</span><span class="p">.</span><span class="n">createNewFile</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">assert</span><span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">exists</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&quot;make File($file) failed&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>使用顺序</h2>

<ul>
<li>先使用<code>check</code>检测对象的状态</li>
<li>再使用<code>require</code>检测方法的参数合法性</li>
<li>执行操作后，使用<code>assert</code>校验结果</li>
</ul>


<h2>关于lazyMessage</h2>

<ul>
<li>lazyMessage 可以允许我们提供更详细的错误辅助信息</li>
<li>lazyMessage的类型是<code>()-&gt; Any</code>,结合inline操作，可以实现惰性求值</li>
<li>具体可以参考 <a href="https://droidyue.com/blog/2019/11/24/smart-log-in-android-slash-kotlin/">这可能是最好的 Android/Kotlin日志输出方法</a></li>
</ul>


<h2>崩溃更多了，怎么办</h2>

<ul>
<li>是的，上面无论是<code>require</code>,<code>check</code>,<code>assert</code>都会在发现错误的时候抛出异常</li>
<li>这是为了让问题更早发现，这就是它们的哲学</li>
<li>如果想要考虑稳定的话，可以在业务侧 debug下崩溃，非debug下捕获吞掉异常</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">fun</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">createNewFile</span><span class="p">(</span><span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="n">safeRun</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">createNewFileV2</span><span class="p">(</span><span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">val</span> <span class="n">isDebug</span> <span class="p">=</span> <span class="k">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">fun</span> <span class="nf">safeRun</span><span class="p">(</span><span class="n">block</span><span class="p">:</span> <span class="p">()</span> <span class="p">-&gt;</span> <span class="n">Unit</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">block</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">t</span><span class="p">:</span> <span class="n">Throwable</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">t</span><span class="p">.</span><span class="n">printStackTrace</span><span class="p">()</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">isDebug</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">throw</span>  <span class="n">t</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>更多文章</h2>

<ul>
<li><a href="https://droidyue.com/blog/2019/05/19/do-and-dont-in-kotlin/">编写地道的 Kotlin 代码</a></li>
<li><a href="https://droidyue.com/blog/2017/05/08/how-to-study-kotlin/">研究学习Kotlin的一些方法</a></li>
<li><a href="https://droidyue.com/blog/2020/03/22/kotlin-tips-get-value-safely/">KotlinTips: getValueSafely 安全取值</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决Didn't find class java.lang.invoke.SerializedLambda 问题]]></title>
    <link href="https://droidyue.com/blog/2020/05/04/java-dot-lang-dot-invoke-dot-serializedlambda-not-found-android-7-below/"/>
    <updated>2020-05-04T19:28:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/05/04/java-dot-lang-dot-invoke-dot-serializedlambda-not-found-android-7-below</id>
    <content type="html"><![CDATA[<h2>问题表现</h2>

<ul>
<li>在低于 Android 7（Android Nougat）以下出现</li>
<li>错误的崩溃日志信息如下</li>
</ul>


<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Caused</span> <span class="nl">by:</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">ClassNotFoundException</span><span class="o">:</span> <span class="n">Didn</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">find</span> <span class="kd">class</span> <span class="err">&quot;</span><span class="nc">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">invoke</span><span class="o">.</span><span class="na">SerializedLambda</span><span class="s">&quot; on path: DexPathList[[dex file &quot;</span><span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">user</span><span class="o">/</span><span class="mi">0</span><span class="o">/</span><span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">/.</span><span class="mi">00000000000</span><span class="o">/</span><span class="n">A3AEECD8</span><span class="o">.</span><span class="na">dex</span><span class="s">&quot;, zip file &quot;</span><span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">app</span><span class="o">/</span><span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">-</span><span class="mi">1</span><span class="o">/</span><span class="n">base</span><span class="o">.</span><span class="na">apk</span><span class="err">&quot;</span><span class="o">],</span><span class="n">nativeLibraryDirectories</span><span class="o">=[/</span><span class="n">data</span><span class="o">/</span><span class="n">app</span><span class="o">/</span><span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">-</span><span class="mi">1</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">arm</span><span class="o">,</span> <span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">app</span><span class="o">/</span><span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">-</span><span class="mi">1</span><span class="o">/</span><span class="n">base</span><span class="o">.</span><span class="na">apk</span><span class="o">!/</span><span class="n">lib</span><span class="o">/</span><span class="n">armeabi</span><span class="o">-</span><span class="n">v7a</span><span class="o">,</span> <span class="o">/</span><span class="n">vendor</span><span class="o">/</span><span class="n">lib</span><span class="o">,</span> <span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="n">lib</span><span class="o">]]</span>
</span><span class='line'><span class="n">at</span> <span class="n">dalvik</span><span class="o">.</span><span class="na">system</span><span class="o">.</span><span class="na">BaseDexClassLoader</span><span class="o">.</span><span class="na">findClass</span><span class="o">(</span><span class="n">BaseDexClassLoader</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">56</span><span class="o">)</span>
</span><span class='line'><span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">ClassLoader</span><span class="o">.</span><span class="na">loadClass</span><span class="o">(</span><span class="n">ClassLoader</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">511</span><span class="o">)</span>
</span><span class='line'><span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">ClassLoader</span><span class="o">.</span><span class="na">loadClass</span><span class="o">(</span><span class="n">ClassLoader</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">469</span><span class="o">)</span>
</span><span class='line'><span class="n">at</span> <span class="n">libcore</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">InternalNames</span><span class="o">.</span><span class="na">getClass</span><span class="o">(</span><span class="n">InternalNames</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">53</span><span class="o">)</span>
</span><span class='line'><span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">getDexCacheType</span><span class="o">(</span><span class="n">Class</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">476</span><span class="o">)</span>
</span><span class='line'><span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">AbstractMethod</span><span class="o">.</span><span class="na">getParameterTypes</span><span class="o">(</span><span class="n">AbstractMethod</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">166</span><span class="o">)</span>
</span><span class='line'><span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">Method</span><span class="o">.</span><span class="na">getParameterTypes</span><span class="o">(</span><span class="n">Method</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">170</span><span class="o">)</span>
</span><span class='line'><span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Class</span><span class="o">.</span><span class="na">getDeclaredMethods</span><span class="o">(</span><span class="n">Class</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">673</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>解决方法</h2>

<p>在项目的 gradle.properties 文件中增加如下一行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>android.enableD8.desugaring<span class="o">=</span><span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[invalid byte sequence in US-ASCII (Argument Error) 问题修复]]></title>
    <link href="https://droidyue.com/blog/2020/05/04/invalid-byte-sequence-in-ascii-argument-error-rake/"/>
    <updated>2020-05-04T19:26:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/05/04/invalid-byte-sequence-in-ascii-argument-error-rake</id>
    <content type="html"><![CDATA[<p>在使用Octopress（rake命令时报错）<code>invalid byte sequence in US-ASCII (Argument Error) when I run rake</code></p>

<h2>修复方法</h2>

<p>终端执行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">RUBYOPT</span><span class="o">=</span><span class="s2">&quot;-KU -E utf-8:utf-8&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者将上面的代码内容放到.bashrc中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[树莓派修改 DNS 服务器配置]]></title>
    <link href="https://droidyue.com/blog/2020/05/01/set-dns-server-on-reaspberry-pi/"/>
    <updated>2020-05-01T14:18:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/05/01/set-dns-server-on-reaspberry-pi</id>
    <content type="html"><![CDATA[<h2>修改配置文件</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo vim /etc/dhcpcd.conf
</span></code></pre></td></tr></table></div></figure>


<p>增加如下内容，我们使用Google DNS（北京联通测试速度不错）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>static <span class="nv">domain_name_servers</span><span class="o">=</span>8.8.8.8 8.8.4.4
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>完整的示例文件部分</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>interface eth0
</span><span class='line'>        static <span class="nv">ip_address</span><span class="o">=</span>192.168.1.3/24
</span><span class='line'>        static <span class="nv">routers</span><span class="o">=</span>192.168.1.1
</span><span class='line'>        static <span class="nv">domain_name_servers</span><span class="o">=</span>8.8.8.8 8.8.4.4
</span></code></pre></td></tr></table></div></figure>


<h2>设置配置生效</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo service dhcpcd restart
</span></code></pre></td></tr></table></div></figure>


<h2>验证是否生效</h2>

<p>我们使用dig命令验证dns是否生效</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>dig droidyue.com
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.11.5-P4-5.1-Raspbian &lt;&lt;&gt;&gt; droidyue.com
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER<span class="s">&lt;&lt;- opco</span>de: QUERY, status: NOERROR, id: 54841
</span><span class='line'>;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1
</span><span class='line'>
</span><span class='line'>;; OPT PSEUDOSECTION:
</span><span class='line'>; EDNS: version: 0, flags:; udp: 512
</span><span class='line'>;; QUESTION SECTION:
</span><span class='line'>;droidyue.com.            IN  A
</span><span class='line'>
</span><span class='line'>;; ANSWER SECTION:
</span><span class='line'>droidyue.com.     299 IN  A   104.27.129.205
</span><span class='line'>droidyue.com.     299 IN  A   104.27.128.205
</span><span class='line'>
</span><span class='line'>;; Query <span class="nb">time</span>: 44 msec
</span><span class='line'>;; SERVER: 8.8.8.8#53<span class="o">(</span>8.8.8.8<span class="o">)</span>
</span><span class='line'>;; WHEN: Sun Apr 19 17:07:11 CST 2020
</span><span class='line'>;; MSG SIZE  rcvd: 73
</span></code></pre></td></tr></table></div></figure>


<p>重点看这个信息</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>;; Query <span class="nb">time</span>: 44 msec
</span><span class='line'>;; SERVER: 8.8.8.8#53<span class="o">(</span>8.8.8.8<span class="o">)</span>
</span><span class='line'>;; WHEN: Sun Apr 19 17:07:11 CST 2020
</span><span class='line'>;; MSG SIZE  rcvd: 73
</span></code></pre></td></tr></table></div></figure>


<h2>注意</h2>

<p>不要直接修改这个文件<code>/etc/resolv.conf</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)</span>
</span><span class='line'><span class="c">#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN</span>
</span><span class='line'>nameserver 8.8.8.8
</span><span class='line'>nameserver fe80::1%eth0
</span><span class='line'>You have new mail in /var/mail/pi
</span></code></pre></td></tr></table></div></figure>


<p>正如上面英文说得，这个文件会被冲掉，未来某个时间你还需要重新设置。所以按照文章中的修改即可。</p>

<h2>推荐阅读</h2>

<ul>
<li><a href="https://droidyue.com/blog/2016/08/22/before-you-buy-raspberry-pi/">树莓派入手指南</a></li>
<li><a href="https://droidyue.com/blog/2020/02/23/install-jdk-on-raspberry-pi/">树莓派安装jdk 8</a></li>
<li><a href="https://droidyue.com/blog/2020/03/29/install-gitlab-on-raspberry-pi-issues/">树莓派 Gitlab问题整理</a></li>
<li><a href="https://droidyue.com/blog/2020/03/29/ssh-raspberrypi-failure/">修复ssh 首次登录树莓派失败的问题</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 下使用cut命令，实现更好切分数据]]></title>
    <link href="https://droidyue.com/blog/2020/04/25/linux-cut-command/"/>
    <updated>2020-04-25T22:07:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/04/25/linux-cut-command</id>
    <content type="html"><![CDATA[<h2>cut是什么</h2>

<ul>
<li>一个Unix终端命令</li>
<li>切割行内容，并进行标准输出</li>
<li>可以按照字节，字符，分隔符进行切分</li>
</ul>


<!--more-->


<h2>能有什么用</h2>

<p>我们举一个简单的例子（非全部示例）来描述cut有什么用，可以做什么</p>

<h3>简洁输出，去除干扰冗余信息</h3>

<p>比如这个日志，可能会出现折行，另外假设<code>04-19 18:26:55.605 22750 22883 W</code>这些列的信息属于干扰信息</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>04-19 18:26:55.605 22750 22883 W System.err: java.lang.NoSuchFieldException
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.au.a<span class="o">(</span>Unknown Source:16<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.au.a<span class="o">(</span>Unknown Source:4<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.z.a<span class="o">(</span>Unknown Source:880<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.z.a<span class="o">(</span>Unknown Source:188<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.p.a<span class="o">(</span>Unknown Source:821<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.p.a<span class="o">(</span>Unknown Source:605<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.p.a<span class="o">(</span>Unknown Source:11<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.d.a<span class="o">(</span>Unknown Source:46<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.ak.b<span class="o">(</span>Unknown Source:50<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.ak.a<span class="o">(</span>Unknown Source:10<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.XMPushService<span class="nv">$c</span>.a<span class="o">(</span>Unknown Source:8<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.XMPushService<span class="nv">$i</span>.run<span class="o">(</span>Unknown Source:37<span class="o">)</span>
</span><span class='line'>04-19 18:26:55.605 22750 22883 W System.err:  at com.xiaomi.push.service.g<span class="nv">$c</span>.run<span class="o">(</span>Unknown Source:175<span class="o">)</span>
</span><span class='line'>04-19 18:27:24.787 23660 23685 W System.err: load vdr indoor lib success.
</span></code></pre></td></tr></table></div></figure>


<p>使用cut 我们可以实现删除上面的冗余信息</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb logcat | grep <span class="s2">&quot;System.err&quot;</span> --line-buffered | cut -d <span class="s2">&quot; &quot;</span> -f 6-
</span><span class='line'>System.err: java.lang.NoSuchFieldException
</span><span class='line'>System.err:   at com.xiaomi.push.au.a<span class="o">(</span>Unknown Source:16<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.au.a<span class="o">(</span>Unknown Source:4<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.z.a<span class="o">(</span>Unknown Source:880<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.z.a<span class="o">(</span>Unknown Source:188<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.p.a<span class="o">(</span>Unknown Source:821<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.p.a<span class="o">(</span>Unknown Source:605<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.p.a<span class="o">(</span>Unknown Source:11<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.d.a<span class="o">(</span>Unknown Source:46<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.ak.b<span class="o">(</span>Unknown Source:50<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.ak.a<span class="o">(</span>Unknown Source:10<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.XMPushService<span class="nv">$c</span>.a<span class="o">(</span>Unknown Source:8<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.XMPushService<span class="nv">$i</span>.run<span class="o">(</span>Unknown Source:37<span class="o">)</span>
</span><span class='line'>System.err:   at com.xiaomi.push.service.g<span class="nv">$c</span>.run<span class="o">(</span>Unknown Source:175<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>按照字节切分(cut -b)</h2>

<h3>按照字节位置切分</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 取第一个字节</span>
</span><span class='line'>pi@raspberrypi:~ <span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;abcdef&quot;</span> | cut -b 1
</span><span class='line'>a
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># 取第二个字节</span>
</span><span class='line'>pi@raspberrypi:~ <span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;abcdef&quot;</span> | cut -b 2
</span><span class='line'>b
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># 从1开始，0会报错</span>
</span><span class='line'>pi@raspberrypi:~ <span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;abcdef&quot;</span> | cut -b 0
</span><span class='line'>cut: byte/character positions are numbered from 1
</span><span class='line'>Try <span class="s1">&#39;cut --help&#39;</span> <span class="k">for </span>more information.
</span></code></pre></td></tr></table></div></figure>


<h3>按照字节区间切分</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#1到2字节位置切分</span>
</span><span class='line'>pi@raspberrypi:~ <span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;abcdef&quot;</span> | cut -b 1-2
</span><span class='line'>ab
</span><span class='line'>
</span><span class='line'><span class="c"># 限定区间起始位置，不限定结束位置</span>
</span><span class='line'>pi@raspberrypi:~ <span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;abcdef&quot;</span> | cut -b 1-
</span><span class='line'>abcdef
</span><span class='line'>
</span><span class='line'><span class="c"># 限定区间结束位置，但不限定起始位置</span>
</span><span class='line'>pi@raspberrypi:~ <span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;abcdef&quot;</span> | cut -b -5
</span><span class='line'>abcde
</span></code></pre></td></tr></table></div></figure>


<h3>按照字节多个位置切分</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pi@raspberrypi:~ <span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;abcdef&quot;</span> | cut -b 1,3,5
</span><span class='line'>ace
</span></code></pre></td></tr></table></div></figure>


<h2>按照字符区分</h2>

<p>当我们按照字符进行切分时，会遇到一些问题，比如出现中文的时候（一个中文占用三个字节）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 异常出现</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;小黑屋&quot;</span> | cut -b 1
</span><span class='line'>�
</span><span class='line'>
</span><span class='line'><span class="c">##必须限定满足正确的开始和结束位置</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;小黑屋&quot;</span> | cut -b 1-3
</span><span class='line'>小
</span></code></pre></td></tr></table></div></figure>


<p>但是如果中英文并存，就比较麻烦了，好在有按照字符切分的方法(cut -c)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s2">&quot;abcd技术小黑屋ef&quot;</span> | cut -c 7
</span><span class='line'>小
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;abcd技术小黑屋ef&quot;</span> | cut -c 7-9
</span><span class='line'>小黑屋
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;abcd技术小黑屋ef&quot;</span> | cut -c 7,8,9
</span><span class='line'>小黑屋
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;abcd技术小黑屋ef&quot;</span> | cut -c 5-
</span><span class='line'>技术小黑屋ef
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;abcd技术小黑屋ef&quot;</span> | cut -c -9
</span><span class='line'>abcd技术小黑屋
</span></code></pre></td></tr></table></div></figure>


<h2>按照分隔符切分（cut -d ）</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s2">&quot;A|BC|DEF|GHIJ&quot;</span> |  cut -d <span class="s2">&quot;|&quot;</span> -f 1
</span><span class='line'>A
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;A|BC|DEF|GHIJ&quot;</span> |  cut -d <span class="s2">&quot;|&quot;</span> -f 2
</span><span class='line'>BC
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;A|BC|DEF|GHIJ&quot;</span> |  cut -d <span class="s2">&quot;|&quot;</span> -f 3
</span><span class='line'>DEF
</span><span class='line'>
</span><span class='line'><span class="c"># 区间，限定开始位置</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;A|BC|DEF|GHIJ&quot;</span> |  cut -d <span class="s2">&quot;|&quot;</span> -f 1-
</span><span class='line'>A|BC|DEF|GHIJ
</span><span class='line'>
</span><span class='line'><span class="c">#区间，限定结束位置</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;A|BC|DEF|GHIJ&quot;</span> |  cut -d <span class="s2">&quot;|&quot;</span> -f -3
</span><span class='line'>A|BC|DEF
</span><span class='line'>
</span><span class='line'><span class="c"># 区间，限定开始和结束位置</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;A|BC|DEF|GHIJ&quot;</span> |  cut -d <span class="s2">&quot;|&quot;</span> -f 1-2
</span><span class='line'>A|BC
</span><span class='line'>
</span><span class='line'><span class="c">#提供多个位置</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;A|BC|DEF|GHIJ&quot;</span> |  cut -d <span class="s2">&quot;|&quot;</span> -f 1,2
</span><span class='line'>A|BC
</span></code></pre></td></tr></table></div></figure>


<h2>注意</h2>

<ul>
<li>上面为了示例简单实用了echo 加管道的方式</li>
<li>上面所有的例子，都可以实用类似加文件的形式</li>
<li>比如<code>cut -b 1 test_cut_file.txt</code>,<code>cut -c 1 test_cut_file.txt</code>,<code>cut -d "|" -f 1 test_cut_file.txt</code></li>
</ul>


<h2>更多</h2>

<ul>
<li><a href="https://droidyue.com/blog/categories/linux/">更多Linux文章</a></li>
<li><a href="https://droidyue.com/blog/categories/jiao-ben/">更多脚本文章</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 下按照文件大小查找文件]]></title>
    <link href="https://droidyue.com/blog/2020/04/20/find-files-by-size-in-linux/"/>
    <updated>2020-04-20T20:33:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/04/20/find-files-by-size-in-linux</id>
    <content type="html"><![CDATA[<h2>为什么需要这篇文章</h2>

<p>我想大概是这种情况，你的Linux 机器下磁盘满了，需要清理，然后就需要查找大的文件，确定是否有用进行删除。</p>

<!--more-->


<h2>具体做法</h2>

<h3>查找500M以上的文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo find / -size +500M
</span><span class='line'>
</span><span class='line'>/swap.img
</span><span class='line'>/home/androidyue/file_server/ubuntu_18.04.tar
</span><span class='line'>/home/androidyue/bin/TeamCity-2019.2.2.tar.gz
</span><span class='line'>/proc/kcore
</span><span class='line'>find: ‘/proc/23619’: No such file or directory
</span></code></pre></td></tr></table></div></figure>


<h3>查找整整500M的文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo find / -size 500M
</span></code></pre></td></tr></table></div></figure>


<h3>查找小于500M的文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo find / -size -500M
</span><span class='line'>/
</span><span class='line'>/opt
</span><span class='line'>/opt/containerd
</span><span class='line'>/opt/containerd/lib
</span><span class='line'>/opt/containerd/bin
</span><span class='line'>/opt/gitlab
</span><span class='line'>/opt/gitlab/sv
</span><span class='line'>/opt/gitlab/sv/prometheus
</span><span class='line'>/opt/gitlab/sv/prometheus/log
</span><span class='line'>/opt/gitlab/sv/prometheus/log/run
</span><span class='line'>/opt/gitlab/sv/prometheus/log/main
</span><span class='line'>/opt/gitlab/sv/prometheus/log/supervise
</span><span class='line'>/opt/gitlab/sv/prometheus/log/supervise/stat
</span><span class='line'>/opt/gitlab/sv/prometheus/log/supervise/status
</span><span class='line'>/opt/gitlab/sv/prometheus/log/supervise/pid
</span><span class='line'>/opt/gitlab/sv/prometheus/log/supervise/lock
</span><span class='line'>/opt/gitlab/sv/prometheus/log/supervise/ok
</span><span class='line'>/opt/gitlab/sv/prometheus/log/supervise/control
</span><span class='line'>/opt/gitlab/sv/prometheus/run
</span><span class='line'>/opt/gitlab/sv/prometheus/env
</span></code></pre></td></tr></table></div></figure>


<h3>查找大于100M且小于500M的文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo find / -size -500M -size +100M
</span><span class='line'>/sys/devices/pci0000:00/0000:00:02.0/resource2_wc
</span><span class='line'>/sys/devices/pci0000:00/0000:00:02.0/resource2
</span><span class='line'>/usr/bin/dockerd
</span></code></pre></td></tr></table></div></figure>


<h2>其他查找单位</h2>

<ul>
<li>b – for 512-byte blocks (this is the default if no suffix is used)</li>
<li>c – for bytes</li>
<li>w – for two-byte words</li>
<li>k – for Kilobytes</li>
<li>M – for Megabytes</li>
<li>G – for Gigabytes</li>
</ul>


<h2>References</h2>

<ul>
<li><a href="https://www.ostechnix.com/find-files-bigger-smaller-x-size-linux/">https://www.ostechnix.com/find-files-bigger-smaller-x-size-linux/</a></li>
<li><a href="http://man7.org/linux/man-pages/man1/find.1.html">http://man7.org/linux/man-pages/man1/find.1.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Centos(Linux)系统下实现挂载硬盘]]></title>
    <link href="https://droidyue.com/blog/2020/04/12/mount-a-new-disk-on-centos-linux/"/>
    <updated>2020-04-12T20:50:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/04/12/mount-a-new-disk-on-centos-linux</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<ul>
<li>团队的CI机器有两块硬盘，一块是256G SSD,另一块是1T 机械硬盘。</li>
<li>系统安装到了SSD上，1T的机械硬盘处于闲置状态，需要挂载，用来存放一些文件。</li>
</ul>


<!--more-->


<h2>注意事项</h2>

<ul>
<li>文章提到的<code>/dev/sda</code>和<code>/mnthhd_my</code>仅为示例说明</li>
<li>需要根据自己的真实情况进行替换，尤其是格式化硬盘是要格外注意。</li>
</ul>


<h2>确定新硬盘</h2>

<h3>使用fdisk -l</h3>

<p>使用fdisk并且配合目标硬盘的容量1T,我们可以轻松的找到未挂载的硬盘是<code>/dev/sda</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo fdisk -l
</span><span class='line'>
</span><span class='line'>Disk /dev/nvme0n1: 238.5 GiB, 256060514304 bytes, 500118192 sectors
</span><span class='line'>Units: sectors of 1 * <span class="nv">512</span> <span class="o">=</span> 512 bytes
</span><span class='line'>Sector size <span class="o">(</span>logical/physical<span class="o">)</span>: 512 bytes / 512 bytes
</span><span class='line'>I/O size <span class="o">(</span>minimum/optimal<span class="o">)</span>: 512 bytes / 512 bytes
</span><span class='line'>Disklabel <span class="nb">type</span>: gpt
</span><span class='line'>Disk identifier: XXXXXX-C9A1-4D0D-8CF5-XXXXX
</span><span class='line'>
</span><span class='line'>Device           Start       End   Sectors   Size Type
</span><span class='line'>/dev/nvme0n1p1    2048   1230847   1228800   600M EFI System
</span><span class='line'>/dev/nvme0n1p2 1230848   3327999   2097152     1G Linux filesystem
</span><span class='line'>/dev/nvme0n1p3 3328000 500117503 496789504 236.9G Linux LVM
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disk /dev/sda: 931.5 GiB, 1000204886016 bytes, 1953525168 sectors
</span><span class='line'>Units: sectors of 1 * <span class="nv">512</span> <span class="o">=</span> 512 bytes
</span><span class='line'>Sector size <span class="o">(</span>logical/physical<span class="o">)</span>: 512 bytes / 4096 bytes
</span><span class='line'>I/O size <span class="o">(</span>minimum/optimal<span class="o">)</span>: 4096 bytes / 4096 bytes
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disk /dev/mapper/cl-root: 50 GiB, 53687091200 bytes, 104857600 sectors
</span><span class='line'>Units: sectors of 1 * <span class="nv">512</span> <span class="o">=</span> 512 bytes
</span><span class='line'>Sector size <span class="o">(</span>logical/physical<span class="o">)</span>: 512 bytes / 512 bytes
</span><span class='line'>I/O size <span class="o">(</span>minimum/optimal<span class="o">)</span>: 512 bytes / 512 bytes
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disk /dev/mapper/cl-swap: 15.7 GiB, 16869490688 bytes, 32948224 sectors
</span><span class='line'>Units: sectors of 1 * <span class="nv">512</span> <span class="o">=</span> 512 bytes
</span><span class='line'>Sector size <span class="o">(</span>logical/physical<span class="o">)</span>: 512 bytes / 512 bytes
</span><span class='line'>I/O size <span class="o">(</span>minimum/optimal<span class="o">)</span>: 512 bytes / 512 bytes
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disk /dev/mapper/cl-home: 171.2 GiB, 183798595584 bytes, 358981632 sectors
</span><span class='line'>Units: sectors of 1 * <span class="nv">512</span> <span class="o">=</span> 512 bytes
</span><span class='line'>Sector size <span class="o">(</span>logical/physical<span class="o">)</span>: 512 bytes / 512 bytes
</span><span class='line'>I/O size <span class="o">(</span>minimum/optimal<span class="o">)</span>: 512 bytes / 512 bytes
</span></code></pre></td></tr></table></div></figure>


<h3>(可选)使用lsblk</h3>

<p>如果有下面的情况，可以使用lsblk</p>

<ul>
<li>新的硬盘和已有硬盘容量相同，无法确定</li>
<li>再次确定新的硬盘是否是没有挂载</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  ~ lsblk
</span><span class='line'>NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
</span><span class='line'>sda           8:0    0 931.5G  0 disk
</span><span class='line'>nvme0n1     259:0    0 238.5G  0 disk
</span><span class='line'>├─nvme0n1p1 259:1    0   600M  0 part /boot/efi
</span><span class='line'>├─nvme0n1p2 259:2    0     1G  0 part /boot
</span><span class='line'>└─nvme0n1p3 259:3    0 236.9G  0 part
</span><span class='line'>  ├─cl-root 253:0    0    50G  0 lvm  /
</span><span class='line'>  ├─cl-swap 253:1    0  15.7G  0 lvm  <span class="o">[</span>SWAP<span class="o">]</span>
</span><span class='line'>  └─cl-home 253:2    0 171.2G  0 lvm  /home
</span></code></pre></td></tr></table></div></figure>


<p>如上</p>

<ul>
<li>sda 的 MOUNTPOINT对应的为空，表明并没有挂载</li>
</ul>


<h2>(可选)创建文件系统</h2>

<p>其实就是格式化新的硬盘，这一步是比较危险的，一定要确保<code>/dev/sda</code>是你那里正确的硬盘。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkfs -t ext4 /dev/sda
</span></code></pre></td></tr></table></div></figure>


<p>这一步并非必须的，但是如果需要这样的问题<code>wrong fs type, bad option, bad superblock on /dev/sda, missing codepage or helper program, or other error</code>。则需要执行这一个步骤。</p>

<h2>创建挂载点</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir /mnthhd_my
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>/mnthhd_my</code>并没有限定，可以为其他路径。</p>

<h2>进行挂载</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mount /dev/sda mnthhd_my
</span></code></pre></td></tr></table></div></figure>


<h2>验证挂载</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  ~ lsblk
</span><span class='line'>NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
</span><span class='line'>sda           8:0    0 931.5G  0 disk /mnthhd_my
</span><span class='line'>nvme0n1     259:0    0 238.5G  0 disk
</span><span class='line'>├─nvme0n1p1 259:1    0   600M  0 part /boot/efi
</span><span class='line'>├─nvme0n1p2 259:2    0     1G  0 part /boot
</span><span class='line'>└─nvme0n1p3 259:3    0 236.9G  0 part
</span><span class='line'>  ├─cl-root 253:0    0    50G  0 lvm  /
</span><span class='line'>  ├─cl-swap 253:1    0  15.7G  0 lvm  <span class="o">[</span>SWAP<span class="o">]</span>
</span><span class='line'>  └─cl-home 253:2    0 171.2G  0 lvm  /home
</span></code></pre></td></tr></table></div></figure>


<p>sda对应的MOUNTPOINT的值变成了<code>/mnthhd_my</code></p>

<h2>开机自动挂载硬盘</h2>

<ul>
<li>上面的挂载只在当前系统运行期间生效。</li>
<li>想要开机自动挂载需要额外的修改。</li>
</ul>


<h3>实施步骤</h3>

<ol>
<li> 备份现有配置文件，执行<code>cp /etc/fstab /etc/fstab.backup</code></li>
<li> 打开配置文件  <code>sudo vim /etc/fstab</code></li>
<li> 文件最后添加挂载配置 <code>/dev/sda  /mnthhd_my   ext4    defaults    0 2</code></li>
<li> 保存文件</li>
<li> 使用<code>mount -a</code>验证fstab配置是否正确。</li>
<li> 重启服务器进行验证。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The APK file xxxx.apk does not exist on disk问题修复]]></title>
    <link href="https://droidyue.com/blog/2020/04/11/the-apk-file-xxxx-dot-apk-does-not-exist-on-disk/"/>
    <updated>2020-04-11T15:22:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/04/11/the-apk-file-xxxx-dot-apk-does-not-exist-on-disk</id>
    <content type="html"><![CDATA[<p>许久之前，用Espresso写过一些测试用例，但是执行的时候总是报这种错误</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>The APK file aaa-debug-4.2.8-886eda0d9d-400208.apk does not exist on disk.
</span><span class='line'>Error <span class="k">while </span>Installing APK
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h2>解决方法</h2>

<p>执行<code>File -&gt; Sync Project with Gradle Files</code> 即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复Gradle因代理设置导致的超时问题]]></title>
    <link href="https://droidyue.com/blog/2020/04/11/fix-gradle-timeout-due-to-wrong-network-configuration/"/>
    <updated>2020-04-11T14:58:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/04/11/fix-gradle-timeout-due-to-wrong-network-configuration</id>
    <content type="html"><![CDATA[<p>之前在项目中增加了一个项目依赖，可是配置的时候，怎么也无法下载下来。中终端执行gradle得到的错误日志如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">internal</span><span class="o">.</span><span class="na">resource</span><span class="o">.</span><span class="na">transport</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">HttpRequestException</span><span class="o">:</span> <span class="n">Could</span> <span class="n">not</span> <span class="n">HEAD</span> <span class="err">&#39;</span><span class="nl">https:</span><span class="c1">//jcenter.bintray.com/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1-sources.jar&#39;.</span>
</span><span class='line'><span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">internal</span><span class="o">.</span><span class="na">resource</span><span class="o">.</span><span class="na">transport</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">HttpClientHelper</span><span class="o">.</span><span class="na">performRequest</span><span class="o">(</span><span class="n">HttpClientHelper</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">96</span><span class="o">)</span>
</span><span class='line'><span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">internal</span><span class="o">.</span><span class="na">resource</span><span class="o">.</span><span class="na">transport</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">HttpClientHelper</span><span class="o">.</span><span class="na">performRawHead</span><span class="o">(</span><span class="n">HttpClientHelper</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">72</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>怀疑是网络的问题，先后开启了***工具都无法下载。后来摸索了一段时间，才发现了问题的所在。我在gradle.properties的代理错误设置有问题</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">https</span><span class="o">.</span><span class="na">proxyPort</span><span class="o">=</span><span class="mi">1080</span>
</span><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">proxyHost</span><span class="o">=</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span>
</span><span class='line'><span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">jvmargs</span><span class="o">=-</span><span class="n">Xmx10240m</span> <span class="o">-</span><span class="n">XX</span><span class="err">\</span><span class="o">:</span><span class="n">MaxPermSize</span><span class="err">\</span><span class="o">=</span><span class="mi">4096</span><span class="n">m</span> <span class="o">-</span><span class="n">XX</span><span class="err">\</span><span class="o">:+</span><span class="n">HeapDumpOnOutOfMemoryError</span> <span class="o">-</span><span class="n">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="err">\</span><span class="o">=</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span>
</span><span class='line'><span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">daemon</span><span class="o">=</span><span class="kc">true</span>
</span><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">https</span><span class="o">.</span><span class="na">proxyHost</span><span class="o">=</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span>
</span><span class='line'><span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">parallel</span><span class="o">=</span><span class="kc">true</span>
</span><span class='line'><span class="n">systemProp</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">proxyPort</span><span class="o">=</span><span class="mi">1080</span>
</span></code></pre></td></tr></table></div></figure>


<h2>解决方法</h2>

<ul>
<li>删除或者更正相关的http和https的host和端口，问题即可解决。</li>
</ul>


<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[未合并分支不怕丢,一个脚本快速搞定]]></title>
    <link href="https://droidyue.com/blog/2020/04/05/a-quick-script-to-view-all-unmerged-branches/"/>
    <updated>2020-04-05T21:20:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/04/05/a-quick-script-to-view-all-unmerged-branches</id>
    <content type="html"><![CDATA[<p>我们使用 git 作为 版本控制工具，极大的提高了效率，但是随着业务的增多和自身对于提交内容原子性的要求，往往会产生很多的分支，这就难免有时候，在发版的时候，某些分支被遗忘提交，造成功能丢失等问题。</p>

<p>因而如果保证分支多而且不忘记合并，是一个我们需要解决的问题。</p>

<ul>
<li>单纯靠人为挨个去看，肯定是不行的</li>
<li>如果有程序化处理就靠谱多了</li>
</ul>


<!--more-->


<p>是的，git有一个这样的功能呢，比如我们想要查看是否有分支没有合并进入develop</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch --no-merged develop
</span></code></pre></td></tr></table></div></figure>


<p>是的，这能解决问题，但是比如我们迁出了预发布分支(pre_release)，有的分支合并到了pre_release(但没有合并到develop), 上面的查找就不太合适了。</p>

<p>所以我们需要的是</p>

<ul>
<li>能进行基于多个分支未合并的分支去交集</li>
<li>支持自定义的忽略某些分支出现在未合并分支列表</li>
</ul>


<p>于是有了下面的脚本</p>

<h2>脚本内容</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">getUnmergedBranches</span><span class="p">(</span><span class="n">targetBranch</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="sb">`git branch --no-merged </span><span class="si">#{</span><span class="n">targetBranch</span><span class="si">}</span><span class="sb">`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/\n+/</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">sub</span>  <span class="s1">&#39;*&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span> <span class="p">}</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span> <span class="n">e</span><span class="o">.</span><span class="n">strip</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">branchesUnmergedToPreRelease</span> <span class="o">=</span> <span class="n">getUnmergedBranches</span><span class="p">(</span><span class="s1">&#39;origin/pre_release&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="p">(</span><span class="n">getUnmergedBranches</span><span class="p">(</span><span class="s1">&#39;origin/develop&#39;</span><span class="p">)</span> <span class="o">&amp;</span> <span class="n">branchesUnmergedToPreRelease</span><span class="p">)</span><span class="o">.</span><span class="n">select</span> <span class="p">{</span><span class="o">|</span><span class="n">branch</span><span class="o">|</span> <span class="o">!</span><span class="n">branch</span><span class="o">.</span><span class="n">start_with?</span> <span class="s2">&quot;unmerge_ignore_&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的脚本做的是</p>

<ul>
<li>获取未合并进入<code>origin/develop</code>的分支集合 A</li>
<li>获取未合并进入<code>origin/pre_release</code>的分支集合 B</li>
<li>对于上面的 分支集合 A 和 B 取交集 得到 分支集合 C</li>
<li>在分支集合 C 中提出 自定义忽略分支（以<code>unmerge_ignore_</code>开头）</li>
</ul>


<h2>脚本使用示例</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~:/  ruby unmergedBranches.rb
</span><span class='line'>checkstyle
</span><span class='line'>error_prone
</span><span class='line'>file_chooser_webview
</span><span class='line'>image_loading
</span><span class='line'>jduan_inter_webview_messaging
</span><span class='line'>jduan_webview_client_refactor
</span><span class='line'>migration_to_androidx
</span><span class='line'>upgrade_gradle_1106
</span><span class='line'>upgrade_gradle_3.2.0
</span><span class='line'>upgrade_suppport_28.0.0
</span><span class='line'>video_preload
</span></code></pre></td></tr></table></div></figure>


<h2>忽略某个分支，不作为unmerged 分支内容</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Please input the branch to unmerge-ignore&quot;</span>
</span><span class='line'><span class="n">targetBranch</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;You want to ignore this branch:</span><span class="si">#{</span><span class="n">targetBranch</span><span class="si">}</span><span class="s2">, Are you sure? (input yes)&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">confirm</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">confirm</span> <span class="o">==</span> <span class="s2">&quot;yes&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">newBranchName</span> <span class="o">=</span> <span class="s2">&quot;unmerge_ignore_</span><span class="si">#{</span><span class="n">targetBranch</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git branch -m </span><span class="si">#{</span><span class="n">targetBranch</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">newBranchName</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;changed </span><span class="si">#{</span><span class="n">targetBranch</span><span class="si">}</span><span class="s2"> into </span><span class="si">#{</span><span class="n">newBranchName</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用上面的脚本，就能够以命令交互的形式忽略某个分支</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~:/ ruby ignoreBranchWhenUnmerged.rb
</span><span class='line'>Please input the branch to unmerge-ignore
</span><span class='line'>new_account_sys
</span><span class='line'>You want to ignore this branch:new_account_sys, Are you sure? <span class="o">(</span>input yes<span class="o">)</span>
</span><span class='line'>yes
</span><span class='line'>changed new_account_sys into unmerge_ignore_new_account_sys
</span></code></pre></td></tr></table></div></figure>


<p>以上.</p>

<h2>更多内容推荐</h2>

<ul>
<li><a href="https://droidyue.com/blog/categories/jiao-ben/">更多脚本高效工具</a></li>
<li><a href="https://droidyue.com/ninki/">小黑屋优质内容</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[INSTALL PARSE FAILED UNEXPECTED EXCEPTION 问题]]></title>
    <link href="https://droidyue.com/blog/2020/03/30/install-parse-failed-unexpected-exception/"/>
    <updated>2020-03-30T20:59:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/03/30/install-parse-failed-unexpected-exception</id>
    <content type="html"><![CDATA[<p>顺手整理一个之前记录未文字输出的老问题，使用adb install爆出的问题</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb install -r -d <span class="s2">&quot;2.8.5-475.apk&quot;</span>
</span><span class='line'>adb: failed to install 2.8.5-475.apk: Failure <span class="o">[</span>INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION:
</span><span class='line'>Failed to parse /data/app/vmdl981460948.tmp/base.apk: AndroidManifest.xml<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h2>原因</h2>

<p>apk在传入过程中出现错误，所以导致了该问题出现</p>

<h2>解决方案</h2>

<p>重新传输没有问题的apk包。</p>

<h2>怎么验证apk包没有问题</h2>

<ul>
<li>发送者发apk，顺带着apk的md5值</li>
<li>接收端接收apk，并校验apk的md5值是否与发送者的一致。</li>
</ul>


<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[树莓派 gitlab问题整理]]></title>
    <link href="https://droidyue.com/blog/2020/03/29/install-gitlab-on-raspberry-pi-issues/"/>
    <updated>2020-03-29T20:15:00+08:00</updated>
    <id>https://droidyue.com/blog/2020/03/29/install-gitlab-on-raspberry-pi-issues</id>
    <content type="html"><![CDATA[<h2>E: Unable to locate package gitlab-ce</h2>

<ul>
<li>不要使用<code>sudo curl -sS https://packages.gitlab.com/install/repositories/gitlab/raspberry-pi2/script.deb.sh | sudo bash</code></li>
<li>替换使用这个<code>sudo curl -sS https://packages.gitlab.com/install/repositories/gitlab/raspberry-pi2/script.deb.sh | sudo os=raspbian dist=jessie bash</code></li>
<li>然后执行<code>sudo apt install gitlab-ce</code></li>
</ul>


<!--more-->


<h2>E: The package gitlab-ce needs to be reinstalled, but I can&rsquo;t find an archive for it.</h2>

<ul>
<li>执行<code>sudo dpkg --remove --force-all  gitlab-ce</code></li>
</ul>


<h2>References</h2>

<ul>
<li><a href="https://gitlab.com/gitlab-org/omnibus-gitlab/issues/2767#note_54628738">https://gitlab.com/gitlab-org/omnibus-gitlab/issues/2767#note_54628738</a></li>
<li><a href="https://askubuntu.com/questions/868064/e-the-package-ubuntu-mono-needs-to-be-reinstalled-but-i-cant-find-an-archive/868227#868227">https://askubuntu.com/questions/868064/e-the-package-ubuntu-mono-needs-to-be-reinstalled-but-i-cant-find-an-archive/868227#868227</a></li>
</ul>

]]></content>
  </entry>
  
</feed>

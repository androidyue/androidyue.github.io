<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: JavaScript | 技术小黑屋]]></title>
  <link href="http://droidyue.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2014-08-12T21:46:46+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WebView重写onJsAlert那些事]]></title>
    <link href="http://droidyue.com/blog/2014/07/09/override-javascript-alert-in-android/"/>
    <updated>2014-07-09T21:35:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/09/override-javascript-alert-in-android</id>
    <content type="html"><![CDATA[<p>本文主要将如何重写onJsAlert,让烦人的对话框变为无干扰的Toast,以及为什么onJsAlert只调用一次的问题.</p>

<h3>什么是Javascript Alert</h3>

<p>Alert是一种提示信息或者警告信息的对话框,一旦显示到用户面前,只能点击OK才能关闭.</p>

<!--more-->


<p>通常一般的实现类似
```html
<html></p>

<pre><code>&lt;SCRIPT type="text/javascript"&gt;
    alert('This is alert dialog !')
&lt;/SCRIPT&gt;
</code></pre>

<p></html>
```</p>

<p>对应的效果图:</p>

<p><img class="<a" src="href="http://droidyueimg.qiniudn.com/js_alert.png">http://droidyueimg.qiniudn.com/js_alert.png</a>" title="javascript alert dialog" ></p>

<h3>onJsAlert API 介绍</h3>

<blockquote><p>public boolean onJsAlert (WebView view, String url, String message, JsResult result)<br/>
Added in API level 1<br/>
Tell the client to display a javascript alert dialog. If the client returns true, WebView will assume that the client will handle the dialog. If the client returns false, it will continue execution.<br/>
Parameters<br/>
view    The WebView that initiated the callback.<br/>
url The url of the page requesting the dialog.<br/>
message Message to be displayed in the window.<br/>
result  A JsResult to confirm that the user hit enter.<br/>
Returns<br/>
boolean Whether the client will handle the alert dialog.</p></blockquote>

<h3>重写为Toast展示</h3>

<p>其实Alert,只是提示信息,而且这个提示信息还是阻塞其他操作的,为什么我们不适用一个长时间显示的Toast呢?</p>

<p>下面示范一下如何换成Toast.
```java
@Override
public boolean onJsAlert(WebView view, String url, String message, JsResult result) {</p>

<pre><code>Log.i("MainActivity", "onJsAlert url=" + url + ";message=" + message);
Toast.makeText(getApplicationContext(), message, Toast.LENGTH_LONG).show();
result.confirm();
return true;
</code></pre>

<p>}
```</p>

<h3>为什么onJsAlert只调用了一次</h3>

<p>如果你没有参考上述部分或者没有留意,有时候你会发现onJsAlert只调用了一次,为什么呢,实际上,你可能忽略了一句调用.就是处理JsResult.</p>

<blockquote><p>public final void cancel ()
Added in API level 1
Handle the result if the user cancelled the dialog.</p>

<p>public final void confirm ()
Added in API level 1
Handle a confirmation response from the user.</p></blockquote>

<p>你需要调用result.confirm()或者result.cancel()来处理jsResult,否则会出问题.</p>

<h3>demo下载</h3>

<ul>
<li><a href="http://pan.baidu.com/s/14bjMA">http://pan.baidu.com/s/14bjMA</a></li>
</ul>


<h3>延伸阅读:</h3>

<p><a href="http://www.w3schools.com/js/js_popup.asp">http://www.w3schools.com/js/js_popup.asp</a>
<a href="http://developer.android.com/reference/android/webkit/JsResult.html">http://developer.android.com/reference/android/webkit/JsResult.html</a></p>

<h3>推荐</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00FQEDTA8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00FQEDTA8&linkCode=as2&tag=droidyue-23">精彩绝伦的Android UI设计:响应式用户界面与设计模式</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00FQEDTA8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0097CON2S/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0097CON2S&linkCode=as2&tag=droidyue-23">JavaScript语言精粹</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0097CON2S" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
</feed>

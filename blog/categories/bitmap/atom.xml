<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bitmap | 技术小黑屋]]></title>
  <link href="http://droidyue.com/blog/categories/bitmap/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2015-07-29T21:59:13+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android处理图像数据全记录]]></title>
    <link href="http://droidyue.com/blog/2014/10/03/handle-image-data-in-android/"/>
    <updated>2014-10-03T17:42:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/10/03/handle-image-data-in-android</id>
    <content type="html"><![CDATA[<p>Android中处理图像是一件很常见的事情，这里记录备忘一些亲身使用过的处理图片数据的方法。</p>

<h2>转为Bitmap</h2>

<!--more-->


<h3>RGB值转Bitmap</h3>

<p>```java
private Bitmap createColorBitmap(String rgb, int width, int height) {</p>

<pre><code>    Bitmap bmp = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
    int color = Color.parseColor(rgb);
    bmp.eraseColor(color);
    return bmp;
</code></pre>

<p>}</p>

<p>//Usage
Bitmap bmp = createColorBitmap(&ldquo;#cce8cf&rdquo;, 200, 50);
```</p>

<h3>Color值转Bitmap</h3>

<p>```java
private Bitmap createColorBitmap(int color, int width, int height) {</p>

<pre><code>Bitmap bmp = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
bmp.eraseColor(color);
return bmp;
</code></pre>

<p>}
//Usage
Bitmap bmp = createColorBitmap(Color.BLUE, 200, 50);
```</p>

<h3>字节数组转Bitmap</h3>

<p>```java
private Bitmap getBitmapFromByteArray(byte[] array) {</p>

<pre><code>return BitmapFactory.decodeByteArray(array, 0, array.length);
</code></pre>

<p>}
```</p>

<h3>读取文件转Bitmap</h3>

<p>```java
private Bitmap getBitmapFromFile(String pathName) {</p>

<pre><code>    return BitmapFactory.decodeFile(pathName);
</code></pre>

<p>}
```</p>

<h3>读取资源转Bitmap</h3>

<p>```java
private Bitmap getBitmapFromResource(Resources res, int resId) {</p>

<pre><code>    return BitmapFactory.decodeResource(res, resId);
}
</code></pre>

<p>```</p>

<h3>输入流转Bitmap</h3>

<p>```java
private Bitmap getBitmapFromStream(InputStream inputStream) {</p>

<pre><code>    return BitmapFactory.decodeStream(inputStream);
</code></pre>

<p>}
```</p>

<h3>Drawable转Bitmap</h3>

<p><code>java
Bitmap icon = BitmapFactory.decodeResource(context.getResources(),R.drawable.icon_resource);
</code></p>

<h2>转为Drawable</h2>

<h3>资源转Drawable</h3>

<p><code>java
Drawable drawable = getResources().getDrawable(R.drawable.ic_launcher);
</code></p>

<h3>Bitmap转Drawable</h3>

<p><code>java
Drawable d = new BitmapDrawable(getResources(),bitmap);
</code></p>

<h2>图片圆角展示</h2>

<p>通过对图片数据bitmap进行处理即可，其中pixels为边角的半径。
```java
public static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int pixels) {</p>

<pre><code>    Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap
            .getHeight(), Config.ARGB_8888);
    Canvas canvas = new Canvas(output);

    final int color = 0xff424242;
    final Paint paint = new Paint();
    final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
    final RectF rectF = new RectF(rect);
    final float roundPx = pixels;

    paint.setAntiAlias(true);
    canvas.drawARGB(0, 0, 0, 0);
    paint.setColor(color);
    canvas.drawRoundRect(rectF, roundPx, roundPx, paint);

    paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
    canvas.drawBitmap(bitmap, rect, rect, paint);

    return output;
}
</code></pre>

<p>```</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00LVHTI9U/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00LVHTI9U&linkCode=as2&tag=droidyue-23">第一行代码:Android</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00LVHTI9U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00J4DXWDG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00J4DXWDG&linkCode=as2&tag=droidyue-23">Android编程权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00J4DXWDG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00GU73RHA/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00GU73RHA&linkCode=as2&tag=droidyue-23">Android应用UI设计模式</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00GU73RHA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
</feed>

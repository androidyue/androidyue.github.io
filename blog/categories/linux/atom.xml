<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 技术小黑屋]]></title>
  <link href="http://droidyue.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2016-02-20T12:05:55+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[修改Linux系统时间的最简单方法]]></title>
    <link href="http://droidyue.com/blog/2014/10/03/modify-system-time-in-linux-or-mac/"/>
    <updated>2014-10-03T21:07:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/10/03/modify-system-time-in-linux-or-mac</id>
    <content type="html"><![CDATA[<p>在Linux桌面发行版提供了设置系统时间的界面程序，这个设置很简单，但是当你学会了下面的方法之后，你就开始厌烦用GUI界面设置了。</p>

<p>最简单的设置方法 就是创建一个符号链接/etc/localtime，其指向目标设置的时区城市代表（/usr/share/zoneinfo/ 目录下）</p>

<!--more-->


<p>比如我们想把机器的时区修改成亚洲的上海（东八区），我们按照下面操作就可以了。</p>

<p>其中s选项代表是符号链接，f选项代表强制删除目标。
<code>bash
sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime
</code>
注意，Asia通常是没有Beijing的，可能没有上海国际化吧，所以如果是东八区就要用上海。</p>

<p>经测试，Mac机器上述命令也是生效的。</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00BQTWC0U/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00BQTWC0U&linkCode=as2&tag=droidyue-23">Linux命令行大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00BQTWC0U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00LF4UPWS/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00LF4UPWS&linkCode=as2&tag=droidyue-23">Linux就是这个范儿</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00LF4UPWS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B003TJNO98/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003TJNO98&linkCode=as2&tag=droidyue-23">鸟哥的Linux私房菜:基础学习篇</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B003TJNO98" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[获取shell脚本所在目录]]></title>
    <link href="http://droidyue.com/blog/2014/09/21/determine-shell-script-located-directory/"/>
    <updated>2014-09-21T17:48:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/21/determine-shell-script-located-directory</id>
    <content type="html"><![CDATA[<p>前几天写的<a href="http://droidredirect.sinaapp.com/qiniu_redirect.php" target="_blank">七牛</a>的参赛demo，用bash写了一个便捷安装的脚本，涉及到了路径相关的判断，从<a href="http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in" target="_blank">stackoverflow</a>，加上自己的实践整理一下。</p>

<!--more-->


<h3>简单版</h3>

<p>下面是一个最简单的实现，可以解决大多数问题，缺陷是对于软链接显示的是软链接所在的目录
```bash lineos:false</p>

<h1>!/bin/bash</h1>

<p>DIR=&ldquo;$( cd &rdquo;$( dirname &ldquo;$0&rdquo;  )&ldquo; &amp;&amp; pwd  )&rdquo;
```</p>

<h3>完善版</h3>

<p>这个版本解决了使用<code>ln -s target linkName</code>创造软链接无法正确取到真实脚本的问题。
```bash lineos:false</p>

<h1>!/bin/bash</h1>

<p>SOURCE=&ldquo;$0&rdquo;
while [ -h &ldquo;$SOURCE&rdquo;  ]; do # resolve $SOURCE until the file is no longer a symlink</p>

<pre><code>DIR="$( cd -P "$( dirname "$SOURCE"  )" &amp;&amp; pwd  )"
SOURCE="$(readlink "$SOURCE")"
[[ $SOURCE != /*  ]] &amp;&amp; SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
</code></pre>

<p>done
DIR=&ldquo;$( cd -P &rdquo;$( dirname &ldquo;$SOURCE&rdquo;  )&ldquo; &amp;&amp; pwd  )&rdquo;
```</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/0596009658/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=0596009658&linkCode=as2&tag=droidyue-23">Learning the Bash Shell</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=0596009658" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0096EXMS8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0096EXMS8&linkCode=as2&tag=droidyue-23">Linux命令行与shell脚本编程大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0096EXMS8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00N75YP74/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00N75YP74&linkCode=as2&tag=droidyue-23">穿布鞋的马云:决定阿里巴巴生死的27个节点</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00N75YP74" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tar time stamp in the future 问题解决]]></title>
    <link href="http://droidyue.com/blog/2014/07/18/tar-time-stamp-in-the-future/"/>
    <updated>2014-07-18T00:19:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/18/tar-time-stamp-in-the-future</id>
    <content type="html"><![CDATA[<p>最近遇到过一个这样的问题,我在我的Mac机器将一个刚刚创建的文件进行tar打包生成文件scripts.tar.bz2,然后在一台Centos得到这个文件,进行解压,然后出现了如下问题 time stamp in the future.</p>

<!--more-->


<p><code>bash
$ tar xvjf scripts.tar.bz2
temp
tar: temp: time stamp 2014-07-17 13:34:02 is 2459.292801106 s in the future
</code></p>

<h2>原因</h2>

<p>两台机器时间不一致,创建并压缩文件操作的机器(本例为Mac)的时间要大于解压文件机器(Centos)的时间</p>

<h2>对症下药</h2>

<ul>
<li>将两台机器的时间调整为一致.</li>
<li>加上m参数,如 <strong>tar xvjfm scripts.tar.bz2</strong> 使用解压机器上的时间.<code>-m, --touch                don't extract file modified time</code></li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B003TJNO98/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003TJNO98&linkCode=as2&tag=droidyue-23">鸟哥的Linux私房菜:基础学习篇</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B003TJNO98" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac终端新标签打开当前目录]]></title>
    <link href="http://droidyue.com/blog/2014/07/10/set-working-directory-as-the-current-one-in-terminal-on-mac/"/>
    <updated>2014-07-10T19:02:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/10/set-working-directory-as-the-current-one-in-terminal-on-mac</id>
    <content type="html"><![CDATA[<p>Mac中终端每次打开一个标签都是一个固定的路径,这点对于从Linux发行版过来的用户来说,简直是很不爽,那么如何实现像Linux发行版一样,新标签的打开路径和启动它的标签路径一直呢?</p>

<p>以下几种方法仅供参考.分别是设置shell脚本, 修改Terminal设置,和修改iTerm设置.</p>

<!--more-->


<h2>最Geek</h2>

<p>创建文件/usr/local/bin/nt (需要Root权限),内容为
```bash</p>

<h1>!/bin/bash</h1>

<h1>!/bin/bash</h1>

<p>osascript -e &lsquo;tell application &ldquo;Terminal&rdquo;&rsquo; \
-e &lsquo;tell application &ldquo;System Events&rdquo; to tell process &ldquo;Terminal&rdquo; to keystroke &ldquo;t&rdquo; using command down&rsquo; \
-e &ldquo;do script with command \"cd <code>pwd</code>;clear\&rdquo; in selected tab of the front window" \
-e &lsquo;end tell&rsquo; &amp;> /dev/null
<code>
赋予可执行权限
</code>bash
sudo chmod a+x /usr/local/bin/nt
```
如不生效,重启终端程序.</p>

<h2>修改Terminal设置</h2>

<p>选择Preferences&mdash;Startup&mdash;New tabs open with 或者如下图.
<img class="<a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/system_terminal_working_path.png">http://7jpolu.com1.z0.glb.clouddn.com/system_terminal_working_path.png</a>" title="Mac Set Terminal Wroking Directory" ></p>

<h2>修改iTerm设置</h2>

<p>选择Preferences&mdash;Profile&mdash;General&mdash;Working Directory 或者如下图
<img class="<a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/iterm_set_working_path.png">http://7jpolu.com1.z0.glb.clouddn.com/iterm_set_working_path.png</a>" title="Mac iTerm Set Working Directory" ></p>

<h2>Others</h2>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B004BR2OW0/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B004BR2OW0&linkCode=as2&tag=droidyue-23">开始Mac:实战手册</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B004BR2OW0" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BashBites:Check Files]]></title>
    <link href="http://droidyue.com/blog/2013/12/28/bashbites-check-files/"/>
    <updated>2013-12-28T10:38:00+08:00</updated>
    <id>http://droidyue.com/blog/2013/12/28/bashbites-check-files</id>
    <content type="html"><![CDATA[<h3>Check a file exists</h3>

<p>```bash</p>

<h1>!/bin/bash</h1>

<p>if [[ -e /tmp/adb.log  ]]
then</p>

<pre><code>echo "Exists"
</code></pre>

<p>else</p>

<pre><code>echo "Not Exists"
</code></pre>

<p>fi
```</p>

<!--more-->


<h3>Check Empty String</h3>

<p>```bash
if [[ -z &ldquo;$emptyString&rdquo;  ]]
then</p>

<pre><code>echo "Empty"
</code></pre>

<p>else</p>

<pre><code>echo "Not Empty"
</code></pre>

<p>fi
```</p>

<p>Here is a reference material from Stackoverflow<a href="http://stackoverflow.com/questions/3767267/check-if-file-exists">http://stackoverflow.com/questions/3767267/check-if-file-exists</a>
```python
-d FILE</p>

<pre><code>FILE exists and is a directory
</code></pre>

<p>-e FILE</p>

<pre><code>FILE exists
</code></pre>

<p>-f FILE</p>

<pre><code>FILE exists and is a regular file
</code></pre>

<p>-h FILE</p>

<pre><code>FILE exists and is a symbolic link (same as -L)
</code></pre>

<p>-r FILE</p>

<pre><code>FILE exists and is readable
</code></pre>

<p>-s FILE</p>

<pre><code>FILE exists and has a size greater than zero
</code></pre>

<p>-w FILE</p>

<pre><code>FILE exists and is writable
</code></pre>

<p>-x FILE</p>

<pre><code>FILE exists and is executable
</code></pre>

<p>-z STRING</p>

<pre><code>the length of STRING is zero
</code></pre>

<p>```
For more detailed information, please visit <a href="http://linux.about.com/library/cmd/blcmdl1_test.htm">http://linux.about.com/library/cmd/blcmdl1_test.htm</a></p>

<h2>Others</h2>

<ul>
<li><a href="http://www.amazon.cn/gp/product/1430219971/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=1430219971&linkCode=as2&tag=droidyue-23">Pro Bash Programming: Scripting the Linux Shell</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=1430219971" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
</feed>

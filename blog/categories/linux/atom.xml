<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Thinkblog]]></title>
  <link href="http://androidyue.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://androidyue.github.io/"/>
  <updated>2014-01-12T17:21:55+08:00</updated>
  <id>http://androidyue.github.io/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fix missing command takes too long to respond in Fedora]]></title>
    <link href="http://androidyue.github.io/blog/2013/12/28/fix-missing-command-takes-too-long-to-respond-in-fedora/"/>
    <updated>2013-12-28T21:51:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/12/28/fix-missing-command-takes-too-long-to-respond-in-fedora</id>
    <content type="html"><![CDATA[<p>I am getting well on with Fedora now. However when I was a fresher to Fedora, I have met a lot of problems. <br/>
One of them is that When I type some wrong commands It will take too long to respond. It&rsquo;s totally different from Ubuntu,which I used before. However I like it could quickly reponse even through the command does not exist.
<code>bash
unset command_not_found_handle
</code>
Ok.Add the above code to .bashrc And it works.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Read Output From Shell]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/05/read-output-from-shell/"/>
    <updated>2013-11-05T12:38:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/05/read-output-from-shell</id>
    <content type="html"><![CDATA[<p>Python provides a lot of method to read output from a just executed shell. However many of them has been deprecated(Not recommened). But subprocess works at present compared to other methods.
```python
from subprocess import Popen,PIPE,STDOUT</p>

<p>def readFromCommand(command) :</p>

<pre><code>p = Popen(command, shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT, close_fds=True)
result = p.stdout.read().strip()
return result
</code></pre>

<p>print readFromCommand(&lsquo;ls&rsquo;)</p>

<h1>result</h1>

<h1>0001-.patch</h1>

<h1>0001-.patch.zip</h1>

<h1>0001-Replace-app_name-into-Browser.patch</h1>

<p>```
A detailed description about subprocess has been written down here. <a href="http://docs.python.org/2/library/subprocess.html">http://docs.python.org/2/library/subprocess.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Determine Whether A System is 64-bit or 32-bit]]></title>
    <link href="http://androidyue.github.io/blog/2013/11/04/how-to-determin-whether-a-system-is-64-bit-or-32-bit/"/>
    <updated>2013-11-04T16:01:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/11/04/how-to-determin-whether-a-system-is-64-bit-or-32-bit</id>
    <content type="html"><![CDATA[<p>A trick in Bash
```bash</p>

<h1>!/bin/bash</h1>

<p>system_bits=<code>uname -m</code>
if [[ &ldquo;$system_bits&rdquo; == x86_64  ]]
then</p>

<pre><code>echo "It's a 64-bit system"
</code></pre>

<p>else</p>

<pre><code>echo "It's a 32-bit system"
</code></pre>

<p>fi</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Failed dependencies: libpopt.so.0]]></title>
    <link href="http://androidyue.github.io/blog/2013/10/31/failed-dependencies-libpopt-dot-so-dot-0/"/>
    <updated>2013-10-31T13:12:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/10/31/failed-dependencies-libpopt-dot-so-dot-0</id>
    <content type="html"><![CDATA[<p>Trick
<code>
sudo yum install popt
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage Httpd Service]]></title>
    <link href="http://androidyue.github.io/blog/2013/09/25/manage-httpd-service/"/>
    <updated>2013-09-25T19:30:00+08:00</updated>
    <id>http://androidyue.github.io/blog/2013/09/25/manage-httpd-service</id>
    <content type="html"><![CDATA[<p>To Start
<code>bash
sudo /sbin/service httpd start
</code>
To Stop
<code>bash
sudo /sbin/service httpd stop
</code>
To Restart
<code>bash
sudo /sbin/service httpd restart
</code></p>
]]></content>
  </entry>
  
</feed>

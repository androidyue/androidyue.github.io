<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | 技术小黑屋]]></title>
  <link href="http://droidyue.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2014-09-14T21:42:43+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android根据资源名获取资源ID]]></title>
    <link href="http://droidyue.com/blog/2014/09/12/get-resource-id-by-name-in-android/"/>
    <updated>2014-09-12T22:12:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/12/get-resource-id-by-name-in-android</id>
    <content type="html"><![CDATA[<p>接触过Android开发的同学们都知道在Android中访问程序资源基本都是通过资源ID来访问。这样开发起来很简单，并且可以不去考虑各种分辨率，语言等不同资源显式指定。</p>

<!--more-->


<h2>痛点</h2>

<p>但是，有时候也会有一些问题，比如我们根据服务器端的值取图片，但是服务器端绝对不会返回给我们的是资源id，最多是一种和文件名相关联的值，操作资源少的时候，可以维护一个容器进行值与资源ID的映射，但是多的话，就需要另想办法了。</p>

<h3>便捷的方法</h3>

<p>在这种情况下，使用文件名来得到资源ID显得事半功倍。
通过调用Resources的getIdentifier可以很轻松地得到资源ID。
几个简单的示例
```java lineos:false
Resources res = getResources();
final String packageName = getPackageName();
int imageResId = res.getIdentifier(&ldquo;ic_launcher&rdquo;, &ldquo;drawable&rdquo;, packageName);
int imageResIdByAnotherForm = res.getIdentifier(packageName + &ldquo;:drawable/ic_launcher&rdquo;, null, null);</p>

<p>int musicResId = res.getIdentifier(&ldquo;test&rdquo;, &ldquo;raw&rdquo;, packageName);</p>

<p>int notFoundResId = res.getIdentifier(&ldquo;activity_main&rdquo;, &ldquo;drawable&rdquo;, packageName);</p>

<p>Log.i(LOGTAG, &ldquo;testGetResourceIds imageResId = &rdquo; + imageResId</p>

<pre><code>            + ";imageResIdByAnotherForm = " + imageResIdByAnotherForm  
            + ";musicResId=" + musicResId
            + ";notFoundResId =" + notFoundResId);
</code></pre>

<p>```</p>

<p>运行结果
<code>bash lineos:false
I/MainActivity( 4537): testGetResourceIds imageResId = 2130837504;imageResIdByAnotherForm = 2130837504;musicResId=2130968576;notFoundResId =0
</code></p>

<h2>看一看API</h2>

<h3>直接API</h3>

<ul>
<li>这个方法用来使用资源名来获取资源ID</li>
<li>完整的资源名为<code>package:type/entry</code>，如果资源名这个参数有完整地指定，后面的defType和defPackage可以省略。</li>
<li>defType和defPackage省略时，需要将其设置成null</li>
<li>注意这个方法不提倡，因为直接通过资源ID访问资源会更加效率高</li>
<li>如果资源没有找到，返回0,在Android资源ID中0不是合法的资源ID。</li>
</ul>


<p>```java  lineos:false android.content.res.Resources.class
/**</p>

<pre><code> * Return a resource identifier for the given resource name.  A fully
 * qualified resource name is of the form "package:type/entry".  The first
 * two components (package and type) are optional if defType and
 * defPackage, respectively, are specified here.
 * 
 * &lt;p&gt;Note: use of this function is discouraged.  It is much more
 * efficient to retrieve resources by identifier than by name.
 * 
 * @param name The name of the desired resource.
 * @param defType Optional default resource type to find, if "type/" is
 *                not included in the name.  Can be null to require an
 *                explicit type.
 * @param defPackage Optional default package to find, if "package:" is
 *                   not included in the name.  Can be null to require an
 *                   explicit package.
 * 
 * @return int The associated resource identifier.  Returns 0 if no such
 *         resource was found.  (0 is not a valid resource ID.)
 */
public int getIdentifier(String name, String defType, String defPackage) {
    try {
        return Integer.parseInt(name);
    } catch (Exception e) {
        // Ignore
    }
    return mAssets.getResourceIdentifier(name, defType, defPackage);
}
</code></pre>

<p>```</p>

<h3>间接API</h3>

<p>实际上上述API调用的是AssetManager.class中的native方法。
```java lineos:false
/**</p>

<pre><code> * Retrieve the resource identifier for the given resource name.
 */
/*package*/ native final int getResourceIdentifier(String type,
                                                   String name,
                                                   String defPackage);
</code></pre>

<p>```</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00J4DXWDG/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00J4DXWDG&linkCode=as2&tag=droidyue-23">Android编程权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00J4DXWDG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011F7WU4/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F7WU4&linkCode=as2&tag=droidyue-23">收藏必备：Java编程思想</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011F7WU4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0011C2P7W/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011C2P7W&linkCode=as2&tag=droidyue-23">经典著作：人月神话</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0011C2P7W" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android UI之自定义Window Title样式]]></title>
    <link href="http://droidyue.com/blog/2014/08/14/style-android-window-title/"/>
    <updated>2014-08-14T20:07:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/14/style-android-window-title</id>
    <content type="html"><![CDATA[<p>Android提供了很多控件便于开发者进行UI相关的程序设计。但是很多时候，默认的一些UI设置不足以满足我们的需求，要么不好看，要么高度不够，亦或者是与应用界面不协调。于是这时候需要通过自定义样式或者自定义控件来实现。</p>

<p>当然，在空间足以满足需求的情况下，通常需要定义样式就可以搞定。本文将简单介绍如何通过自定义样式来实现定义Window Title。</p>

<!--more-->


<h2>先看一下效果图</h2>

<p><img class="<a" src="href="http://droidyueimg.qiniudn.com/style_window_title.png">http://droidyueimg.qiniudn.com/style_window_title.png</a>" title="Custom Window Title Using Style" ></p>

<h2>逐步实现</h2>

<p>在<strong>res/values/styles.xml</strong>文件中加入下列代码
```xml lineos:false res/values/styles.xml</p>

<p> <style name="MyActivityTheme" parent="android:Theme.Light" ></p>

<pre><code>    &lt;item name="android:windowTitleBackgroundStyle"&gt;@style/windowTitleBackgroundStyle&lt;/item&gt;
    &lt;item name="android:windowTitleStyle"&gt;@style/windowTitleStyle&lt;/item&gt;
    &lt;!-- Window Header Height --&gt;
    &lt;item name="android:windowTitleSize"&gt;54dp&lt;/item&gt;
&lt;/style&gt;

&lt;!-- Preference Settings Window Title --&gt;
&lt;style name="windowTitleBackgroundStyle"&gt;  
    &lt;item name="android:background"&gt;#CCE8CF&lt;/item&gt;                
&lt;/style&gt;

&lt;style name="windowTitleStyle"&gt;
    &lt;item name="android:textColor"&gt;#FF0000&lt;/item&gt;
    &lt;item name="android:paddingLeft"&gt;25dp&lt;/item&gt;
    &lt;item name="android:textSize"&gt;20sp&lt;/item&gt;
&lt;/style&gt;
</code></pre>

<p><code>
在Manifest中指定Activity或者Application的主题为上面定义的MyActivityTheme，下面以设置Activity为例。
</code>xml lineos:false
&lt;activity</p>

<pre><code>android:name="com.example.stylewindowtitle.MainActivity"
android:label="@string/app_name"
android:theme="@style/MyActivityTheme"
</code></pre>

<blockquote></blockquote>

<!--code goes here-->


<p>```</p>

<h2>延伸阅读</h2>

<p><a href="http://developer.android.com/reference/android/R.attr.html" target="_blank">Android中的属性</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00D73BJWK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00D73BJWK&linkCode=as2&tag=droidyue-23">浪潮之巅</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00D73BJWK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B004Y4QWMS/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B004Y4QWMS&linkCode=as2&tag=droidyue-23">启示录:打造用户喜爱的产品</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B004Y4QWMS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/0307463745/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=0307463745&linkCode=as2&tag=droidyue-23">Rework</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=0307463745" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[超简单生成微博微信应用签名]]></title>
    <link href="http://droidyue.com/blog/2014/08/13/create-fignerprint-for-weibo-or-wechat-in-the-easiest-way/"/>
    <updated>2014-08-13T20:00:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/13/create-fignerprint-for-weibo-or-wechat-in-the-easiest-way</id>
    <content type="html"><![CDATA[<p>集成微博或者微信的SDK时，编辑应用信息要求填写应用签名，官方推荐下载一个apk工具。有那么复杂么，直接终端就可以搞定。</p>

<!--more-->


<p>```bash
19:33 $ keytool -exportcert -alias your_alias_name -keystore your_keystore_path | openssl md5</p>

<h2>然后按照提示输入密码</h2>

<p>Enter keystore password:  ********
```
替换上面的your_alias_name 和your_keystore_path即可。</p>

<p>真心觉得从手机上安装apk，输入包名得到签名，再取复制，再转到计算机上。麻烦！！！！！</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00647RV78/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00647RV78&linkCode=as2&tag=droidyue-23">Google Android SDK开发范例大全</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00647RV78" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00HECZXKE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00HECZXKE&linkCode=as2&tag=droidyue-23">Android 开发入门与实战</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00HECZXKE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[赶走那些Android工程中得冗余字符串]]></title>
    <link href="http://droidyue.com/blog/2014/08/08/remove-repeated-string-resources-in-android-project/"/>
    <updated>2014-08-08T19:32:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/08/remove-repeated-string-resources-in-android-project</id>
    <content type="html"><![CDATA[<p>Android提供了一套很方便的进行资源（语言）国际化机制，为了更好地支持多语言，很多工程的翻译往往会放到类似crowdin这样的平台上。资源是全了，但是还是会有一些问题。</p>

<!--more-->


<h2>哪些问题</h2>

<p>以下使用一些语言进行举例。其中values为工程默认的资源。</p>

<ul>
<li>某语言的资源和某语言限定区域的资源之间。如<strong>values-fr-rCA</strong>存在于<strong>values-fr</strong>相同的字符串，这种表现最为严重。</li>
<li>某语言的资源和默认的资源之间。<strong>values-fr</strong>存在与<strong>values</strong>相同的字符串，可能原因是由于<strong>values-fr</strong>存在未翻译字符串导致</li>
</ul>


<h2>为什么要去重</h2>

<ul>
<li>洁癖，容不下半点冗余。</li>
</ul>


<h2>解决思路</h2>

<ul>
<li><p>如果<strong>values-fr-rCA</strong>存在于<strong>values-fr</strong>相同的字符串，去除<strong>values-fr-rCA</strong>中的重复字符串，保留<strong>values-fr</strong>。这样可以保证在values-fr-rCA下也可以正确读取到资源。</p></li>
<li><p>如果<strong>values-fr</strong>存在与<strong>values</strong>相同的字符串。如去除<strong>values-fr</strong>中得重复字符串，保留values的条目。</p></li>
</ul>


<h2>Py脚本</h2>

<p>```python filenos:false removeRepeatedStrings.py <a href="https://raw.githubusercontent.com/androidyue/DroidResCleaner/master/removeRepeatedStrings.py">https://raw.githubusercontent.com/androidyue/DroidResCleaner/master/removeRepeatedStrings.py</a></p>

<h1>!/usr/bin/env python</h1>

<h1>coding=utf-8</h1>

<p>from os import listdir,path, system
from sys import argv
try:</p>

<pre><code>import xml.etree.cElementTree as ET
</code></pre>

<p>except ImportError:</p>

<pre><code>import xml.etree.ElementTree as ET
</code></pre>

<p>def genRegionLangPair(filePath):</p>

<pre><code>basicLanguage = None
if ('values' in filePath) :
    hasRegionLimit = ('r' == filePath[-3:-2])
    if (hasRegionLimit):
        basicLanguage = filePath[0:-4]
        if (not path.exists(basicLanguage)) :
            return None 
        belongsToEnglish =  ("values-en" in basicLanguage)
        if (belongsToEnglish):
            #Compare with the res/values/strings.xml
            return (path.dirname(basicLanguage) + '/values/strings.xml', filePath + "/strings.xml")
        else:
            return (basicLanguage + '/strings.xml', filePath + "/strings.xml")
return None
</code></pre>

<p>def genLangPair(filePath):</p>

<pre><code>def shouldGenLanPair(filePath):
    if (not 'values' in filePath ):
        return False
    if('dpi' in filePath):
        return False
    if ('dimes' in filePath):
        return False
    if ('large' in filePath):
        return False 
    return True

if(shouldGenLanPair(filePath)):
    basicLanguage = path.dirname(filePath) + '/values/strings.xml'
    targetLanguage = filePath + '/strings.xml'
    if (not path.exists(targetLanguage)):
       return None 

    if (not path.samefile(basicLanguage,targetLanguage)) :
        return (basicLanguage, targetLanguage)
return None
</code></pre>

<p>def genCompareList(filePath):</p>

<pre><code>compareLists = []
for file in listdir(filePath):
    regionPair = genRegionLangPair(filePath + '/' + file)
    if (None != regionPair):
        compareLists.append(regionPair)

    languagePair = genLangPair(filePath + '/' + file) 
    if (None != languagePair) :
        compareLists.append(languagePair)

return compareLists
</code></pre>

<p>def getXmlEntries(filePath):</p>

<pre><code>root = ET.ElementTree(file=filePath).getroot()
entries = {}
for child in root:
    attrib = child.attrib
    if (None != attrib) :
        entries[attrib.get('name')] = child.text
print 'xmlEntriesCount',len(entries)
return entries
</code></pre>

<p>def rewriteRegionFile(sourceEntries, filePath):</p>

<pre><code>if (not path.exists(filePath)):
    return 
ET.register_namespace('xliff',"urn:oasis:names:tc:xliff:document:1.2")
tree = ET.ElementTree(file=filePath)
root = tree.getroot()
print root
totalCount = 0
removeCount = 0
unRemoveCount = 0
print len(root)
toRemoveList = []
for child in root:
    totalCount = totalCount + 1
    attrib = child.attrib
    if (None == attrib):
        continue

    childName = attrib.get('name')

    if (sourceEntries.get(childName) == child.text):
        removeCount = removeCount + 1
        toRemoveList.append(child)
    else:
        unRemoveCount = unRemoveCount + 1
        print childName, sourceEntries.get(childName), child.text
print filePath,totalCount, removeCount,unRemoveCount

for aItem in toRemoveList:
    root.remove(aItem)

if (len(root) != 0 ):
    tree.write(filePath, encoding="UTF-8")
else:
    command = 'rm -rf %s'%(path.dirname(filePath))
    print command
    system(command)
</code></pre>

<p>def main(projectDir):</p>

<pre><code>lists = genCompareList(projectDir + "/res/")

for item in lists:
    print item
    src = item[0]
    dest = item[1]
    rewriteRegionFile(getXmlEntries(src),dest)
</code></pre>

<p>if <strong>name</strong> == &ldquo;<strong>main</strong>&rdquo;:</p>

<pre><code>if (len(argv) == 2) :
    main(argv[1])
</code></pre>

<p>```</p>

<h2>如何使用</h2>

<p><code>bash filenos:false
python removeRepeatedStrings.py your_android_project_root_dir
</code></p>

<h2>工程参与</h2>

<p><a href="https://github.com/androidyue/DroidResCleaner/blob/master/removeRepeatedStrings.py" target="_blank">RemoveRepeatedStrings.py</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00DZEX5JQ/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00DZEX5JQ&linkCode=as2&tag=droidyue-23">控制你行为的秘密</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00DZEX5JQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0090HBORW/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0090HBORW&linkCode=as2&tag=droidyue-23">好工作是设计出来的</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0090HBORW" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B001F7AEFI/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B001F7AEFI&linkCode=as2&tag=droidyue-23">原来这才是瑞士多功能军刀</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B001F7AEFI" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何从UA分辨出Android设备类型]]></title>
    <link href="http://droidyue.com/blog/2014/08/05/detect-android-device-type-by-sniffing-user-agent/"/>
    <updated>2014-08-05T22:29:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/08/05/detect-android-device-type-by-sniffing-user-agent</id>
    <content type="html"><![CDATA[<p>随着Android设备增多，不少网站都开始设备Android设备，而Android主流设备类型以手机和平板为主。网站在适配时通过User Agent(用户代理，以下简称UA)又如何区分呢，本文部分内容翻译自Google官方博客<a href="http://googlewebmastercentral.blogspot.hk/2011/03/mo-better-to-also-detect-mobile-user.html" target="_blank">Mo’ better to also detect “mobile” user-agent</a>。</p>

<!--more-->


<h2>一针见血</h2>

<p>标准判断规则：<strong>Mobile Android has &ldquo;Mobile&rdquo; string in the User-Agent header. Tablet Android does not.</strong><br/>
<font color="red">在Android设备UA字符串中，移动设备包含<strong>Mobile</strong>字符串，而平板设备没有。</font></p>

<h2>旁征博引</h2>

<p>在最初的Android设备（即手机）中UA字符串中包含着<strong>android</strong>,所以那时候可以使用检测UA字符串中是否包含（不区分大小写）<strong>android</strong>来判断。</p>

<p>但是后来一个新的Android设备出现了，就是Android平板，不幸的是，Android平板上的UA也包含android，而对于平板上更适合展示桌面（PC）的网页版式。而如果仅仅以上述的判断规则，会给平板用户带来不是很好的用户体验。</p>

<p>鉴于上述问题，Google的Android工程师提出了一个解决方案。对于引导到移动版式的设备，即手机，需要从UA字符串中同时判断是否包含<strong>mobile</strong>和<strong>android</strong>这两个单词。我们先看一些示例。</p>

<p>比如这个UA字符串
<code>bash
Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13
</code>
因为这个UA字符串中没有mobile，所以需要把它引导到桌面版式（或者一个为Android大屏设备定制的版式）。从这个UA字符串中我们可以了解到，它来自一个大屏设置，即摩托罗拉的XOOM平板。</p>

<p>我们再看另一个UA字符串
<code>bash
Mozilla/5.0 (Linux; U; Android 2.2.1; en-us; Nexus One Build/FRG83) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1
</code>
包含了mobile和android,所以把这台Nexus One手机导向到移动版式吧。</p>

<p>相信通过上面两个UA字符串对比，你发现了UA的一些共性了吧，我们看看这些共性吧。
<img class="<a" src="href="http://git.oschina.net/androidyue/blogres/raw/master/android-user-agent.jpeg">http://git.oschina.net/androidyue/blogres/raw/master/android-user-agent.jpeg</a>" title="Android User Agent commonalities" ></p>

<h2>最后</h2>

<p>所以，当你依据检测UA来判断Android手机设备，请同时检查android和mobile两个字符串。</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B007OQQVMY/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B007OQQVMY&linkCode=as2&tag=droidyue-23">这才是JavaScript的高级程序设计</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B007OQQVMY" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00ENZ67VE/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ENZ67VE&linkCode=as2&tag=droidyue-23">极客用什么高科技的钟表</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ENZ67VE" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00ASIN7G8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ASIN7G8&linkCode=as2&tag=droidyue-23">这就叫精通Android？</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ASIN7G8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
</feed>

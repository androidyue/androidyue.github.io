<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | 技术小黑屋]]></title>
  <link href="http://droidyue.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2014-10-22T21:35:32+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android处理图像数据全记录]]></title>
    <link href="http://droidyue.com/blog/2014/10/03/handle-image-data-in-android/"/>
    <updated>2014-10-03T17:42:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/10/03/handle-image-data-in-android</id>
    <content type="html"><![CDATA[<p>Android中处理图像是一件很常见的事情，这里记录备忘一些亲身使用过的处理图片数据的方法。</p>

<h2>转为Bitmap</h2>

<!--more-->


<h3>RGB值转Bitmap</h3>

<p>```java
private Bitmap createColorBitmap(String rgb, int width, int height) {</p>

<pre><code>    Bitmap bmp = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
    int color = Color.parseColor(rgb);
    bmp.eraseColor(color);
    return bmp;
</code></pre>

<p>}</p>

<p>//Usage
Bitmap bmp = createColorBitmap(&ldquo;#cce8cf&rdquo;, 200, 50);
```</p>

<h3>Color值转Bitmap</h3>

<p>```java
private Bitmap createColorBitmap(int color, int width, int height) {</p>

<pre><code>Bitmap bmp = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
bmp.eraseColor(color);
return bmp;
</code></pre>

<p>}
//Usage
Bitmap bmp = createColorBitmap(Color.BLUE, 200, 50);
```</p>

<h3>字节数组转Bitmap</h3>

<p>```java
private Bitmap getBitmapFromByteArray(byte[] array) {</p>

<pre><code>return BitmapFactory.decodeByteArray(array, 0, array.length);
</code></pre>

<p>}
```</p>

<h3>读取文件转Bitmap</h3>

<p>```java
private Bitmap getBitmapFromFile(String pathName) {</p>

<pre><code>    return BitmapFactory.decodeFile(pathName);
</code></pre>

<p>}
```</p>

<h3>读取资源转Bitmap</h3>

<p>```java
private Bitmap getBitmapFromResource(Resources res, int resId) {</p>

<pre><code>    return BitmapFactory.decodeResource(res, resId);
}
</code></pre>

<p>```</p>

<h3>输入流转Bitmap</h3>

<p>```java
private Bitmap getBitmapFromStream(InputStream inputStream) {</p>

<pre><code>    return BitmapFactory.decodeStream(inputStream);
</code></pre>

<p>}
```</p>

<h3>Drawable转Bitmap</h3>

<p><code>java
Bitmap icon = BitmapFactory.decodeResource(context.getResources(),R.drawable.icon_resource);
</code></p>

<h2>转为Drawable</h2>

<h3>资源转Drawable</h3>

<p><code>java
Drawable drawable = getResources().getDrawable(R.drawable.ic_launcher);
</code></p>

<h3>Bitmap转Drawable</h3>

<p><code>java
Drawable d = new BitmapDrawable(getResources(),bitmap);
</code></p>

<h2>图片圆角展示</h2>

<p>通过对图片数据bitmap进行处理即可，其中pixels为边角的半径。
```java
public static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int pixels) {</p>

<pre><code>    Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap
            .getHeight(), Config.ARGB_8888);
    Canvas canvas = new Canvas(output);

    final int color = 0xff424242;
    final Paint paint = new Paint();
    final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
    final RectF rectF = new RectF(rect);
    final float roundPx = pixels;

    paint.setAntiAlias(true);
    canvas.drawARGB(0, 0, 0, 0);
    paint.setColor(color);
    canvas.drawRoundRect(rectF, roundPx, roundPx, paint);

    paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
    canvas.drawBitmap(bitmap, rect, rect, paint);

    return output;
}
</code></pre>

<p>```</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00LVHTI9U/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00LVHTI9U&linkCode=as2&tag=droidyue-23">第一行代码:Android</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00LVHTI9U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00J4DXWDG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00J4DXWDG&linkCode=as2&tag=droidyue-23">Android编程权威指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00J4DXWDG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00GU73RHA/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00GU73RHA&linkCode=as2&tag=droidyue-23">Android应用UI设计模式</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00GU73RHA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebView处理网页位置请求]]></title>
    <link href="http://droidyue.com/blog/2014/10/01/handle-geolocation-request-in-webview/"/>
    <updated>2014-10-01T17:23:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/10/01/handle-geolocation-request-in-webview</id>
    <content type="html"><![CDATA[<p>随着移动设备的激增，LBS（Location Based Service）已然成为趋势，其最关键的还是获取设备的位置信息。native代码获取位置信息轻轻松松可以搞定，实际上网页获取位置信息也不是那么困难。</p>

<p>在HTML5中，提供了一套定位用户信息的接口，当然这个位置信息是通过客户端，准确说是浏览器获取的。</p>

<!--more-->


<p>注意，位置信息属于个人隐私的范围，只有经过用户同意之后才能获取到信息。</p>

<h2>网页如何实现请求位置信息</h2>

<p>使用getCurrentPosition()方法来请求位置信息。<br/>
下面是一个很简单的示例，来展示用户位置信息的经度和纬度。
```html lineos:false
&lt;!DOCTYPE html>
<html></p>

<pre><code>&lt;body&gt;
&lt;p id="demo"&gt;Click the button to get your coordinates:&lt;/p&gt;
&lt;button onclick="getLocation()"&gt;Try It&lt;/button&gt;

&lt;script&gt;
    var x = document.getElementById("demo");

    function getLocation() {
        console.info("getLocation working")
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition,showError);
        } else { 
            x.innerHTML = "Geolocation is not supported by this browser.";
        }
    }

    function showPosition(position) {
        x.innerHTML="Latitude: " + position.coords.latitude + "&lt;br&gt;Longitude: " + position.coords.longitude;
    }

    function showError(error) {
        switch(error.code) {
        case error.PERMISSION_DENIED:
            x.innerHTML = "User denied the request for Geolocation."
            break;
        case error.POSITION_UNAVAILABLE:
            x.innerHTML = "Location information is unavailable."
            break;
        case error.TIMEOUT:
            x.innerHTML = "The request to get user location timed out."
            break;
        case error.UNKNOWN_ERROR:
            x.innerHTML = "An unknown error occurred."
            break;
    }
</code></pre>

<p>}</p>

<pre><code>&lt;/script&gt;

&lt;/body&gt;
</code></pre>

<p></html>
```</p>

<h3>示例阐述</h3>

<ul>
<li> 检测getLocation方法是否可用</li>
<li> 如果可以调用getCurrentPosition方法，否则提示浏览器不支持</li>
<li> 如果getCurrentPosition获取信息成功，返回一个坐标系的对象，并将这个对象作为参数传递到showPosition方法,如果失败，调用showError方法，并将错误码作为showError方法的参数。</li>
<li> showPosition方法展示经度和纬度信息</li>
<li> showError方法用来处理请求错误</li>
</ul>


<p>上述部分参考自<a href="http://www.w3schools.com/HTML/html5_geolocation.asp">html5_geolocation w3cschool</a>，更多高级操作请访问左侧链接。</p>

<h2>WebView如何返回给网页</h2>

<h3>大致操作步骤</h3>

<ul>
<li>在manifest中申请android.permission.ACCESS_FINE_LOCATION 或 android.permission.ACCESS_COARSE_LOCATION 权限。两者都有更好。</li>
<li>设置webivew开启javascript功能，地理定位功能，设置物理定位数据库路径</li>
<li>在onGeolocationPermissionsShowPrompt处理物理位置请求，常用的是提示用户，让用户决定是否允许。</li>
</ul>


<h3>使用的API</h3>

<ul>
<li>android.permission.ACCESS_FINE_LOCATION 通过GPS，基站，Wifi等获取<strong>精确的</strong>位置信息。</li>
<li>android.permission.ACCESS_COARSE_LOCATION 通过基站，Wifi等获取<strong>错略的</strong>位置信息。</li>
<li>onGeolocationPermissionsShowPrompt 位置信息请求回调，通常在这里弹出选择是否赋予权限的对话框</li>
<li>GeolocationPermissions.Callback.invoke(String origin, boolean allow, boolean remember)决定是否真正提供给网页信息，可根据用户的选择结果选择处理。

<h3>实现代码</h3>

<p>```java lineos:false
final WebView webView = new WebView(this);
addContentView(webView,  new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)  );
WebSettings settings = webView.getSettings();
settings.setJavaScriptEnabled(true);
settings.setGeolocationEnabled(true);
settings.setGeolocationDatabasePath(getFilesDir().getPath());</p></li>
</ul>


<p>webView.setWebChromeClient(new WebChromeClient() {</p>

<pre><code>@Override
public void onGeolocationPermissionsHidePrompt() {
    super.onGeolocationPermissionsHidePrompt();
    Log.i(LOGTAG, "onGeolocationPermissionsHidePrompt");
}

@Override
public void onGeolocationPermissionsShowPrompt(final String origin,
                final Callback callback) {
    AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
    builder.setMessage("Allow to access location information?");
    OnClickListener dialogButtonOnClickListener = new OnClickListener() {

        @Override
        public void onClick(DialogInterface dialog, int clickedButton) {
            if (DialogInterface.BUTTON_POSITIVE == clickedButton) {
                callback.invoke(origin, true, true);
            } else if (DialogInterface.BUTTON_NEGATIVE == clickedButton) {
                callback.invoke(origin, false, false);
            }
        }
    };
    builder.setPositiveButton("Allow", dialogButtonOnClickListener);
    builder.setNegativeButton("Deny", dialogButtonOnClickListener);
    builder.show();
    super.onGeolocationPermissionsShowPrompt(origin, callback);
    Log.i(LOGTAG, "onGeolocationPermissionsShowPrompt");
}
</code></pre>

<p>});
webView.loadUrl(&ldquo;file:///android_asset/geolocation.html&rdquo;);
```</p>

<h2>疑问解答</h2>

<h3>I/SqliteDatabaseCpp(21863): sqlite returned: error code = 14</h3>

<p>原因是你没有设置setGeolocationDatabasePath，按照上面例子设置即可。</p>

<h3>点击之后没有任何变化</h3>

<ul>
<li>检查代码是否按照上面一样，是否有错误。</li>
<li>在第一次请求的是否，需要的反应时间比较长。</li>
</ul>


<h3>检测定位服务是否可用</h3>

<p>当GPS_PROVIDER和NETWORK_PROVIDER有一者可用，定位服务就可以用，当两者都不能用时，即定位服务不可以用。<br/>
注意PASSIVE_PROVIDER不能作为定位服务可用的标志。因为这个provider只会返回其他Provider提供的位置信息，自己无法定位。
```java lineos:false
private void testGeolocationOK() {</p>

<pre><code>    LocationManager manager = (LocationManager)getSystemService(Context.LOCATION_SERVICE);
    boolean gpsProviderOK = manager.isProviderEnabled(LocationManager.GPS_PROVIDER);
    boolean networkProviderOK = manager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);
    boolean geolocationOK = gpsProviderOK &amp;&amp; networkProviderOK;
    Log.i(LOGTAG, "gpsProviderOK = " + gpsProviderOK + "; networkProviderOK = " + networkProviderOK + "; geoLocationOK=" + geolocationOK);
</code></pre>

<p>}
```</p>

<h3>跳转到位置设置界面</h3>

<p>我们只需要发送一个简单的隐式intent即可启动位置设置界面
<code>java lineos:false
Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
startActivity(intent);
</code></p>

<h2>示例代码</h2>

<p><a href="http://pan.baidu.com/s/1gdrHIin">百度云盘</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B007RSKTXQ/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B007RSKTXQ&linkCode=as2&tag=droidyue-23">程序员装B必备：黑轴机械键盘</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B007RSKTXQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00E7XVAZA/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00E7XVAZA&linkCode=as2&tag=droidyue-23">位置信息服务(LBS)关键技术及应用</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00E7XVAZA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00KHG1006/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KHG1006&linkCode=as2&tag=droidyue-23">基于语义Web的LBS服务架构及其服务发现算法研究</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00KHG1006" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用WebView实现网页的i18n]]></title>
    <link href="http://droidyue.com/blog/2014/09/30/i18n-web-page-using-webview-in-android/"/>
    <updated>2014-09-30T21:44:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/30/i18n-web-page-using-webview-in-android</id>
    <content type="html"><![CDATA[<p>软件如果想在全球获得更多的用户，国际化与本地化（internationalization and localization 简称：i18n 和L10n）是非常必要的。本文将介绍一个很geeky的方法来利用webview实现html的i18n。</p>

<!--more-->


<h2>基本概念</h2>

<p>国际化是指在设计软件，将软件与特定语言及地区脱钩的过程。当软件被移植到不同的语言及地区时，软件本身不用做内部工程上的改变或修正。本地化则是指当移植软件时，加上与特定区域设置有关的信息和翻译文件的过程。</p>

<p>国际化和本地化之间的区别虽然微妙，但却很重要。国际化意味着产品有适用于任何地方的“潜力”；本地化则是为了更适合于“特定”地方的使用，而另外增添的特色。用一项产品来说，国际化只需做一次，但本地化则要针对不同的区域各做一次。 这两者之间是互补的，并且两者合起来才能让一个系统适用于各地。</p>

<p>上述摘自<a href="http://zh.wikipedia.org/wiki/%E5%9B%BD%E9%99%85%E5%8C%96%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%8C%96">维基百科 国际化与本地化</a></p>

<h2>问题</h2>

<p>如何实现网页的国际化和本地化，支持更多的语言呢？最简单的逻辑可能类似如下伪代码实现
```javascript lineos:false
if (isChinese) {</p>

<pre><code>lable.innerText = "中文"
</code></pre>

<p>} else if (isEnglish) {</p>

<pre><code>lable.innerText = "English"
</code></pre>

<p>}
```
但是这样是很有问题的，如果增加了语言必然要修改代码代码，违背了对修改关闭的原则。所以上述并不是一种很好的方法</p>

<h2>更Hacky的实现</h2>

<p>实现思路主要是借助强大的Android系统的资源适配机制（基于设备设备的信息Locale等匹配最合适的资源）。貌似这个是Chrome中网页实现i18n的逻辑。实现步骤主要如下</p>

<ul>
<li>Android程序提供必要多个Locale的资源</li>
<li>将网页需要的文字资源组成JSON交换格式</li>
<li>WebView注入一个变量，变量内容为上一步的JSON数据</li>
<li>网页实现读取资源，为元素设置内容</li>
<li>加载网页</li>
</ul>


<h3>提供多个Locale文字资源</h3>

<h4>values/strings.xml</h4>

<p>```xml lineos:false
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;utf-8&rdquo;?>
<resources></p>

<pre><code>&lt;string name="city_beijing"&gt;Beijing&lt;/string&gt;
&lt;string name="country_china"&gt;China&lt;/string&gt;
</code></pre>

<p></resources>
```</p>

<h4>values-zh-rCN/strings.xml</h4>

<p>```xml lineos:false
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;utf-8&rdquo;?>
<resources></p>

<pre><code>&lt;string name="city_beijing"&gt;北京&lt;/string&gt;
&lt;string name="country_china"&gt;中国&lt;/string&gt;
</code></pre>

<p></resources>
```</p>

<h3>接下来的代码</h3>

<p>```java lineos:false
WebView myWebView = new WebView(this);
addContentView(myWebView, new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
//将网页需要的文字资源组成JSON交换格式
JSONObject jsObj = new JSONObject();
try {</p>

<pre><code>jsObj.put("country", getString(R.string.country_china));
jsObj.put("city", getString(R.string.city_beijing));
</code></pre>

<p>} catch (JSONException e) {</p>

<pre><code>e.printStackTrace();
</code></pre>

<p>}
//WebView注入一个变量，变量内容为上一步的JSON数据
String injectString = &ldquo;var textRes = &rdquo; + jsObj;
Log.i(LOGTAG, &ldquo;injuectString = &rdquo; + injectString);
WebSettings settings = myWebView.getSettings();
settings.setJavaScriptEnabled(true);
myWebView.loadUrl(&ldquo;javascript:&rdquo; + injectString);
myWebView.loadUrl(&ldquo;file:///android_asset/location.html&rdquo;);
```</p>

<h3>网页实现</h3>

<p>```html lineos:false
<html></p>

<pre><code>&lt;head&gt;
    &lt;title&gt;i18n Test&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;label id="country"&gt;&lt;/label&gt;
    &lt;lable id="city"&gt;&lt;/lable&gt;
&lt;/body&gt;
&lt;script type="text/javascript"&gt;
    document.getElementById('country').innerText= textRes.country
    document.getElementById('city').innerText = textRes.city
&lt;/script&gt;
</code></pre>

<p></html>
```</p>

<h3>结果</h3>

<ul>
<li>当系统语言为中文简体环境下网页显示<strong>中国 北京</strong></li>
<li>当系统语言为非中文简体环境下网页显示<strong>China Beijing</strong></li>
</ul>


<h3>Demo源码下载</h3>

<p><a href="http://pan.baidu.com/s/1sjwNamL">@百度网盘</a></p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00ASIN7G8/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ASIN7G8&linkCode=as2&tag=droidyue-23">这样才可以精通Android</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00ASIN7G8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B002JCU2TG/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B002JCU2TG&linkCode=as2&tag=droidyue-23">瞬间之美:Web界面设计如何让用户心动</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B002JCU2TG" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android中Java和JavaScript交互]]></title>
    <link href="http://droidyue.com/blog/2014/09/20/interaction-between-java-and-javascript-in-android/"/>
    <updated>2014-09-20T21:37:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/20/interaction-between-java-and-javascript-in-android</id>
    <content type="html"><![CDATA[<p>Android提供了一个很强大的WebView控件用来处理Web网页，而在网页中，JavaScript又是一个很举足轻重的脚本。本文将介绍如何实现Java代码和Javascript代码的相互调用。</p>

<!--more-->


<h2>如何实现</h2>

<p>实现Java和js交互十分便捷。通常只需要以下几步。</p>

<ul>
<li>WebView开启JavaScript脚本执行</li>
<li>WebView设置供JavaScript调用的交互接口。</li>
<li>客户端和网页端编写调用对方的代码。</li>
</ul>


<h2>本例代码</h2>

<p>为了便于讲解，先贴出全部代码</p>

<h3>Java代码</h3>

<p>```java lineos:false
package com.example.javajsinteractiondemo;</p>

<p>import android.annotation.SuppressLint;
import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.webkit.JavascriptInterface;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Toast;</p>

<p>public class MainActivity extends Activity {</p>

<pre><code>private static final String LOGTAG = "MainActivity";
@SuppressLint("JavascriptInterface")
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    final WebView myWebView = (WebView) findViewById(R.id.myWebView);
    WebSettings settings = myWebView.getSettings();
    settings.setJavaScriptEnabled(true);
    myWebView.addJavascriptInterface(new JsInteration(), "control");
    myWebView.setWebChromeClient(new WebChromeClient() {});
    myWebView.setWebViewClient(new WebViewClient() {

        @Override
        public void onPageFinished(WebView view, String url) {
            super.onPageFinished(view, url);
            testMethod(myWebView);
        }

    });
    myWebView.loadUrl("file:///android_asset/js_java_interaction.html");
}

private void testMethod(WebView webView) {
    String call = "javascript:sayHello()";

    call = "javascript:alertMessage(\"" + "content" + "\")";

    call = "javascript:toastMessage(\"" + "content" + "\")";

    call = "javascript:sumToJava(1,2)";
    webView.loadUrl(call);

}

public class JsInteration {

    @JavascriptInterface
    public void toastMessage(String message) {
        Toast.makeText(getApplicationContext(), message, Toast.LENGTH_LONG).show();
    }

    @JavascriptInterface
    public void onSumResult(int result) {
        Log.i(LOGTAG, "onSumResult result=" + result);
    }
}
</code></pre>

<p>}</p>

<p>```</p>

<h3>前端网页代码</h3>

<p>```html lineos:false js_java_interaction.html
<html></p>

<script type="text/javascript">
    function sayHello() {
        alert("Hello")
    }

    function alertMessage(message) {
        alert(message)
    }

    function toastMessage(message) {
        window.control.toastMessage(message)
    }

    function sumToJava(number1, number2){
       window.control.onSumResult(number1 + number2) 
    }
</script>


<p>Java-Javascript Interaction In Android
</html>
```</p>

<h2>调用示例</h2>

<h3>js调用Java</h3>

<p>调用格式为window.jsInterfaceName.methodName(parameterValues)
此例中我们使用的是control作为注入接口名称。
```html lineos:false
function toastMessage(message) {</p>

<pre><code>window.control.toastMessage(message)
</code></pre>

<p>}</p>

<p>function sumToJava(number1, number2){
   window.control.onSumResult(number1 + number2)
}
```</p>

<h3>Java调用JS</h3>

<p>webView调用js的基本格式为webView.loadUrl(&ldquo;javascript:methodName(parameterValues)&rdquo;)</p>

<h4>调用js无参无返回值函数</h4>

<p><code>java lineos:false
String call = "javascript:sayHello()";
webView.loadUrl(call);
</code></p>

<h4>调用js有参无返回值函数</h4>

<p>注意对于字符串作为参数值需要进行转义双引号。
<code>java lineos:false
String call = "javascript:alertMessage(\"" + "content" + "\")";
webView.loadUrl(call);
</code></p>

<h4>调用js有参数有返回值的函数</h4>

<p>Android在4.4之前并没有提供直接调用js函数并获取值的方法，所以在此之前，常用的思路是 java调用js方法，js方法执行完毕，再次调用java代码将值返回。</p>

<h5>1.Java调用js代码</h5>

<p><code>java lineos:false
String call = "javascript:sumToJava(1,2)";
webView.loadUrl(call);
</code></p>

<h5>2.js函数处理，并将结果通过调用java方法返回</h5>

<p>```javascript lineos:false
function sumToJava(number1, number2){</p>

<pre><code>   window.control.onSumResult(number1 + number2) 
</code></pre>

<p>}
```</p>

<h5>3.Java在回调方法中获取js函数返回值</h5>

<p>```java lineos:false
@JavascriptInterface
public void onSumResult(int result) {</p>

<pre><code>Log.i(LOGTAG, "onSumResult result=" + result);
</code></pre>

<p>}
```</p>

<h4><font color="blue">4.4处理</font></h4>

<p>Android 4.4之后使用evaluateJavascript即可。这里展示一个简单的交互示例
具有返回值的js方法
```html lineos:false
function getGreetings() {</p>

<pre><code>    return 1;
</code></pre>

<p>}
<code>
java代码时用evaluateJavascript方法调用
</code>java lineos:false
private void testEvaluateJavascript(WebView webView) {</p>

<pre><code>webView.evaluateJavascript("getGreetings()", new ValueCallback&lt;String&gt;() {

@Override
public void onReceiveValue(String value) {
    Log.i(LOGTAG, "onReceiveValue value=" + value);
}});
</code></pre>

<p>}
<code>
输出结果
</code>bash lineos:false
I/MainActivity( 1432): onReceiveValue value=1
```</p>

<p>注意</p>

<ul>
<li>上面限定了结果返回结果为String，对于简单的类型会尝试转换成字符串返回，对于复杂的数据类型，建议以字符串形式的json返回。</li>
<li>evaluateJavascript方法必须在UI线程（主线程）调用，因此onReceiveValue也执行在主线程。</li>
</ul>


<h2>疑问解答</h2>

<h3><font color="red">Alert无法弹出</font></h3>

<p>你应该是没有设置WebChromeClient,按照以下代码设置
```java
myWebView.setWebChromeClient(new WebChromeClient() {});</p>

<p>```</p>

<h3><font color="red">Uncaught ReferenceError: functionName is not defined</font></h3>

<p>问题出现原因，<strong>网页的js代码没有加载完成</strong>，就调用了js方法。解决方法是在网页加载完成之后调用js方法
```java fileos:false
myWebView.setWebViewClient(new WebViewClient() {</p>

<pre><code>@Override
public void onPageFinished(WebView view, String url) {
    super.onPageFinished(view, url);
    //在这里执行你想调用的js函数
}
</code></pre>

<p>});
```</p>

<h3><font color="red">Uncaught TypeError: Object [object Object] has no method</font></h3>

<h4>安全限制问题</h4>

<p>如果只在4.2版本以上的机器出问题，那么就是系统处于安全限制的问题了。Android文档这样说的</p>

<blockquote><p>Caution: If you&rsquo;ve set your targetSdkVersion to 17 or higher, you must add the @JavascriptInterface annotation to any method that you want available your web page code (the method must also be public). If you do not provide the annotation, then the method will not accessible by your web page when running on Android 4.2 or higher.</p></blockquote>

<p>中文大意为</p>

<blockquote><p>警告：如果你的程序目标平台是17或者是更高，你必须要在暴露给网页可调用的方法（这个方法必须是公开的）加上@JavascriptInterface注释。如果你不这样做的话，在4.2以以后的平台上，网页无法访问到你的方法。</p></blockquote>

<h5>两种解决方法</h5>

<ul>
<li>将targetSdkVersion设置成17或更高，引入@JavascriptInterface注释</li>
<li>自己创建一个注释接口名字为@JavascriptInterface，然后将其引入。注意这个接口不能混淆。</li>
</ul>


<p>注，创建@JavascriptInterface代码
```java lineos:false
public @interface JavascriptInterface {</p>

<p>}
```</p>

<h4>代码混淆问题</h4>

<p>如果在没有混淆的版本运行正常，在混淆后的版本的代码运行错误，并提示Uncaught TypeError: Object [object Object] has no method，那就是你没有做混淆例外处理。
在混淆文件加入类似这样的代码
```ruby lineos:false
-keep class com.example.javajsinteractiondemo$JsInteration {</p>

<pre><code>*;
</code></pre>

<p>}</p>

<p>```</p>

<h3><font color="red">All WebView methods must be called on the same thread</font></h3>

<p>过滤日志曾发现过这个问题。
<code>java lineos:false
E/StrictMode( 1546): java.lang.Throwable: A WebView method was called on thread 'JavaBridge'. All WebView methods must be called on the same thread. (Expected Looper Looper (main, tid 1) {528712d4} called on Looper (JavaBridge, tid 121) {52b6678c}, FYI main Looper is Looper (main, tid 1) {528712d4})
E/StrictMode( 1546):    at android.webkit.WebView.checkThread(WebView.java:2063)
E/StrictMode( 1546):    at android.webkit.WebView.loadUrl(WebView.java:794)
E/StrictMode( 1546):    at com.xxx.xxxx.xxxx.xxxx.xxxxxxx$JavaScriptInterface.onCanGoBackResult(xxxx.java:96)
E/StrictMode( 1546):    at com.android.org.chromium.base.SystemMessageHandler.nativeDoRunLoopOnce(Native Method)
E/StrictMode( 1546):    at com.android.org.chromium.base.SystemMessageHandler.handleMessage(SystemMessageHandler.java:27)
E/StrictMode( 1546):    at android.os.Handler.dispatchMessage(Handler.java:102)
E/StrictMode( 1546):    at android.os.Looper.loop(Looper.java:136)
E/StrictMode( 1546):    at android.os.HandlerThread.run(HandlerThread.java:61)
</code>
在js调用后的Java回调线程并不是主线程。如打印日志可验证
<code>bash lineos:false
ThreadInfo=Thread[WebViewCoreThread,5,main]
</code>
解决上述的异常，将webview操作放在主线程中即可。
```java
webView.post(new Runnable() {</p>

<pre><code>@Override
public void run() {
    webView.loadUrl(YOUR_URL).
}
</code></pre>

<p>});
```</p>

<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00LVHTI9U/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00LVHTI9U&linkCode=as2&tag=droidyue-23">第一行代码:Android</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00LVHTI9U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B0097CON2S/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0097CON2S&linkCode=as2&tag=droidyue-23">JavaScript语言精粹</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B0097CON2S" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B00B14IGUK/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00B14IGUK&linkCode=as2&tag=droidyue-23">安全技术大系:Web前端黑客技术揭秘</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00B14IGUK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一脚本：过滤单个Android程序日志]]></title>
    <link href="http://droidyue.com/blog/2014/09/15/weekly-scripts-grep-android-application-log-in-terminal/"/>
    <updated>2014-09-15T18:55:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/09/15/weekly-scripts-grep-android-application-log-in-terminal</id>
    <content type="html"><![CDATA[<p>在Android软件开发中，增加日志的作用很重要，便于我们了解程序的执行情况和数据。Eclipse开发工具会提供了可视化的工具，但是还是感觉终端效率会高一些，于是自己写了一个python的脚本来通过包名来过滤某一程序的日志。</p>

<h3>原理</h3>

<p>通过包名得到对应的进程ID（可能多个），然后使用adb logcat 过滤进程ID即可得到对应程序的日志。</p>

<!--more-->


<h3>源码</h3>

<p>```python lineos:false <a href="https://raw.githubusercontent.com/androidyue/weekly-scripts/master/python/logcatPkg.py">https://raw.githubusercontent.com/androidyue/weekly-scripts/master/python/logcatPkg.py</a></p>

<h1>!/usr/bin/env python</h1>

<h1>coding:utf-8</h1>

<h1>This script is aimed to grep logs by application(User should input a packageName and then we look up for the process ids then separate logs by process ids).</h1>

<p>import os
import sys</p>

<p>packageName=str(sys.argv[1])</p>

<p>command = &ldquo;adb shell ps | grep %s | awk &lsquo;{print $2}&rsquo;&rdquo;%(packageName)
p = os.popen(command)</p>

<h2>for some applications,there are multiple processes,so we should get all the process id</h2>

<p>pid = p.readline().strip()
filters = pid
while(pid != &ldquo;&rdquo;):</p>

<pre><code>pid = p.readline().strip()
if (pid != ''):
    filters = filters +  "|" + pid
    #print 'command = %s;filters=%s'%(command, filters)
</code></pre>

<p>if (filters != &lsquo;&rsquo;) :</p>

<pre><code>cmd = 'adb logcat | grep --color=always -E "%s" '%(filters)
os.system(cmd)
</code></pre>

<p>```</p>

<h3>使用方法</h3>

<p><code>bash lineos:false
python logcatPkg.py com.mx.browser
</code></p>

<h3>最新代码</h3>

<p> <a href="https://raw.githubusercontent.com/androidyue/weekly-scripts/master/python/logcatPkg.py" target="_blank">locatPkg.py</a></p>

<h3>不足</h3>

<ul>
<li> 当脚本执行后，Android程序如果关闭或者重新启动，导致进程ID变化，无法自动继续输出日志，只能再次执行此脚本。</li>
</ul>


<h3>其他</h3>

<ul>
<li><a href="http://www.amazon.cn/gp/product/B00KVLDS20/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00KVLDS20&linkCode=as2&tag=droidyue-23">仅用两周就能自制脚本语言？</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B00KVLDS20" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B002A2LQR2/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B002A2LQR2&linkCode=as2&tag=droidyue-23">一个不错的Shell脚本学习指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B002A2LQR2" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.cn/gp/product/B005YWYH6C/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B005YWYH6C&linkCode=as2&tag=droidyue-23">Windows 7脚本编程和命令行工具指南</a><img src="http://ir-cn.amazon-adsystem.com/e/ir?t=droidyue-23&l=as2&o=28&a=B005YWYH6C" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
</feed>

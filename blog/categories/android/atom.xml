<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | 技术小黑屋]]></title>
  <link href="http://droidyue.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2014-07-04T21:04:52+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[EditText和AutoCompleteTextView设置文字选中颜色]]></title>
    <link href="http://droidyue.com/blog/2014/07/01/set-selection-color-of-textviews/"/>
    <updated>2014-07-01T20:58:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/07/01/set-selection-color-of-textviews</id>
    <content type="html"><![CDATA[<p>EditText和AutoCompleteTextView设置文字选中颜色
大多数Android Rom上,文本选择的背景色都是很好看的鲜绿色, 但是在某些垃圾的三星手机上,居然是蓝色,令人恶心反感,其实完全可以通过程序来修改,文本的默认选中背景色.</p>

<!--more-->


<h3>所用API解释</h3>

<blockquote><p>android:textColorHighlight
Color of the text selection highlight.</p></blockquote>

<h3>EditText设置效果</h3>

<p><img class="<a" src="href="http://droidyueimg.qiniudn.com/demo-edittext_selection_bg.png">http://droidyueimg.qiniudn.com/demo-edittext_selection_bg.png</a>"></p>

<h3>AutoCompleteTextView 设置效果</h3>

<p><img class="<a" src="href="http://droidyueimg.qiniudn.com/demo_autocompletetextview_selection_bg.png">http://droidyueimg.qiniudn.com/demo_autocompletetextview_selection_bg.png</a>"></p>

<h3>实现代码</h3>

<p>```xml
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;utf-8&rdquo;?>
&lt;LinearLayout xmlns:android=&ldquo;<a href="http://schemas.android.com/apk/res/android">http://schemas.android.com/apk/res/android</a>&rdquo;</p>

<pre><code>android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical" &gt;
&lt;EditText 
    android:id="@+id/et_inputBox"       
    android:layout_height="wrap_content"
    android:layout_width="match_parent"
    android:textColorHighlight="#B4DF87"
    /&gt;

&lt;AutoCompleteTextView 
    android:id="@+id/act_input"
    android:layout_below="@id/et_inputBox"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:textColorHighlight="#B4DF87"
    /&gt;
</code></pre>

<p></LinearLayout>
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[程序实现自己管理数据清理工作]]></title>
    <link href="http://droidyue.com/blog/2014/06/15/manage-space-by-replacing-system-clear-button/"/>
    <updated>2014-06-15T18:03:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/15/manage-space-by-replacing-system-clear-button</id>
    <content type="html"><![CDATA[<p>How to disable system clear button and replace it with self application Manage Space?</p>

<p>Android在处理清楚数据时，会在系统的设置选项应用中，有一个清除数据的按钮，点下这个按钮之后，该应用的几乎所有数据都会被清除。具体清除了哪些数据，请参考这篇文章。<a href="http://droidyue.com/blog/2014/06/15/what-will-be-removed-if-you-click-clear-data-button-in-system-application-item/">http://droidyue.com/blog/2014/06/15/what-will-be-removed-if-you-click-clear-data-button-in-system-application-item/</a></p>

<!-- more -->


<p>但是有些情况下，我们不希望将应用的数据全部清除，或者是我们来接管系统的清理操作，其实是可以。并且实现也很简单.</p>

<blockquote><p>android:manageSpaceActivity
The fully qualified name of an Activity subclass that the system can launch to let users manage the memory occupied by the application on the device. The activity should also be declared with an <activity> element.</p></blockquote>

<p>开发者文档如是说，自己实现一个Activity的字类，在manifest中声明这个activity,然后将Application的android:manageSpaceActivity的值设置为这个activity即可。如：
```xml
&lt;application</p>

<pre><code>    android:allowBackup="true"
    android:icon="@drawable/ic_launcher"
    android:label="@string/app_name"
    android:theme="@style/AppTheme" 
    android:manageSpaceActivity="ps.androidyue.demo.mangagespace.ManageSpaceActivity"
    &gt;
    &lt;activity
        android:name="ps.androidyue.demo.mangagespace.MainActivity"
        android:label="@string/app_name" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name="android.intent.action.MAIN" /&gt;

            &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;
    &lt;activity android:name="ps.androidyue.demo.mangagespace.ManageSpaceActivity"&gt;

    &lt;/activity&gt;
&lt;/application&gt;
</code></pre>

<p><code>
然后是ManageSpaceActivity 就是点击空间管理进入的Activity，用来处理清除数据的自定义功能，常见的逻辑是，清除完数据后自动退出。以下为超简单的实现。
</code>java
protected void onCreate(Bundle savedInstanceState) {</p>

<pre><code>    super.onCreate(savedInstanceState);
    Button btnClearData = new Button(this);
    btnClearData.setText("Clear Data");
    btnClearData.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
                .edit().clear().commit();
            finish();
        }

    });
    setContentView(btnClearData);
}
</code></pre>

<p><code>
当然为了更好的实现，我们在LauncherActivity即MainActivity，创造一些测试数据。否则，系统应用中的管理空间不可用！
</code>java</p>

<pre><code>private void createTestData() {
    PreferenceManager.getDefaultSharedPreferences(getApplicationContext())
        .edit().putString("test", "test_data").commit();
}
</code></pre>

<p>```
demo程序下载：<a href="http://pan.baidu.com/s/1ntJnttZ">http://pan.baidu.com/s/1ntJnttZ</a></p>

<p>延伸阅读：<a href="http://developer.android.com/guide/topics/manifest/application-element.html#space">http://developer.android.com/guide/topics/manifest/application-element.html#space</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android中系统设置中的清除数据究竟会清除哪些数据]]></title>
    <link href="http://droidyue.com/blog/2014/06/15/what-will-be-removed-if-you-click-clear-data-button-in-system-application-item/"/>
    <updated>2014-06-15T17:07:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/15/what-will-be-removed-if-you-click-clear-data-button-in-system-application-item</id>
    <content type="html"><![CDATA[<p>What will be removed If you click Clear Data Button in the System Application</p>

<p>今天中的一个story突然提到了系统设置中的清理数据，后来开始思考究竟系统的应用的这个清理功能，究竟会清理那些数据。
于是开始研究，以com.mx.browser为例，思路大概为首先为/data/data/com.mx.browser下的每一个文件夹下建立一个标志文件，这里为1.txt，然后执行清理数据操作，最后对比结果。
首先，进行清楚数据之前的的各个文件夹的情况。</p>

<!-- more -->


<p><code>bash
/data/data/com.mx.browser # ls
lib
files
databases
shared_prefs
app_thumbnails
cache
app_webIcons
app_appcache
app_databases
app_geolocation
</code></p>

<p>为每个文件夹下创建一个标志（同时验证是否删除文件夹的情况）
<code>bash
/data/data/com.mx.browser # touch lib/1.txt
/data/data/com.mx.browser # touch files/1.txt
/data/data/com.mx.browser # touch databases/1.txt
/data/data/com.mx.browser # touch shared_prefs/1.txt
/data/data/com.mx.browser # touch app_thumbnails/1.txt
/data/data/com.mx.browser # touch cache/1.txt
/data/data/com.mx.browser # touch app_webIcons/1.txt
/data/data/com.mx.browser # touch app_appcache/1.txt
/data/data/com.mx.browser # touch app_databases/1.txt
/data/data/com.mx.browser # touch app_geolocation/1.txt
</code>
执行清理数据操作。
查看执行清理数据操作后的结果。
<code>bash
/data/data/com.mx.browser # ls
lib
/data/data/com.mx.browser #
</code></p>

<p>查看lib情况
<code>bash
/data/data/com.mx.browser # cd lib/
/data/data/com.mx.browser/lib # ls
1.txt
/data/data/com.mx.browser/lib #
</code></p>

<p>总上所述，发现系统中的设置，应用中的清理数据，会清理掉除去lib文件夹（含内部文件）的文件及文件夹。
p.s./sdcard/Android/data/这个目录也是和包名相关的，但是系统中的清理数据不会清理掉这个目录中的相关信息。</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[检查Android是否具有摄像头]]></title>
    <link href="http://droidyue.com/blog/2014/06/14/check-camera-in-android/"/>
    <updated>2014-06-14T15:57:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/06/14/check-camera-in-android</id>
    <content type="html"><![CDATA[<p>通常我们进行摄像头操作，如扫描二维码需要判断是否有后置摄像头(Rear camera)，比如Nexus 7 一代就没有后置摄像头，这样在尝试使用的时候，我们需要进行判断进行一些提示或者处理。</p>

<!-- more -->


<p>以下代码为一系列的方法，用来判断是否有前置摄像头（Front Camera），后置摄像头。</p>

<p>```java
private static boolean checkCameraFacing(final int facing) {</p>

<pre><code>if (getSdkVersion() &lt; Build.VERSION_CODES.GINGERBREAD) {
    return false;
}
final int cameraCount = Camera.getNumberOfCameras();
CameraInfo info = new CameraInfo();
for (int i = 0; i &lt; cameraCount; i++) {
    Camera.getCameraInfo(i, info);
    if (facing == info.facing) {
        return true;
    }
}
return false;
</code></pre>

<p>}</p>

<p>public static boolean hasBackFacingCamera() {</p>

<pre><code>final int CAMERA_FACING_BACK = 0;
return checkCameraFacing(CAMERA_FACING_BACK);
</code></pre>

<p>}</p>

<p>public static boolean hasFrontFacingCamera() {</p>

<pre><code>final int CAMERA_FACING_BACK = 1;
return checkCameraFacing(CAMERA_FACING_BACK);
</code></pre>

<p>}</p>

<p>public static int getSdkVersion() {</p>

<pre><code>return android.os.Build.VERSION.SDK_INT;
</code></pre>

<p>}
```
注意：由于getNumberOfCameras以及getCameraInfo均为API 9 引入，所以方法只适用于2.3及其以上。</p>

<p>延伸阅读：<a href="http://developer.android.com/reference/android/hardware/Camera.html">http://developer.android.com/reference/android/hardware/Camera.html</a>
<a href="http://developer.android.com/reference/android/hardware/Camera.CameraInfo.html">http://developer.android.com/reference/android/hardware/Camera.CameraInfo.html</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android NinePatch Attention]]></title>
    <link href="http://droidyue.com/blog/2014/04/26/android-ninepatch-attention/"/>
    <updated>2014-04-26T12:23:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/04/26/android-ninepatch-attention</id>
    <content type="html"><![CDATA[<p>I have got many crash report data about using NinePath Drwable. I put a .9.png file into the drawable-xhdpi folder and the file did not exist in any other folder. And I got ResourceNotFoundException. I got this following sayings.</p>

<!-- more -->


<blockquote><p>A NinePatchDrawable graphic is a stretchable bitmap image, which Android will automatically resize to accommodate the contents of the View in which you have placed it as the background. An example use of a NinePatch is the backgrounds used by standard Android buttons — buttons must stretch to accommodate strings of various lengths. A NinePatch drawable is a standard PNG image that includes an extra 1-pixel-wide border. <strong>It must be saved with the extension .9.png, and saved into the res/drawable/ directory of your project.</strong>
<a href="http://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch">http://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch</a></p></blockquote>

<p>The .9.png files must be saved into the res/drawable directory. Why? I guess the legacy Resouce Loading System implemententation may result in this issue. So at least put one .9.png file into the drawable folder.</p>
]]></content>
  </entry>
  
</feed>

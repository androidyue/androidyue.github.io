<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: PreferredApplication | 技术小黑屋]]></title>
  <link href="http://droidyue.com/blog/categories/preferredapplication/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2016-03-19T18:59:32+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Set The Preferred Application in Android]]></title>
    <link href="http://droidyue.com/blog/2014/01/12/set-the-preferred-application-in-android/"/>
    <updated>2014-01-12T14:29:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/01/12/set-the-preferred-application-in-android</id>
    <content type="html"><![CDATA[<p>A great application should provide a function to let users set it as the preferred or default application. In this post, I will make a description on PreferredApplication<br/>
Before an application is about to be set as default, it has two possibilities. One is that there is already a default application and the other is no default application.</p>

<!--more-->


<h3>Detect the Default Application Exists or Not</h3>

<p>This is really important. It determines what we should do next.
```java</p>

<pre><code>public void testGetDefaultActivity() {
    PackageManager pm = mContext.getPackageManager();
    Intent intent = new Intent(Intent.ACTION_VIEW);
    intent.setData(Uri.parse("http://www.google.com"));
    ResolveInfo info = pm.resolveActivity(intent, PackageManager.MATCH_DEFAULT_ONLY);
    Log.i(VIEW_LOG_TAG, "getDefaultActivity info = " + info + ";pkgName = " + info.activityInfo.packageName);
</code></pre>

<p>}
<code>
Result before I set Maxthon Browser as the default one. If no default one is set, the system will call the com.android.internal.app.ResolverActivity
</code>java
I/View    ( 1145 ): View getDefaultActivity info = ResolveInfo{410e4868 com.android.internal.app.ResolverActivity p=0 o=0 m=0x0};pkgName = android
<code>
Result after I set Maxthon Browser as the default one. If the default one is set just call the default activity
</code>java
I/View    ( 1145 ): View getDefaultActivity info = ResolveInfo{410ae1e8 com.mx.browser.MxBrowserActivity p=0 o=0 m=0x208000};pkgName = com.mx.browser
<code>
So it is really clear that you could use the following code to judge.
</code>
//Use this to determine whether default application is set or not
boolean defaultSet = !&ldquo;android&rdquo;.equals(info.activityInfo.packageName);
```</p>

<h3>If the default one is already set</h3>

<p>Just remove the preferred settings of the default application. However you could not do this in the code due to the permission control. It&rsquo;s generally done by users manually. What you could do is lead the user to the clear default page(installedAppDetails)
```java
public void testStartAppDetails() {</p>

<pre><code>//Use the destination package name
Intent intent = new Intent(android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS, Uri.parse("package:com.mx.browser"));
getActivity().startActivity(intent);
</code></pre>

<p>}
```
Then you navigate the user to the installedAppDetails and you could show some tips to click Button Clear Default.
<img class="<a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/choose_default_activity_dialog.png">http://7jpolu.com1.z0.glb.clouddn.com/choose_default_activity_dialog.png</a>" title="installed app details clear default" >
When users go back from installedAppDetails to your application check is there any default appliction now. If the default application(in general, it&rsquo;s not the previous one) remains repeat the above actions until there is not default one.</p>

<h3>No default One</h3>

<p>Now there is only one step to set ours as the default one. You could not do this in codes. It&rsquo;s also required manual operation. What you could do is popup the selecting dialog and tip the use select your one.</p>

<p>```java
public void testStartChooseDialog() {</p>

<pre><code>Intent intent = new Intent();
intent.setAction("android.intent.action.VIEW");
intent.addCategory("android.intent.category.BROWSABLE");
intent.setData(Uri.parse("http://androidyue.github.io/"));
intent.setComponent(new ComponentName("android","com.android.internal.app.ResolverActivity"));
getActivity().startActivity(intent);
</code></pre>

<p>}
```
The dialog is like this <br/>
<img class="<a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/choose_default_activity_dialog.png">http://7jpolu.com1.z0.glb.clouddn.com/choose_default_activity_dialog.png</a>" title="choose default activity dialog" ><br/>
What&rsquo;s more, your tips is really essential. Make sure to notify that  &ldquo;Use by default for this action&rdquo; should be  checked.</p>

<h3>How to Clear my own default</h3>

<p>```java
public void testClearDefault() {</p>

<pre><code>PackageManager pm = mContext.getPackageManager();
pm.clearPackagePreferredActivities(mContext.getPackageName());
</code></pre>

<p>}
```
Note you could only clear packagePreferredActivities of your own.</p>

<h3>A step into system control</h3>

<p>the following settings is some content of /data/system/packages.xml
<code>xml
&lt;preferred-activities&gt;
&lt;item name="com.mx.browser/.MxBrowserActivity" match="200000" set="2"&gt;
&lt;set name="com.android.browser/.BrowserActivity" /&gt;
&lt;set name="com.mx.browser/.MxBrowserActivity" /&gt;
&lt;filter&gt;
&lt;action name="android.intent.action.VIEW" /&gt;
&lt;cat name="android.intent.category.BROWSABLE" /&gt;
&lt;cat name="android.intent.category.DEFAULT" /&gt;
&lt;scheme name="http" /&gt;
&lt;/filter&gt;
&lt;/item&gt;
&lt;/preferred-activities&gt;
</code></p>

<h3>Special</h3>

<ul>
<li>What will system do if I install or uninstall a related  application?</li>
<li>Actually the system provide you a special chance to rechoose if a related activity is added or removed. When you click the url it should popup a dialog not use the previous preferred activity.</li>
<li>When the system popup the choosing dialog?</li>
<li>After some tests I guess the system will make  a list of  interested activities instantly. And then use the previous list to compare with the list stored in /data/system/packages.xml. If they are not the same, the choose dialog should be poped up.</li>
</ul>


<h3>Others</h3>

<ul>
<li><a href="http://www.amazon.com/gp/product/B00K5B5Q80/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00K5B5Q80&linkCode=as2&tag=droidyueblog-20&linkId=LEBXDOQDCPOPP5AJ">Android Hacker&rsquo;s Handbook</a><img src="http://ir-na.amazon-adsystem.com/e/ir?t=droidyueblog-20&l=as2&o=1&a=B00K5B5Q80" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>

]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 书籍 | 技术小黑屋]]></title>
  <link href="http://droidyue.com/blog/categories/shu-ji/atom.xml" rel="self"/>
  <link href="http://droidyue.com/"/>
  <updated>2016-01-24T15:22:10+08:00</updated>
  <id>http://droidyue.com/</id>
  <author>
    <name><![CDATA[androidyue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[9本Java程序员必读的书]]></title>
    <link href="http://droidyue.com/blog/2014/11/30/java-programmer-must-read-these-9-books/"/>
    <updated>2014-11-30T10:38:00+08:00</updated>
    <id>http://droidyue.com/blog/2014/11/30/java-programmer-must-read-these-9-books</id>
    <content type="html"><![CDATA[<p>本文列出的9本书在Java程序员界都是被认为很棒的书。当一个程序员开始初学Java时，他的第一个问题应该是如何选择一本书来作为指导学习Java。这个问题也就表明，相对于其他的教程和博客，Java书籍还是很重要的参考，主要表现在以下两点</p>

<ul>
<li>通常书籍是由比较权威的程序员来撰写的。</li>
<li>相比其他媒介，书籍对于内容的描述更加详细，解释更加明确。</li>
</ul>


<p>本文列出的九本书是我个人非常喜欢的Java书籍，当我有时间的时候，我就会将它们捧在手里阅读。甚至有些书我反复读过很多遍，每次重新读的时候总会有新的收获。因此这些书也是大部分Java程序员喜欢的书籍。</p>

<!--more-->


<h2>Head First Java</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/head_first_java.jpg">http://7jpolu.com1.z0.glb.clouddn.com/head_first_java.jpg</a>" title="&ldquo;head first java&rdquo;" ></p>

<p>Head First Java是所有编程或者Java初学者最适合的书籍，我很喜欢轻松和寓教于乐的Head First风格，这应该是最有意思的关于Java的书。无论是初级，中级还是高级都能从中有所收获。学习本书，你可以了解到类，对象，线程，集合等编程知识，还可以了解到泛型，枚举，可变参数和自动装箱等语言特性。本书中还涉及到了Java高级编程中的Swing，网络编程，IO操作等，可以让初学者对Java有比较完整地概念。如果你是一位Java初学者，不要犹豫，这本书最适合你了。<br/>
查看详细: <a href="http://www.amazon.cn/gp/product/B0011ESWGI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011ESWGI&linkCode=as2&tag=droidyue-23" class="post_inner_book">Head First Java</a></p>

<h2>Head First 设计模式</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/head_first_design_patterns.jpg">http://7jpolu.com1.z0.glb.clouddn.com/head_first_design_patterns.jpg</a>" title="&ldquo;head first design pattern&rdquo;" >
Head First设计模式又是一部Head First系列的书籍。作者为Kathy Sierra及其团队。当我在2006年开始读这本书的时候，我对设计模式并不是很了解。设计模式解决什么问题，怎么解决问题，如何使用设计模式，设计模式有什么好处，这些问题我几乎都无法回答出来。但是当我读完这本书的时候，一切都豁然开朗。在本书介绍继承和组合一章，使用简单有趣的例子，一步一步提出问题并解决问题，最终得出最优解。本书中会有很多要点总结，幽默对话，练习题还有有名的单词接龙等帮助你更好地了解设计模式。如果你想了解Java中的设计模式，请带走这本书。<br/>
查看详细：<a class="post_inner_book" href="http://www.amazon.cn/gp/product/B0011FBU34/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011FBU34&linkCode=as2&tag=droidyue-23">Head First 设计模式</a></p>

<h2>Effective Java</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/effective_java.jpg">http://7jpolu.com1.z0.glb.clouddn.com/effective_java.jpg</a>" title="&ldquo;Effective Java&rdquo;" >
Effective Java这本书也是一本我最喜欢的。本书为领导开发Java集合框架和并发API包的 约书亚·布洛克 大神所著。本书适合于有着数年开发经验Java程序员，通过本书我们可以很多编程中的最佳实践，并且可以从JDK贡献者布洛克大神这里汲取经验。Effective Java从质量，内容和问题解答方式上来说都是一本评价很高的书，因此读这本书会是一种感觉很棒的体验。另外本书的章节相对比较轻量，与其他章节耦合度较低，因此在旅行或者闲暇时间阅读也是可以的。在内容方面，Effective Java包含了从静态工厂，序列化，equals和hashcode到泛型，枚举，可变参数以及反射的最佳解决方法。本书对Java各方面知识点的讲解会让你受益匪浅。<br/>
查看详细：<a class="post_inner_book"  href="http://www.amazon.cn/gp/product/B001PTGR52/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B001PTGR52&linkCode=as2&tag=droidyue-23">Effective Java</a></p>

<h2>Java并发编程实战</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/java_concurrency_in_practice.jpg">http://7jpolu.com1.z0.glb.clouddn.com/java_concurrency_in_practice.jpg</a>" title="&ldquo;Java并发编程实战&rdquo;" >
又一部 约书亚·布洛克 大神的经典之作，当然本书的另一位主作者为 Doug Lea（影响两次Java历史上的大变革的大神）。这本书几乎就是Java并发和多线程编程方面的权威，同时也是核心Java开发人员必读的一本书。本书的强大主要表现在</p>

<ul>
<li>本书非常详细地描述了多线程和并发中的诸多(小)细节。</li>
<li>本书并非聚焦于核心Java代码的实现，而是关注并发引起的问题，比如死锁，饥饿，线程安全，竞争条件，然后提供可行的方法来解决这些问题。因此这本书可以很好地帮助开发者了解并掌握并发包以及其中的CountDownLatch，CyclicBarrier，BlockingQueue，Semaphore这些类。这也是我一遍一遍阅读这本书的原因。</li>
<li>书中的例子简明扼要清晰，很能描述问题。</li>
<li>解释明确：本书很好地解释了什么是错的，为什么错，怎样改正。这也是本书畅销的原因之一。</li>
</ul>


<p>查看详细：<a  class="post_inner_book" href="http://www.amazon.cn/gp/product/B0077K9XHW/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0077K9XHW&linkCode=as2&tag=droidyue-23">Java并发编程实战</a></p>

<h2>Java Generics and Collections</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/java_generics_and_collections.jpeg">http://7jpolu.com1.z0.glb.clouddn.com/java_generics_and_collections.jpeg</a>" title="&ldquo;Java Generics and Collections&rdquo;" >
这本书是来自O'Reilly的一本成功之作，作者为Naftalin和Philip Wadler。正如书名可知，这本书的内容关注于泛型和集合这两个Java语言的核心方面。本书对于那些有编程经验的程序员加强对集合和泛型的理解和掌握有很大的帮助。本书详细介绍了每一个集合的API，Set, List, Map, Queue，以及他们的实现，对比不同场景下它们的性能优劣。每个章节最后的对比图表很不错。<br/>
查看详细:<a  class="post_inner_book" href="http://www.amazon.cn/gp/product/0596527756/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=0596527756&linkCode=as2&tag=droidyue-23">Java Generics and Collections</a></p>

<h2>Java性能优化权威指南</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/java_performance.jpg">http://7jpolu.com1.z0.glb.clouddn.com/java_performance.jpg</a>" title="&ldquo;Java性能优化权威指南&rdquo;" >
本书为我个人的最爱，本书重点关注性能监视，性能剖析以及如何使用工具对性能分析。本书不同于其他的编程书籍，因为本书中涉及到很多Java虚拟机的细节，垃圾回收机制，Java堆内存监视以及对程序性能剖析。其中讲述JVM的章节写的很不错，很值得咀嚼。注意，这本书属于编程高级层次，阅读需要具有足够的Java编程经验。初级和中级Java开发者也可以阅读本书也会学到不同程度的干货。所以，你想进行性能调优，把这本书放到你的书架上吧。<br/>
查看详细:<a class="post_inner_book" href="http://www.amazon.cn/gp/product/B00IOB0K1Q/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IOB0K1Q&linkCode=as2&tag=droidyue-23">Java性能优化权威指南</a></p>

<h2>Java Puzzlers</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/java_puzzlers.jpg">http://7jpolu.com1.z0.glb.clouddn.com/java_puzzlers.jpg</a>" title="&ldquo;Java Puzzlers&rdquo;" >
再介绍一本 约书亚·布洛克 大神写的书。本书的另一位作者为Neal Gafter（已转到微软做Donet Compiler技术Lead）。本书讲述了Java语言中的极端情况和陷阱。相对于C++，Java更加安全低风险，JVM有着垃圾回收机制，让Java程序员不用关心内存分配和释放，大大提高了程序的开发效率。但是有些时候，即便是经验丰富的程序员也会被Java中的极端情况或陷阱给绊倒。本书列举并详细描述了Java中的这些陷阱。如果你喜欢刨根问底，钻牛角尖，这本书就是为你而写。通过本书，你可以了解很多java的核心知识并对自己的Java水平有所知晓。本人更加喜欢上面提到的 约书亚·布洛克 的 Effective Java 和 Concurrency Practice in Java。但是如果你感兴趣，还是可以去尝试的。为了让收获最大化，你可以先尝试解决书中的问题，然后对着书中的解释进行比较。<br/>
查看详细:<a class="post_inner_book" href="http://www.amazon.cn/gp/product/032133678X/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=032133678X&linkCode=as2&tag=droidyue-23">Java Puzzlers</a></p>

<h2>Head First Object Oriented Analysis and Design</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/head_first_object_oriented_analysis_design.jpg">http://7jpolu.com1.z0.glb.clouddn.com/head_first_object_oriented_analysis_design.jpg</a>" title="&ldquo;Head First Object Oriented Analysis and Design&rdquo;" >
这是一本属于Head First系列的关于面向对象编程的书。本书建议和Head First设计模式结合阅读，效果更佳。本书关注于面向对象设计原则，比如多用组合少用继承，针对接口编程而非针对实现编程，不要重复你自己等。这本书可以帮助你写出好代码并且参考最佳实践进行优化改善。当然本书中的内容也适合使用其他面向对象的语言的程序员。想学好面向对象编码和设计规则，现在就开始读这本书哈。<br/>
查看详细:<a class="post_inner_book" href="http://www.amazon.cn/gp/product/0596008678/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=0596008678&linkCode=as2&tag=droidyue-23">Head First Object Oriented Analysis and Design</a></p>

<h2>Thinking in Java</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/thinking_in_java.jpg">http://7jpolu.com1.z0.glb.clouddn.com/thinking_in_java.jpg</a>" title="&ldquo;Thinking in Java&rdquo;" >
Thinking in Java book应该是Java中文界最有名的书籍了，中文又名 Java编程思想。作者为Bruce Eckel，他也是Thinking in C++的作者，他用自己很独特的观点讲述了Java。据我所知，这本书获得了很高的认可，本书是一本介绍齐全的Java学习参考书。如果你不喜欢Head First类似小人书那样的讲解，可以尝试这本书。本书的内容讲解详细，成熟（相对Head First有种教科书的感觉）。<br/>
查看详细:<a class="post_inner_book" href="http://www.amazon.cn/gp/product/B0011F7WU4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F7WU4&linkCode=as2&tag=droidyue-23">Thinking in Java</a></p>

<h2>Java程序员修炼之道</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/java_programming_xiulianzhidao.jpg">http://7jpolu.com1.z0.glb.clouddn.com/java_programming_xiulianzhidao.jpg</a>" title="&ldquo;Java程序员修炼之道&rdquo;" >
《Java程序员修炼之道》分为四部分，第一部分全面介绍Java 7的新特性，第二部分探讨Java关键编程知识和技术，第三部分讨论JVM上的新语言和多语言编程，第四部分将平台和多语言编程知识付诸实践。从介绍Java 7的新特性入手，《Java程序员修炼之道》涵盖了Java开发中最重要的技术，比如依赖注入、测试驱动的开发和持续集成，探索了JVM上的非Java语言，并详细讲解了多语言项目， 特别是涉及Groovy、Scala和Clojure语言的项目。此外，书中含有大量代码示例，帮助读者从实践中理解Java语言和平台。《Java程序员修炼之道》适合Java开发人员以及对Java7和JVM新语言感兴趣的各领域人士阅读。
查看详细：<a class="post_inner_book" href="http://www.amazon.cn/gp/product/B00E0D2OX4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00E0D2OX4&linkCode=as2&tag=droidyue-23">Java程序员修炼之道</a></p>

<h2>Java核心技术</h2>

<p><img class="left <a" src="href="http://7jpolu.com1.z0.glb.clouddn.com/java_core_218.jpg">http://7jpolu.com1.z0.glb.clouddn.com/java_core_218.jpg</a>" title="&ldquo;Java核心技术&rdquo;" >
Java领域最有影响力和价值的著作之一，拥有20多年教学与研究经验的资深Java技术专家撰写（获Jolt大奖），与《Java编程思想》齐名，10余年全球畅销不衰，广受好评。）根据Java SE 7全面更新，系统全面讲解Java语言的核心概念、语法、重要特性和开发方法，包含大量案例，实践性强。</p>

<p>查看详细：<a class="post_inner_book" href="http://www.amazon.cn/gp/product/B00IK7SM6O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00IK7SM6O&linkCode=as2&tag=droidyue-23">Java核心技术</a></p>

<p>这就是我的关于Java编程相关的推荐的书，这些都可以说是看成经典中的经典。像Effective Java 和 Head First 系列我已经反复阅读了很多遍。相信看完本文，根据自己的水平和想要提升的知识侧重，你应该能选出最适合自己的书了。</p>

<h2>关于翻译</h2>

<p>本文原文为<a href="http://javarevisited.blogspot.com/2013/01/top-5-java-programming-books-best-good.html">http://javarevisited.blogspot.com/2013/01/top-5-java-programming-books-best-good.html</a></p>

<p>译文再原文基础上采用意译较多，并在某些地方进行了些许修改。</p>
]]></content>
  </entry>
  
</feed>
